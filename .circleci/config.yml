aliases:
  - &node_executor
      executor:
        name: node/node
        node-version: "10"

  - &release_filter
      branches:
        only:
          - master

  - &pull_request_filter
      branches:
        ignore:
          - master

version: 2.1

orbs:
  ci: bigcommerce/internal@volatile
  node: bigcommerce/internal-node@volatile
  checkout-sdk-js:
    commands:
      install_dependencies:
        steps:
          - restore_cache:
              keys:
                - checkout-sdk-js
          - run:
              name: "Install NPM dependencies"
              command: npm ci
          - save_cache:
              key: checkout-sdk-js
              paths:
                - ~/.npm

jobs:
  test:
    <<: *node_executor
    steps:
      - ci/pre-setup
      - checkout-sdk-js/install_dependencies
      - run:
          name: "Run unit tests"
          command: npm run test:series -- --coverage
      - store_artifacts:
          path: coverage
          destination: coverage

  build:
    <<: *node_executor
    steps:
      - ci/pre-setup
      - checkout-sdk-js/install_dependencies
      - run:
          name: "Run linter"
          command: npm run lint
      - run:
          name: "Build distribution files"
          command: npm run build && npm run docs
      - persist_to_workspace:
          root: .
          paths:
            - dist
            - docs

  validate_commits:
    <<: *node_executor
    steps:
      - ci/pre-setup
      - ci/merge-base
      - run:
          name: "Validate commits"
          command: "[ -z $MERGE_BASE_SHA1 ] || npx @bigcommerce/validate-commits $MERGE_BASE_SHA1..$CIRCLE_SHA1"

  release:
    <<: *node_executor
    steps:
      - ci/pre-setup
      - checkout-sdk-js/install_dependencies
      - run:
          name: "Configure Git user"
          command: |
            git config user.email $GIT_USER_EMAIL
            git config user.name $GIT_USER_NAME
      - run:
          name: "Remove old release files"
          command: rm -rf dist docs
      - attach_workspace:
          at: .
      - run:
          name: "Create and tag new release"
          command: npm run release:version
      - run:
          name: "Push commits and tag to GitHub"
          command: |
            git push --follow-tags origin $CIRCLE_BRANCH
      - run:
          name: "Export release version to file"
          command: echo "export RELEASE_VERSION=$(git describe --abbrev=0)" > /tmp/release_version.txt
      - persist_to_workspace:
          root: /tmp
          paths:
            - release_version.txt
      - run:
          name: "Publish release to NPM"
          command: |
            echo "//registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN" > .npmrc
            npm publish

  update_server:
    <<: *node_executor
    steps:
      - ci/pre-setup
      - checkout-sdk-js/install_dependencies
      - attach_workspace:
          at: /tmp
      - run:
          name: "Build and push distribution files to static server repository"
          command: |
            source /tmp/release_version.txt
            scripts/circleci/update-server.sh

workflows:
  version: 2

  pull_request:
    jobs:
      - test:
          filters:
            <<: *pull_request_filter
      - build:
          filters:
            <<: *pull_request_filter
      - validate_commits:
          filters:
            <<: *pull_request_filter

  release:
    jobs:
      - test:
          filters:
            <<: *release_filter
      - build:
          filters:
            <<: *release_filter
      - approve:
          filters:
            <<: *release_filter
          type: approval
          requires:
            - test
            - build
      - release:
          filters:
            <<: *release_filter
          requires:
            - approve
      - update_server:
          filters:
            <<: *release_filter
          requires:
            - approve
            - release
