{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://@bigcommerce/checkout-sdk/external commonjs \"iframe-resizer\"","webpack://@bigcommerce/checkout-sdk/external commonjs \"iframe-resizer/js/iframeResizer.contentWindow\"","webpack://@bigcommerce/checkout-sdk/webpack/bootstrap","webpack://@bigcommerce/checkout-sdk/webpack/runtime/define property getters","webpack://@bigcommerce/checkout-sdk/webpack/runtime/hasOwnProperty shorthand","webpack://@bigcommerce/checkout-sdk/webpack/runtime/make namespace object","webpack://@bigcommerce/checkout-sdk/external commonjs \"tslib\"","webpack://@bigcommerce/checkout-sdk/./packages/core/src/common/error/errors/invalid-argument-error.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/common/error/errors/standard-error.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/common/utility/set-prototype-of.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/common/url/parse-url.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/common/utility/bind-decorator.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/common/iframe/is-iframe-event.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/common/iframe/iframe-event-listener.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/common/url/append-www.ts","webpack://@bigcommerce/checkout-sdk/external commonjs \"rxjs\"","webpack://@bigcommerce/checkout-sdk/external commonjs \"rxjs/operators\"","webpack://@bigcommerce/checkout-sdk/./packages/core/src/common/iframe/iframe-event-poster.ts","webpack://@bigcommerce/checkout-sdk/external commonjs \"lodash\"","webpack://@bigcommerce/checkout-sdk/./packages/core/src/extension/extension-commands.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/extension/extension-events.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/extension/extension-internal-commands.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/extension/extension-internal-events.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/extension/extension-service.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/extension/initialize-extension-service.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/common/iframe/iframe-resizer.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/extension/iframe-resizer-setup.ts"],"sourcesContent":["module.exports = require(\"iframe-resizer\");","module.exports = require(\"iframe-resizer/js/iframeResizer.contentWindow\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"tslib\");","import StandardError from './standard-error';\n\n/**\n * This error should be thrown when a method is unable to proceed because the\n * caller has not provided all the arguments according to their requirements,\n * i.e.: if an argument is missing or it is not the expected data type.\n */\nexport default class InvalidArgumentError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Invalid arguments have been provided.');\n\n        this.name = 'InvalidArgumentError';\n        this.type = 'invalid_argument';\n    }\n}\n","import { setPrototypeOf } from '../../utility';\n\nimport CustomError from './custom-error';\n\n/**\n * This error type should not be constructed directly. It is a base class for\n * all custom errors thrown in this library.\n */\nexport default abstract class StandardError extends Error implements CustomError {\n    name = 'StandardError';\n    type = 'standard';\n\n    constructor(message?: string) {\n        super(message || 'An unexpected error has occurred.');\n\n        setPrototypeOf(this, new.target.prototype);\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, new.target);\n        } else {\n            this.stack = new Error(this.message).stack;\n        }\n    }\n}\n","export default function setPrototypeOf(object: any, prototype: object) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else {\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n","import { InvalidArgumentError } from '../error/errors';\n\nimport Url from './url';\n\nexport default function parseUrl(url: string): Url {\n    if (!/^(https?:)?\\/\\//.test(url)) {\n        throw new InvalidArgumentError('The provided URL must be absolute.');\n    }\n\n    // new URL() is not supported in IE11, use anchor tag instead\n    const anchor = document.createElement('a');\n\n    anchor.href = url;\n\n    // IE11 returns 80 or 443 for the port number depending on the URL scheme,\n    // even if the port number is not specified in the URL.\n    const port =\n        anchor.port && url.indexOf(`${anchor.hostname}:${anchor.port}`) !== -1 ? anchor.port : '';\n\n    return {\n        hash: anchor.hash,\n        hostname: anchor.hostname,\n        href: anchor.href,\n        origin: `${anchor.protocol}//${anchor.hostname}${port ? `:${port}` : ''}`,\n        pathname: anchor.pathname,\n        port,\n        protocol: anchor.protocol,\n        search: anchor.search,\n    };\n}\n","/**\n * Decorates a class or a method by binding all its prototype methods or itself\n * to the calling instance respectively.\n */\nfunction bindDecorator<T extends Method>(\n    target: object,\n    key: string,\n    descriptor: TypedPropertyDescriptor<T>,\n): TypedPropertyDescriptor<T>;\nfunction bindDecorator<T extends Constructor<object>>(target: T): T;\n\nfunction bindDecorator(target: any, key?: any, descriptor?: any): any {\n    if (!key || !descriptor) {\n        return bindClassDecorator(target);\n    }\n\n    return bindMethodDecorator(target, key, descriptor);\n}\n\nexport default bindDecorator;\n\n/**\n * Decorates a class by binding all its prototype methods to the calling\n * instance.\n */\nexport function bindClassDecorator<T extends Constructor<object>>(target: T): T {\n    const decoratedTarget = class extends target {};\n\n    Object.getOwnPropertyNames(target.prototype).forEach((key) => {\n        const descriptor = Object.getOwnPropertyDescriptor(target.prototype, key);\n\n        if (!descriptor || key === 'constructor') {\n            return;\n        }\n\n        Object.defineProperty(\n            decoratedTarget.prototype,\n            key,\n            bindMethodDecorator(target.prototype, key, descriptor),\n        );\n    });\n\n    return decoratedTarget;\n}\n\n/**\n * Decorates a method by binding it to the calling instance.\n */\nexport function bindMethodDecorator<T extends Method>(\n    _: object,\n    key: string,\n    descriptor: TypedPropertyDescriptor<T>,\n): TypedPropertyDescriptor<T> {\n    if (typeof descriptor.value !== 'function') {\n        return descriptor;\n    }\n\n    let method: T = descriptor.value;\n\n    return {\n        get() {\n            const boundMethod = method.bind(this) as T;\n\n            Object.defineProperty(this, key, {\n                ...descriptor,\n                value: boundMethod,\n            });\n\n            return boundMethod;\n        },\n        set(value) {\n            method = value;\n        },\n    };\n}\n\nexport type Constructor<T> = new (...args: any[]) => T;\nexport type Method = (...args: any[]) => any;\n","import IframeEvent from './iframe-event';\n\nexport default function isIframeEvent<TEvent extends IframeEvent<TType>, TType extends string>(\n    object: any,\n    type: TType,\n): object is TEvent {\n    return object.type === type;\n}\n","import { appendWww, parseUrl } from '../url';\nimport { bindDecorator as bind } from '../utility';\n\nimport { IframeEventMap } from './iframe-event';\nimport isIframeEvent from './is-iframe-event';\n\nexport default class IframeEventListener<\n    TEventMap extends IframeEventMap<keyof TEventMap>,\n    TContext = undefined,\n> {\n    private _isListening: boolean;\n    private _listeners: EventListeners<TEventMap, TContext>;\n    private _sourceOrigins: string[];\n\n    constructor(sourceOrigin: string) {\n        this._sourceOrigins = [\n            parseUrl(sourceOrigin).origin,\n            appendWww(parseUrl(sourceOrigin)).origin,\n        ];\n        this._isListening = false;\n        this._listeners = {};\n    }\n\n    listen(): void {\n        if (this._isListening) {\n            return;\n        }\n\n        this._isListening = true;\n\n        window.addEventListener('message', this._handleMessage);\n    }\n\n    stopListen(): void {\n        if (!this._isListening) {\n            return;\n        }\n\n        this._isListening = false;\n\n        window.removeEventListener('message', this._handleMessage);\n    }\n\n    addListener<TType extends keyof TEventMap>(\n        type: TType,\n        listener: (event: TEventMap[TType], context?: TContext) => void,\n    ): void {\n        let listeners = this._listeners[type];\n\n        if (!listeners) {\n            this._listeners[type] = listeners = [];\n        }\n\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    }\n\n    removeListener<TType extends keyof TEventMap>(\n        type: TType,\n        listener: (event: TEventMap[TType], context?: TContext) => void,\n    ): void {\n        const listeners = this._listeners[type];\n\n        if (!listeners) {\n            return;\n        }\n\n        const index = listeners.indexOf(listener);\n\n        if (index >= 0) {\n            listeners.splice(index, 1);\n        }\n    }\n\n    trigger<TType extends keyof TEventMap>(event: TEventMap[TType], context?: TContext): void {\n        const listeners = this._listeners[event.type];\n\n        if (!listeners) {\n            return;\n        }\n\n        listeners.forEach((listener) => (context ? listener(event, context) : listener(event)));\n    }\n\n    @bind\n    private _handleMessage(messageEvent: MessageEvent): void {\n        if (\n            this._sourceOrigins.indexOf(messageEvent.origin) === -1 ||\n            !isIframeEvent(messageEvent.data as TEventMap[keyof TEventMap], messageEvent.data.type)\n        ) {\n            return;\n        }\n\n        const { context, ...event } = messageEvent.data;\n\n        this.trigger(event, context);\n    }\n}\n\ntype EventListeners<TEventMap, TContext = undefined> = {\n    [key in keyof TEventMap]?: Array<(event: TEventMap[key], context?: TContext) => void>;\n};\n","import parseUrl from './parse-url';\nimport Url from './url';\n\nexport default function appendWww(url: Url): Url {\n    return parseUrl(\n        url.hostname.indexOf('www') === 0\n            ? url.href\n            : url.href.replace(url.hostname, `www.${url.hostname}`),\n    );\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"rxjs\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"rxjs/operators\");","import { fromEvent } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\n\nimport { parseUrl } from '../url';\n\nimport IframeEvent from './iframe-event';\nimport isIframeEvent from './is-iframe-event';\n\nexport interface IframeEventPostOptions<\n    TSuccessEvent extends IframeEvent,\n    TErrorEvent extends IframeEvent,\n> {\n    errorType?: TErrorEvent['type'];\n    successType?: TSuccessEvent['type'];\n}\n\nexport default class IframeEventPoster<TEvent, TContext = undefined> {\n    private _targetOrigin: string;\n\n    constructor(targetOrigin: string, private _targetWindow?: Window, private _context?: TContext) {\n        this._targetOrigin = targetOrigin === '*' ? '*' : parseUrl(targetOrigin).origin;\n    }\n\n    post(event: TEvent): void;\n    post<\n        TSuccessEvent extends IframeEvent = IframeEvent,\n        TErrorEvent extends IframeEvent = IframeEvent,\n    >(\n        event: TEvent,\n        options: IframeEventPostOptions<TSuccessEvent, TErrorEvent>,\n    ): Promise<TSuccessEvent>;\n    post<\n        TSuccessEvent extends IframeEvent = IframeEvent,\n        TErrorEvent extends IframeEvent = IframeEvent,\n    >(\n        event: TEvent,\n        options?: IframeEventPostOptions<TSuccessEvent, TErrorEvent>,\n    ): Promise<TSuccessEvent> | void {\n        const targetWindow = this._targetWindow;\n\n        if (window === targetWindow) {\n            return;\n        }\n\n        if (!targetWindow) {\n            throw new Error('Unable to post message because target window is not set.');\n        }\n\n        const result =\n            options &&\n            fromEvent<MessageEvent>(window, 'message')\n                .pipe(\n                    filter(\n                        (event) =>\n                            event.origin === this._targetOrigin &&\n                            isIframeEvent(event.data, event.data.type) &&\n                            [options.successType, options.errorType].indexOf(event.data.type) !==\n                                -1,\n                    ),\n                    map((event) => {\n                        if (options.errorType === event.data.type) {\n                            throw event.data;\n                        }\n\n                        return event.data;\n                    }),\n                    take(1),\n                )\n                .toPromise();\n\n        targetWindow.postMessage({ ...event, context: this._context }, this._targetOrigin);\n\n        return result;\n    }\n\n    setTarget(window: Window) {\n        this._targetWindow = window;\n    }\n\n    setContext(context: TContext) {\n        this._context = context;\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"lodash\");","export type ExtensionCommand =\n    | ReloadCheckoutCommand\n    | ShowLoadingIndicatorCommand\n    | SetIframeStyleCommand;\n\nexport enum ExtensionCommandType {\n    ReloadCheckout = 'EXTENSION:RELOAD_CHECKOUT',\n    ShowLoadingIndicator = 'EXTENSION:SHOW_LOADING_INDICATOR',\n    SetIframeStyle = 'EXTENSION:SET_IFRAME_STYLE',\n}\n\nexport interface ExtensionCommandContext {\n    extensionId: string;\n}\n\nexport interface ReloadCheckoutCommand {\n    type: ExtensionCommandType.ReloadCheckout;\n}\n\nexport interface ShowLoadingIndicatorCommand {\n    type: ExtensionCommandType.ShowLoadingIndicator;\n    payload: {\n        show: boolean;\n    };\n}\n\nexport interface SetIframeStyleCommand {\n    type: ExtensionCommandType.SetIframeStyle;\n    payload: {\n        style: {\n            [key: string]: string | number | null;\n        };\n    };\n}\n\nexport interface ExtensionCommandMap {\n    [ExtensionCommandType.ReloadCheckout]: ReloadCheckoutCommand;\n    [ExtensionCommandType.ShowLoadingIndicator]: ShowLoadingIndicatorCommand;\n    [ExtensionCommandType.SetIframeStyle]: SetIframeStyleCommand;\n}\n","import { Consignment } from '../shipping';\n\nexport enum ExtensionEventType {\n    ConsignmentsChanged = 'EXTENSION:CONSIGNMENTS_CHANGED',\n}\n\nexport interface ConsignmentsChangedEvent {\n    type: ExtensionEventType.ConsignmentsChanged;\n    payload: {\n        consignments: Consignment[];\n        previousConsignments: Consignment[];\n    };\n}\n\nexport type ExtensionEvent = ConsignmentsChangedEvent;\n\nexport interface ExtensionEventMap {\n    [ExtensionEventType.ConsignmentsChanged]: ConsignmentsChangedEvent;\n}\n","import { ExtensionEventType } from './extension-events';\n\nexport enum ExtensionInternalCommandType {\n    Subscribe = 'EXTENSION_INTERNAL:SUBSCRIBE',\n    Unsubscribe = 'EXTENSION_INTERNAL:UNSUBSCRIBE',\n    ResizeIframe = 'EXTENSION_INTERNAL:RESIZE_IFRAME',\n}\n\nexport interface ExtensionSubscribeCommand {\n    type: ExtensionInternalCommandType.Subscribe;\n    payload: {\n        extensionId: string;\n        eventType: ExtensionEventType;\n    };\n}\n\nexport interface ExtensionUnsubscribeCommand {\n    type: ExtensionInternalCommandType.Unsubscribe;\n    payload: {\n        extensionId: string;\n        eventType: ExtensionEventType;\n    };\n}\n\nexport interface ExtensionResizeIframeCommand {\n    type: ExtensionInternalCommandType.ResizeIframe;\n    payload: {\n        extensionId: string;\n    };\n}\n\nexport interface ExtensionInternalCommandMap {\n    [ExtensionInternalCommandType.Subscribe]: ExtensionSubscribeCommand;\n    [ExtensionInternalCommandType.Unsubscribe]: ExtensionUnsubscribeCommand;\n    [ExtensionInternalCommandType.ResizeIframe]: ExtensionResizeIframeCommand;\n}\n\nexport type ExtensionInternalCommand =\n    | ExtensionSubscribeCommand\n    | ExtensionUnsubscribeCommand\n    | ExtensionResizeIframeCommand;\n","export enum ExtensionInternalEventType {\n    ExtensionReady = 'EXTENSION:READY',\n    ExtensionFailed = 'EXTENSION:FAILED',\n}\n\nexport interface ExtensionReadyEvent {\n    type: ExtensionInternalEventType.ExtensionReady;\n}\n\nexport interface ExtensionFailedEvent {\n    type: ExtensionInternalEventType.ExtensionFailed;\n}\n\nexport type ExtensionInternalEvent = ExtensionReadyEvent | ExtensionFailedEvent;\n","import { noop } from 'lodash';\n\nimport { IframeEventListener, IframeEventPoster } from '../common/iframe';\n\nimport {\n    ExtensionCommand,\n    ExtensionCommandContext,\n    ExtensionCommandType,\n} from './extension-commands';\nimport { ExtensionEventMap, ExtensionEventType } from './extension-events';\nimport {\n    ExtensionInternalCommand,\n    ExtensionInternalCommandType,\n} from './extension-internal-commands';\nimport { ExtensionInternalEventType } from './extension-internal-events';\n\nexport default class ExtensionService {\n    private _extensionId?: string;\n\n    constructor(\n        private _eventListener: IframeEventListener<ExtensionEventMap>,\n        private _commandPoster: IframeEventPoster<ExtensionCommand, ExtensionCommandContext>,\n        private _internalCommandPoster: IframeEventPoster<ExtensionInternalCommand>,\n    ) {\n        this._commandPoster.setTarget(window.parent);\n        this._internalCommandPoster.setTarget(window.parent);\n    }\n\n    async initialize(extensionId: string): Promise<void> {\n        if (!extensionId) {\n            throw new Error('Extension Id not found.');\n        }\n\n        this._extensionId = extensionId;\n\n        this._eventListener.listen();\n        this._commandPoster.setContext({ extensionId });\n\n        try {\n            await this._internalCommandPoster.post(\n                {\n                    type: ExtensionInternalCommandType.ResizeIframe,\n                    payload: { extensionId },\n                },\n                {\n                    successType: ExtensionInternalEventType.ExtensionReady,\n                    errorType: ExtensionInternalEventType.ExtensionFailed,\n                },\n            );\n        } catch (event) {\n            if (this._isExtensionFailedEvent(event)) {\n                throw new Error(\n                    'Extension failed to load within 60 seconds; please reload and try again.',\n                );\n            }\n        }\n    }\n\n    post(command: ExtensionCommand): void {\n        if (!Object.values(ExtensionCommandType).includes(command.type)) {\n            throw new Error(`${command.type} is not supported.`);\n        }\n\n        this._commandPoster.post(command);\n    }\n\n    addListener(eventType: ExtensionEventType, callback: () => void = noop): () => void {\n        if (!this._extensionId) {\n            throw new Error('Extension is not initialized.');\n        }\n\n        const extensionId = this._extensionId;\n\n        if (!Object.values(ExtensionEventType).includes(eventType)) {\n            throw new Error(`${eventType} is not supported.`);\n        }\n\n        this._internalCommandPoster.post({\n            type: ExtensionInternalCommandType.Subscribe,\n            payload: { extensionId, eventType },\n        });\n\n        this._eventListener.addListener(eventType, callback);\n\n        return () => {\n            this._internalCommandPoster.post({\n                type: ExtensionInternalCommandType.Unsubscribe,\n                payload: { extensionId, eventType },\n            });\n\n            this._eventListener.removeListener(eventType, callback);\n        };\n    }\n\n    private _isExtensionFailedEvent(\n        event: any,\n    ): event is ExtensionInternalEventType.ExtensionFailed {\n        return event.type === ExtensionInternalEventType.ExtensionFailed;\n    }\n}\n","import {\n    IframeEventListener,\n    IframeEventPoster,\n    setupContentWindowForIframeResizer,\n} from '../common/iframe';\n\nimport { ExtensionCommand, ExtensionCommandContext } from './extension-commands';\nimport { ExtensionEventMap } from './extension-events';\nimport { ExtensionInternalCommand } from './extension-internal-commands';\nimport ExtensionService from './extension-service';\nimport { iframeResizerSetup } from './iframe-resizer-setup';\n\nexport interface InitializeExtensionServiceOptions {\n    extensionId: string;\n    parentOrigin: string;\n    taggedElementId?: string;\n    fixedHeight?: number;\n}\n\nexport default async function initializeExtensionService(\n    options: InitializeExtensionServiceOptions,\n): Promise<ExtensionService> {\n    const { extensionId, parentOrigin, taggedElementId, fixedHeight } = options;\n\n    setupContentWindowForIframeResizer();\n\n    const extension = new ExtensionService(\n        new IframeEventListener<ExtensionEventMap>(parentOrigin),\n        new IframeEventPoster<ExtensionCommand, ExtensionCommandContext>(parentOrigin),\n        new IframeEventPoster<ExtensionInternalCommand>(parentOrigin),\n    );\n\n    await extension.initialize(extensionId);\n\n    iframeResizerSetup(taggedElementId, fixedHeight);\n\n    return extension;\n}\n","import { IFrameComponent, IFrameOptions } from 'iframe-resizer';\n\nexport {\n    HeightCalculationMethod,\n    IFrameComponent,\n    IFrameMessageData,\n    IFrameObject,\n    IFrameOptions,\n    IFramePage,\n    IFramePageOptions,\n    IFrameResizedData,\n    IFrameScrollData,\n    PageInfo,\n    WidthCalculationMethod,\n} from 'iframe-resizer';\n\n// The reason why we are wrapping the original `iframeResizer` function imported\n// from the package is because the package sets up event listeners (window\n// resize etc...) as soon as the package is imported. Therefore, to defer the\n// side effect from happening until the function is actually being used, we are\n// importing the package inside this function. To minimise the chance of\n// importing the original package inadvertently, we are also re-exporting all of\n// its public interfaces. The re-exports do not cause any side effect because\n// they are plain TypeScript interfaces; meaning they are only used for type\n// checks rather than for code output.\nexport function iframeResizer(\n    options: IFrameOptions,\n    target: string | HTMLElement,\n): IFrameComponent[] {\n    /* eslint-disable @typescript-eslint/no-var-requires */\n    const { iframeResizer: originalIframeResizer } = require('iframe-resizer');\n\n    return originalIframeResizer(options, target);\n}\n\n// We also need to wrap the original `iframeResizer.contentWindow` because\n// similarly the package sets up event listeners as soon as the package gets\n// imported. Another reason is that if it is imported at the top level using a\n// regular import statement, it will be stripped out by Webpack as it is\n// considered as \"unused\", unless we explicitly mark it as a package that\n// produces side effects.\nexport function setupContentWindowForIframeResizer(): void {\n    require('iframe-resizer/js/iframeResizer.contentWindow');\n}\n","export interface IframeResizerWindow extends Window {\n    parentIFrame: {\n        autoResize: (isEnabled: boolean) => void;\n        setHeightCalculationMethod: (id: string) => void;\n        size: (height: number) => void;\n    };\n}\n\nexport function isIframeResizerWindow(window: Window): window is IframeResizerWindow {\n    return 'parentIFrame' in window;\n}\n\nexport function iframeResizerSetup(\n    taggedElementId: string | undefined,\n    fixedHeight: number | undefined,\n): void {\n    if (!isIframeResizerWindow(window)) {\n        throw new Error('iFramerResizer window not found.');\n    }\n\n    if (fixedHeight) {\n        window.parentIFrame.size(fixedHeight);\n    } else {\n        window.parentIFrame.autoResize(true);\n\n        if (taggedElementId) {\n            const element = document.getElementById(taggedElementId);\n\n            if (!element) {\n                throw new Error(`Element not found.`);\n            }\n\n            element.setAttribute('data-iframe-height', '');\n            window.parentIFrame.setHeightCalculationMethod('taggedElement');\n        } else {\n            window.parentIFrame.setHeightCalculationMethod('bodyOffset');\n        }\n    }\n}\n"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","message","name","type","object","setPrototypeOf","__proto__","Error","captureStackTrace","stack","parseUrl","url","test","anchor","document","createElement","href","port","indexOf","hostname","hash","origin","protocol","pathname","search","target","descriptor","bindMethodDecorator","decoratedTarget","getOwnPropertyNames","forEach","getOwnPropertyDescriptor","bindClassDecorator","_","method","boundMethod","bind","this","set","isIframeEvent","sourceOrigin","_sourceOrigins","replace","_isListening","_listeners","listen","window","addEventListener","_handleMessage","stopListen","removeEventListener","addListener","listener","listeners","push","removeListener","index","splice","trigger","event","context","messageEvent","data","targetOrigin","_targetWindow","_context","_targetOrigin","post","options","targetWindow","result","fromEvent","pipe","filter","successType","errorType","map","take","toPromise","postMessage","setTarget","setContext","ExtensionCommandType","ExtensionEventType","ExtensionInternalCommandType","ExtensionInternalEventType","_eventListener","_commandPoster","_internalCommandPoster","parent","initialize","extensionId","_extensionId","ResizeIframe","payload","ExtensionReady","ExtensionFailed","_isExtensionFailedEvent","command","values","includes","eventType","callback","Subscribe","Unsubscribe","initializeExtensionService","parentOrigin","taggedElementId","fixedHeight","extension","isIframeResizerWindow","parentIFrame","size","autoResize","element","getElementById","setAttribute","setHeightCalculationMethod","iframeResizerSetup"],"sourceRoot":""}