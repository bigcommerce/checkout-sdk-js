{"version":3,"file":"internal-mappers.js","mappings":"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","sources":["webpack://@bigcommerce/checkout-sdk/webpack/bootstrap","webpack://@bigcommerce/checkout-sdk/./packages/core/src/address/map-to-internal-address.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/billing/is-billing-address-like.ts","webpack://@bigcommerce/checkout-sdk/webpack/runtime/define property getters","webpack://@bigcommerce/checkout-sdk/webpack/runtime/hasOwnProperty shorthand","webpack://@bigcommerce/checkout-sdk/./packages/payment-integration-api/src/common/utility/amount-transformer.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/coupon/map-to-internal-coupon.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/coupon/map-to-internal-gift-certificate.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/promotion/map-to-discount-notifications.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/cart/map-to-internal-line-item.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/cart/map-to-internal-line-items.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/cart/map-gift-certificate-to-internal-line-item.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/cart/map-to-internal-cart.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/customer/map-to-internal-customer.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/order/map-to-internal-order.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/quote/map-to-internal-quote.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/shipping/map-to-internal-shipping-option.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/shipping/map-to-internal-shipping-options.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/common/utility/cache-key-maps.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/common/utility/cache-key-resolver.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","import { BillingAddress, isBillingAddressLike } from '../billing';\nimport { Consignment } from '../shipping';\n\nimport Address from './address';\nimport InternalAddress from './internal-address';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalAddress(\n    address: Address | BillingAddress,\n    consignments?: Consignment[],\n): InternalAddress<any> {\n    let addressId;\n\n    if (isBillingAddressLike(address)) {\n        addressId = address.id;\n    } else if (consignments && consignments.length) {\n        addressId = consignments[0].id;\n    }\n\n    return {\n        id: addressId,\n        firstName: address.firstName,\n        lastName: address.lastName,\n        company: address.company,\n        addressLine1: address.address1,\n        addressLine2: address.address2,\n        city: address.city,\n        province: address.stateOrProvince,\n        provinceCode: address.stateOrProvinceCode,\n        postCode: address.postalCode,\n        country: address.country,\n        countryCode: address.countryCode,\n        phone: address.phone,\n        customFields: address.customFields,\n    };\n}\n","import { Address } from '../address';\n\nimport BillingAddress from './billing-address';\n\nexport default function isBillingAddressLike(address: Address): address is BillingAddress {\n    const billingAddress = address as BillingAddress;\n\n    return typeof billingAddress.id !== 'undefined';\n}\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export default class AmountTransformer {\n    constructor(private _decimalPlaces: number) {}\n\n    toInteger(amount: number): number {\n        return Math.round(amount * 10 ** this._decimalPlaces);\n    }\n}\n","import Coupon from './coupon';\nimport InternalCoupon from './internal-coupon';\n\nconst couponTypes = [\n    'per_item_discount',\n    'percentage_discount',\n    'per_total_discount',\n    'shipping_discount',\n    'free_shipping',\n];\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalCoupon(coupon: Coupon): InternalCoupon {\n    return {\n        code: coupon.code,\n        discount: coupon.displayName,\n        discountType: couponTypes.indexOf(coupon.couponType),\n    };\n}\n","import GiftCertificate from './gift-certificate';\nimport InternalGiftCertificate from './internal-gift-certificate';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalGiftCertificate(\n    giftCertificate: GiftCertificate,\n): InternalGiftCertificate {\n    return {\n        code: giftCertificate.code,\n        discountedAmount: giftCertificate.used,\n        remainingBalance: giftCertificate.remaining,\n        giftCertificate: {\n            balance: giftCertificate.balance,\n            code: giftCertificate.code,\n            purchaseDate: giftCertificate.purchaseDate,\n        },\n    };\n}\n","import { DiscountNotification } from '../discount';\n\nimport { Promotion } from '.';\n\nexport default function mapToDiscountNotifications(\n    promotions?: Promotion[],\n): DiscountNotification[] {\n    const notifications: DiscountNotification[] = [];\n\n    (promotions || []).forEach((promotion) => {\n        (promotion.banners || []).forEach((banner) => {\n            notifications.push({\n                placeholders: [],\n                discountType: null,\n                message: '',\n                messageHtml: banner.text,\n            });\n        });\n    });\n\n    return notifications;\n}\n","import { AmountTransformer } from '@bigcommerce/checkout-sdk/payment-integration-api';\n\nimport InternalLineItem from './internal-line-item';\nimport { DigitalItem, LineItem } from './line-item';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalLineItem(\n    item: LineItem,\n    type: string,\n    decimalPlaces: number,\n    idKey: keyof LineItem = 'id',\n): InternalLineItem {\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: item[idKey] as string | number,\n        imageUrl: item.imageUrl,\n        amount: item.extendedListPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        discount: item.discountAmount,\n        integerAmount: amountTransformer.toInteger(item.extendedListPrice),\n        integerAmountAfterDiscount: amountTransformer.toInteger(item.extendedSalePrice),\n        integerDiscount: amountTransformer.toInteger(item.discountAmount),\n        integerUnitPrice: amountTransformer.toInteger(item.listPrice),\n        integerUnitPriceAfterDiscount: amountTransformer.toInteger(item.salePrice),\n        downloadsPageUrl: (item as DigitalItem).downloadPageUrl,\n        name: item.name,\n        quantity: item.quantity,\n        brand: item.brand,\n        sku: item.sku,\n        categoryNames: item.categoryNames,\n        variantId: item.variantId,\n        productId: item.productId,\n        attributes: (item.options || []).map((option) => ({\n            name: option.name,\n            value: option.value,\n        })),\n        addedByPromotion: item.addedByPromotion,\n        type,\n    };\n}\n","import InternalLineItem from './internal-line-item';\nimport { LineItem } from './line-item';\nimport LineItemMap from './line-item-map';\nimport mapGiftCertificateToInternalLineItem from './map-gift-certificate-to-internal-line-item';\nimport mapToInternalLineItem from './map-to-internal-line-item';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalLineItems(\n    itemMap: LineItemMap,\n    decimalPlaces: number,\n    idKey: keyof LineItem = 'id',\n): InternalLineItem[] {\n    return (Object.keys(itemMap) as Array<keyof LineItemMap>).reduce(\n        (result, key) => [\n            ...result,\n            ...(itemMap[key] as LineItem[]).map((item: any) => {\n                if (key === 'giftCertificates') {\n                    return mapGiftCertificateToInternalLineItem(item, decimalPlaces);\n                }\n\n                return mapToInternalLineItem(\n                    item,\n                    mapToInternalLineItemType(key),\n                    decimalPlaces,\n                    idKey,\n                );\n            }),\n        ],\n        [] as InternalLineItem[],\n    );\n}\n\nfunction mapToInternalLineItemType(type: string): string {\n    switch (type) {\n        case 'physicalItems':\n            return 'ItemPhysicalEntity';\n\n        case 'digitalItems':\n            return 'ItemDigitalEntity';\n\n        case 'giftCertificates':\n            return 'ItemGiftCertificateEntity';\n\n        default:\n            return '';\n    }\n}\n","import { AmountTransformer } from '@bigcommerce/checkout-sdk/payment-integration-api';\n\nimport InternalLineItem from './internal-line-item';\nimport { GiftCertificateItem } from './line-item';\n\nexport default function mapGiftCertificateToInternalLineItem(\n    item: GiftCertificateItem,\n    decimalPlaces: number,\n): InternalLineItem {\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: item.id,\n        imageUrl: '',\n        name: item.name,\n        amount: item.amount,\n        amountAfterDiscount: item.amount,\n        discount: 0,\n        integerAmount: amountTransformer.toInteger(item.amount),\n        integerAmountAfterDiscount: amountTransformer.toInteger(item.amount),\n        integerUnitPrice: amountTransformer.toInteger(item.amount),\n        integerUnitPriceAfterDiscount: amountTransformer.toInteger(item.amount),\n        integerDiscount: 0,\n        quantity: 1,\n        sender: item.sender,\n        recipient: item.recipient,\n        type: 'ItemGiftCertificateEntity',\n        attributes: [],\n        variantId: null,\n    };\n}\n","import { keyBy, reduce, some } from 'lodash';\n\nimport { AmountTransformer } from '@bigcommerce/checkout-sdk/payment-integration-api';\n\nimport { Checkout } from '../checkout';\nimport { mapToInternalCoupon, mapToInternalGiftCertificate } from '../coupon';\nimport { mapToDiscountNotifications } from '../promotion';\n\nimport InternalCart from './internal-cart';\nimport mapToInternalLineItems from './map-to-internal-line-items';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalCart(checkout: Checkout): InternalCart {\n    const decimalPlaces = checkout.cart.currency.decimalPlaces;\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: checkout.cart.id,\n        items: mapToInternalLineItems(checkout.cart.lineItems, decimalPlaces),\n        currency: checkout.cart.currency.code,\n        coupon: {\n            discountedAmount: reduce(\n                checkout.cart.coupons,\n                (sum, coupon) => {\n                    return sum + coupon.discountedAmount;\n                },\n                0,\n            ),\n            coupons: checkout.cart.coupons.map(mapToInternalCoupon),\n        },\n        discount: {\n            amount: checkout.cart.discountAmount,\n            integerAmount: amountTransformer.toInteger(checkout.cart.discountAmount),\n        },\n        discountNotifications: mapToDiscountNotifications(checkout.promotions),\n        giftCertificate: {\n            totalDiscountedAmount: reduce(\n                checkout.giftCertificates,\n                (sum, certificate) => {\n                    return sum + certificate.used;\n                },\n                0,\n            ),\n            appliedGiftCertificates: keyBy(\n                checkout.giftCertificates.map(mapToInternalGiftCertificate),\n                'code',\n            ),\n        },\n        shipping: {\n            amount: checkout.shippingCostTotal,\n            integerAmount: amountTransformer.toInteger(checkout.shippingCostTotal),\n            amountBeforeDiscount: checkout.shippingCostBeforeDiscount,\n            integerAmountBeforeDiscount: amountTransformer.toInteger(\n                checkout.shippingCostBeforeDiscount,\n            ),\n            required: some(\n                checkout.cart.lineItems.physicalItems,\n                (lineItem) => lineItem.isShippingRequired,\n            ),\n        },\n        subtotal: {\n            amount: checkout.subtotal,\n            integerAmount: amountTransformer.toInteger(checkout.subtotal),\n        },\n        storeCredit: {\n            amount: checkout.customer ? checkout.customer.storeCredit : 0,\n        },\n        taxSubtotal: {\n            amount: checkout.taxTotal,\n            integerAmount: amountTransformer.toInteger(checkout.taxTotal),\n        },\n        taxes: checkout.taxes,\n        taxTotal: {\n            amount: checkout.taxTotal,\n            integerAmount: amountTransformer.toInteger(checkout.taxTotal),\n        },\n        handling: {\n            amount: checkout.handlingCostTotal,\n            integerAmount: amountTransformer.toInteger(checkout.handlingCostTotal),\n        },\n        grandTotal: {\n            amount: checkout.grandTotal,\n            integerAmount: amountTransformer.toInteger(checkout.grandTotal),\n        },\n    };\n}\n","import { mapToInternalAddress } from '../address';\nimport { OrderBillingAddress } from '../order-billing-address/order-billing-address-state';\n\nimport InternalCustomer from './internal-customer';\n\nimport { Customer } from '.';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalCustomer(\n    customer: Customer,\n    billingAddress: OrderBillingAddress,\n): InternalCustomer {\n    const firstName = customer.firstName || billingAddress.firstName || '';\n    const lastName = customer.lastName || billingAddress.lastName || '';\n\n    return {\n        addresses: (customer.addresses || []).map((address) => mapToInternalAddress(address)),\n        customerId: customer.id,\n        isGuest: customer.isGuest,\n        storeCredit: customer.storeCredit,\n        email: customer.email || billingAddress.email || '',\n        firstName,\n        lastName,\n        name: customer.fullName || [firstName, lastName].join(' '),\n        customerGroupName: customer.customerGroup && customer.customerGroup.name,\n    };\n}\n","import { filter, find, keyBy, reduce } from 'lodash';\n\nimport { AmountTransformer } from '@bigcommerce/checkout-sdk/payment-integration-api';\n\nimport { LineItem, mapToInternalLineItems } from '../cart';\nimport { Checkout } from '../checkout';\nimport { mapToInternalCoupon } from '../coupon';\nimport { HOSTED } from '../payment';\n\nimport InternalOrder, {\n    InternalGiftCertificateList,\n    InternalIncompleteOrder,\n    InternalOrderPayment,\n    InternalSocialDataList,\n} from './internal-order';\nimport Order, {\n    GatewayOrderPayment,\n    GiftCertificateOrderPayment,\n    OrderPayment,\n    OrderPayments,\n} from './order';\nimport { OrderMetaState } from './order-state';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalOrder(\n    order: Order,\n    orderMeta: OrderMetaState = {},\n): InternalOrder {\n    const decimalPlaces = order.currency.decimalPlaces;\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: order.orderId,\n        items: mapToInternalLineItems(order.lineItems, order.currency.decimalPlaces, 'productId'),\n        orderId: order.orderId,\n        currency: order.currency.code,\n        customerCanBeCreated: order.customerCanBeCreated,\n        payment: mapToInternalOrderPayment(order.payments, orderMeta.payment),\n        subtotal: {\n            amount: order.baseAmount,\n            integerAmount: amountTransformer.toInteger(order.baseAmount),\n        },\n        coupon: {\n            discountedAmount: reduce(\n                order.coupons,\n                (sum, coupon) => {\n                    return sum + coupon.discountedAmount;\n                },\n                0,\n            ),\n            coupons: order.coupons.map(mapToInternalCoupon),\n        },\n        discount: {\n            amount: order.discountAmount,\n            integerAmount: amountTransformer.toInteger(order.discountAmount),\n        },\n        token: orderMeta.orderToken,\n        callbackUrl: orderMeta.callbackUrl,\n        discountNotifications: [],\n        giftCertificate: mapToGiftCertificates(order.payments),\n        socialData: mapToInternalSocialDataList(order),\n        status: order.status,\n        hasDigitalItems: order.hasDigitalItems,\n        isDownloadable: order.isDownloadable,\n        isComplete: order.isComplete,\n        shipping: {\n            amount: order.shippingCostTotal,\n            integerAmount: amountTransformer.toInteger(order.shippingCostTotal),\n            amountBeforeDiscount: order.shippingCostBeforeDiscount,\n            integerAmountBeforeDiscount: amountTransformer.toInteger(\n                order.shippingCostBeforeDiscount,\n            ),\n        },\n        storeCredit: {\n            amount: mapToStoreCredit(order.payments),\n        },\n        taxes: order.taxes,\n        taxTotal: {\n            amount: order.taxTotal,\n            integerAmount: amountTransformer.toInteger(order.taxTotal),\n        },\n        handling: {\n            amount: order.handlingCostTotal,\n            integerAmount: amountTransformer.toInteger(order.handlingCostTotal),\n        },\n        grandTotal: {\n            amount: order.orderAmount,\n            integerAmount: order.orderAmountAsInteger,\n        },\n    };\n}\n\nexport function mapToInternalIncompleteOrder(checkout: Checkout): InternalIncompleteOrder {\n    const payment = find(checkout.payments, { providerType: HOSTED });\n\n    return {\n        orderId: null,\n        isComplete: false,\n        payment: !payment\n            ? {}\n            : {\n                  id: payment.providerId,\n                  gateway: payment.gatewayId,\n                  status: mapToInternalPaymentStatus(payment.detail.step),\n              },\n    };\n}\n\nfunction mapToInternalPaymentStatus(status: string): string {\n    return `PAYMENT_STATUS_${status}`;\n}\n\nfunction mapToStoreCredit(payments?: OrderPayments): number {\n    const item = find(payments, { providerId: 'storecredit' });\n\n    return item ? item.amount : 0;\n}\n\nfunction mapToGiftCertificates(payments?: OrderPayments): InternalGiftCertificateList {\n    const items = filter(payments, {\n        providerId: 'giftcertificate',\n    }) as GiftCertificateOrderPayment[];\n\n    return {\n        totalDiscountedAmount: reduce(items, (sum, item) => item.amount + sum, 0),\n        appliedGiftCertificates: keyBy(\n            items.map((item) => ({\n                code: item.detail.code,\n                discountedAmount: item.amount,\n                remainingBalance: item.detail.remaining,\n                giftCertificate: {\n                    balance: item.amount + item.detail.remaining,\n                    code: item.detail.code,\n                    purchaseDate: '',\n                },\n            })),\n            'code',\n        ),\n    };\n}\n\nfunction mapToInternalOrderPayment(\n    payments?: OrderPayments,\n    payment: InternalOrderPayment = {},\n): InternalOrderPayment {\n    const item = find(payments, isDefaultOrderPayment) as GatewayOrderPayment;\n\n    if (!item) {\n        return {};\n    }\n\n    return {\n        id: item.providerId,\n        status: mapToInternalPaymentStatus(item.detail.step),\n        helpText: item.detail.instructions,\n        returnUrl: payment.returnUrl,\n    };\n}\n\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\n    return payment.providerId !== 'giftcertificate' && payment.providerId !== 'storecredit';\n}\n\nfunction mapToInternalSocialDataList(\n    order: Order,\n): { [itemId: string]: InternalSocialDataList } | undefined {\n    const socialDataObject: { [itemId: string]: InternalSocialDataList } = {};\n    const items = [...order.lineItems.physicalItems, ...order.lineItems.digitalItems];\n\n    items.forEach((item) => {\n        socialDataObject[item.id] = mapToInternalSocialData(item);\n    });\n\n    return socialDataObject;\n}\n\nfunction mapToInternalSocialData(lineItem: LineItem): InternalSocialDataList {\n    const codes = ['fb', 'tw', 'gp'];\n\n    return codes.reduce((socialData, code) => {\n        const item =\n            lineItem.socialMedia && find(lineItem.socialMedia, (item) => item.code === code);\n\n        if (!item) {\n            return socialData;\n        }\n\n        socialData[code] = {\n            name: lineItem.name,\n            description: lineItem.name,\n            image: lineItem.imageUrl,\n            url: item.link,\n            shareText: item.text,\n            sharingLink: item.link,\n            channelName: item.channel,\n            channelCode: item.code,\n        };\n\n        return socialData;\n    }, {} as InternalSocialDataList);\n}\n","import { Address, InternalAddress, mapToInternalAddress } from '../address';\nimport { Checkout } from '../checkout';\n\nimport InternalQuote from './internal-quote';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalQuote(\n    checkout: Checkout,\n    shippingAddress?: Address,\n): InternalQuote {\n    const consignment = checkout.consignments && checkout.consignments[0];\n\n    return {\n        orderComment: checkout.customerMessage,\n        shippingOption:\n            consignment && consignment.selectedShippingOption\n                ? consignment.selectedShippingOption.id\n                : undefined,\n        billingAddress: checkout.billingAddress\n            ? mapToInternalAddress(checkout.billingAddress)\n            : ({} as InternalAddress),\n        shippingAddress:\n            shippingAddress && mapToInternalAddress(shippingAddress, checkout.consignments),\n    };\n}\n","import InternalShippingOption from './internal-shipping-option';\nimport ShippingOption from './shipping-option';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalShippingOption(\n    option: ShippingOption,\n    isSelected: boolean,\n): InternalShippingOption {\n    return {\n        description: option.description,\n        module: option.type,\n        price: option.cost,\n        id: option.id,\n        selected: isSelected,\n        isRecommended: option.isRecommended,\n        imageUrl: option.imageUrl,\n        transitTime: option.transitTime,\n    };\n}\n","import Consignment from './consignment';\nimport { InternalShippingOptionList } from './internal-shipping-option';\nimport mapToInternalShippingOption from './map-to-internal-shipping-option';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalShippingOptions(\n    consignments: Consignment[],\n): InternalShippingOptionList {\n    return consignments.reduce((result, consignment) => {\n        let shippingOptions;\n\n        if (consignment.availableShippingOptions && consignment.availableShippingOptions.length) {\n            shippingOptions = consignment.availableShippingOptions;\n        } else if (consignment.selectedShippingOption) {\n            shippingOptions = [consignment.selectedShippingOption];\n        }\n\n        return {\n            ...result,\n            [consignment.id]: (shippingOptions || []).map((option) => {\n                const selectedOptionId =\n                    consignment.selectedShippingOption && consignment.selectedShippingOption.id;\n\n                return mapToInternalShippingOption(option, option.id === selectedOptionId);\n            }),\n        };\n    }, {});\n}\n","export interface RootCacheKeyMap {\n    maps: ChildCacheKeyMap[];\n}\n\nexport interface IntermediateCacheKeyMap {\n    maps: ChildCacheKeyMap[];\n    parentMap: RootCacheKeyMap | IntermediateCacheKeyMap;\n    usedCount: number;\n    value: any;\n}\n\nexport interface TerminalCacheKeyMap extends IntermediateCacheKeyMap {\n    cacheKey: string;\n}\n\nexport type ChildCacheKeyMap = IntermediateCacheKeyMap | TerminalCacheKeyMap;\n\nexport function isTerminalCacheKeyMap(map: ChildCacheKeyMap): map is TerminalCacheKeyMap {\n    return Object.prototype.hasOwnProperty.call(map, 'cacheKey');\n}\n\nexport function isRootCacheKeyMap(map: RootCacheKeyMap | ChildCacheKeyMap): map is RootCacheKeyMap {\n    return Object.prototype.hasOwnProperty.call(map, 'parentMap');\n}\n","import { noop } from 'lodash';\nimport shallowEqual from 'shallowequal';\n\nimport {\n    ChildCacheKeyMap,\n    IntermediateCacheKeyMap,\n    isRootCacheKeyMap,\n    isTerminalCacheKeyMap,\n    RootCacheKeyMap,\n    TerminalCacheKeyMap,\n} from './cache-key-maps';\n\nexport interface CacheKeyResolverOptions {\n    maxSize?: number;\n    onExpire?(key: string): void;\n    isEqual?(valueA: any, valueB: any): boolean;\n}\n\ninterface ResolveResult {\n    index: number;\n    parentMap: RootCacheKeyMap | IntermediateCacheKeyMap;\n    map?: TerminalCacheKeyMap;\n}\n\nexport default class CacheKeyResolver {\n    private _lastId = 0;\n    private _map: RootCacheKeyMap = { maps: [] };\n    private _usedMaps: TerminalCacheKeyMap[] = [];\n    private _options: Required<CacheKeyResolverOptions>;\n\n    constructor(options?: CacheKeyResolverOptions) {\n        this._options = {\n            maxSize: 0,\n            isEqual: shallowEqual,\n            onExpire: noop,\n            ...options,\n        };\n    }\n\n    getKey(...args: any[]): string {\n        const result = this._resolveMap(...args);\n        const { index, parentMap } = result;\n        let { map } = result;\n\n        if (map && map.cacheKey) {\n            map.usedCount++;\n        } else {\n            map = this._generateMap(parentMap, args.slice(index));\n        }\n\n        // Keep track of the least used map so we can remove it if the size of\n        // the stack exceeds the maximum size.\n        this._removeLeastUsedMap(map);\n\n        return map.cacheKey;\n    }\n\n    getUsedCount(...args: any[]): number {\n        const { map } = this._resolveMap(...args);\n\n        return map ? map.usedCount : 0;\n    }\n\n    private _resolveMap(...args: any[]): ResolveResult {\n        let index = 0;\n        let parentMap = this._map;\n\n        // Traverse the tree to find the linked list of maps that match the\n        // arguments of the call. Each intermediate or terminal map contains a\n        // value that could be used to match with the arguments. The last map in\n        // the list (the terminal) should contain a cache key. If it can does\n        // not exist, we will return a falsy value so that the caller could\n        // handle and generate a new cache key.\n        while (parentMap.maps.length) {\n            let isMatched = false;\n\n            for (let mapIndex = 0; mapIndex < parentMap.maps.length; mapIndex++) {\n                const map = parentMap.maps[mapIndex];\n\n                if (!this._options.isEqual(map.value, args[index])) {\n                    continue;\n                }\n\n                // Move the most recently used map to the top of the stack for\n                // quicker access\n                parentMap.maps.unshift(...parentMap.maps.splice(mapIndex, 1));\n\n                if (\n                    (args.length === 0 || index === args.length - 1) &&\n                    isTerminalCacheKeyMap(map)\n                ) {\n                    return { index, map, parentMap };\n                }\n\n                isMatched = true;\n                parentMap = map;\n                index++;\n\n                break;\n            }\n\n            if (!isMatched) {\n                break;\n            }\n        }\n\n        return { index, parentMap };\n    }\n\n    private _generateMap(\n        parent: RootCacheKeyMap | IntermediateCacheKeyMap,\n        args: any[],\n    ): TerminalCacheKeyMap {\n        let index = 0;\n        let parentMap = parent;\n        let map: IntermediateCacheKeyMap;\n\n        do {\n            map = {\n                maps: [],\n                parentMap,\n                usedCount: 1,\n                value: args[index],\n            };\n\n            // Continue to build the tree of maps so that it could be resolved\n            // next time when the function is called with the same set of\n            // arguments.\n            parentMap.maps.unshift(map);\n\n            parentMap = map;\n            index++;\n        } while (index < args.length);\n\n        const terminalMap = map as TerminalCacheKeyMap;\n\n        terminalMap.cacheKey = `${++this._lastId}`;\n\n        return terminalMap;\n    }\n\n    private _removeLeastUsedMap(recentlyUsedMap: TerminalCacheKeyMap): void {\n        if (!this._options.maxSize) {\n            return;\n        }\n\n        const index = this._usedMaps.indexOf(recentlyUsedMap);\n\n        this._usedMaps.splice(index === -1 ? 0 : index, index === -1 ? 0 : 1, recentlyUsedMap);\n\n        if (this._usedMaps.length <= this._options.maxSize) {\n            return;\n        }\n\n        const map = this._usedMaps.pop();\n\n        if (!map) {\n            return;\n        }\n\n        this._removeMap(map);\n        this._options.onExpire(map.cacheKey);\n    }\n\n    private _removeMap(map: ChildCacheKeyMap): void {\n        if (!map.parentMap) {\n            return;\n        }\n\n        map.parentMap.maps.splice(map.parentMap.maps.indexOf(map), 1);\n\n        if (isRootCacheKeyMap(map.parentMap)) {\n            return;\n        }\n\n        this._removeMap(map.parentMap);\n    }\n}\n"],"names":["__webpack_require__","mapToInternalAddress","address","consignments","addressId","id","isBillingAddressLike","length","firstName","lastName","company","addressLine1","address1","addressLine2","address2","city","province","stateOrProvince","provinceCode","stateOrProvinceCode","postCode","postalCode","country","countryCode","phone","customFields","d","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","AmountTransformer","constructor","_decimalPlaces","toInteger","amount","Math","round","this","couponTypes","mapToInternalCoupon","coupon","code","discount","displayName","discountType","indexOf","couponType","mapToInternalGiftCertificate","giftCertificate","discountedAmount","used","remainingBalance","remaining","balance","purchaseDate","mapToDiscountNotifications","promotions","notifications","forEach","promotion","banners","banner","push","placeholders","message","messageHtml","text","mapToInternalLineItem","item","type","decimalPlaces","idKey","amountTransformer","imageUrl","extendedListPrice","amountAfterDiscount","extendedSalePrice","discountAmount","integerAmount","integerAmountAfterDiscount","integerDiscount","integerUnitPrice","listPrice","integerUnitPriceAfterDiscount","salePrice","downloadsPageUrl","downloadPageUrl","name","quantity","brand","sku","categoryNames","variantId","productId","attributes","options","map","option","value","addedByPromotion","mapToInternalLineItems","itemMap","keys","reduce","result","sender","recipient","mapGiftCertificateToInternalLineItem","mapToInternalLineItemType","mapToInternalCart","checkout","cart","currency","items","lineItems","coupons","sum","discountNotifications","totalDiscountedAmount","giftCertificates","certificate","appliedGiftCertificates","keyBy","shipping","shippingCostTotal","amountBeforeDiscount","shippingCostBeforeDiscount","integerAmountBeforeDiscount","required","some","physicalItems","lineItem","isShippingRequired","subtotal","storeCredit","customer","taxSubtotal","taxTotal","taxes","handling","handlingCostTotal","grandTotal","mapToInternalCustomer","billingAddress","addresses","customerId","isGuest","email","fullName","join","customerGroupName","customerGroup","mapToInternalOrder","order","orderMeta","orderId","customerCanBeCreated","payment","mapToInternalOrderPayment","payments","baseAmount","token","orderToken","callbackUrl","mapToGiftCertificates","socialData","mapToInternalSocialDataList","status","hasDigitalItems","isDownloadable","isComplete","mapToStoreCredit","orderAmount","orderAmountAsInteger","find","providerId","filter","detail","isDefaultOrderPayment","step","helpText","instructions","returnUrl","socialDataObject","digitalItems","socialMedia","description","image","url","link","shareText","sharingLink","channelName","channel","channelCode","mapToInternalQuote","shippingAddress","consignment","orderComment","customerMessage","shippingOption","selectedShippingOption","undefined","mapToInternalShippingOption","isSelected","module","price","cost","selected","isRecommended","transitTime","mapToInternalShippingOptions","shippingOptions","availableShippingOptions","selectedOptionId","isTerminalCacheKeyMap","CacheKeyResolver","_lastId","_map","maps","_usedMaps","_options","maxSize","isEqual","onExpire","noop","getKey","args","_resolveMap","index","parentMap","cacheKey","usedCount","_generateMap","slice","_removeLeastUsedMap","getUsedCount","isMatched","mapIndex","unshift","splice","parent","terminalMap","recentlyUsedMap","pop","_removeMap","isRootCacheKeyMap"],"sourceRoot":""}