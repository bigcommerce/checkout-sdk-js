import{createFormPoster as e}from"@bigcommerce/form-poster";class t extends Error{constructor(e){var t;super(e||"An unexpected error has occurred."),this.name="StandardError",this.type="standard",t=new.target.prototype,Object.setPrototypeOf?Object.setPrototypeOf(this,t):this.__proto__=t,"function"==typeof Error.captureStackTrace?Error.captureStackTrace(this,new.target):this.stack=new Error(this.message).stack}}class r extends t{constructor(e){super(e||"Invalid arguments have been provided."),this.name="InvalidArgumentError",this.type="invalid_argument"}}class o extends r{constructor(e){let t="Unable to submit payment for the order because the payload is invalid.";e&&(t=`${t} Make sure the following fields are provided correctly: ${e.join(", ")}.`),super(t),this.name="PaymentArgumentInvalidError"}}class n extends t{constructor(e,t,r){super(r||"Payment cannot be processed for this order, please select another payment method"),this.type="custom_provider_execute_error",this.name=t,this.subtype=e}}class i extends t{constructor(){super("The current order does not need to be finalized at this stage."),this.name="OrderFinalizationNotRequiredError",this.type="order_finalization_not_required"}}class s{constructor(e,t){this.paymentIntegrationService=e,this.formPoster=t}execute(e,t){var r,i,s,a,c;return i=this,s=void 0,c=function*(){const{payment:i}=e,s=function(e,t){var r={};for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.indexOf(o)<0&&(r[o]=e[o]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var n=0;for(o=Object.getOwnPropertySymbols(e);n<o.length;n++)t.indexOf(o[n])<0&&Object.prototype.propertyIsEnumerable.call(e,o[n])&&(r[o[n]]=e[o[n]])}return r}(e,["payment"]);if(!(null==i?void 0:i.methodId))throw new o(["payment.methodId"]);yield this.paymentIntegrationService.loadPaymentMethod(i.methodId,t);const a=this.paymentIntegrationService.getState().getPaymentMethodOrThrow(i.methodId);if(!(null===(r=a.initializationData)||void 0===r?void 0:r.processable))throw new n("payment.humm_not_processable_error","hummNotProcessableError");yield this.paymentIntegrationService.submitOrder(s,t);try{yield this.paymentIntegrationService.submitPayment({methodId:i.methodId})}catch(e){return this.isOffsiteRedirectResponse(e)?this.handleOffsiteRedirectResponse(e):Promise.reject(e)}},new((a=void 0)||(a=Promise))(function(e,t){function r(e){try{n(c.next(e))}catch(e){t(e)}}function o(e){try{n(c.throw(e))}catch(e){t(e)}}function n(t){var n;t.done?e(t.value):(n=t.value,n instanceof a?n:new a(function(e){e(n)})).then(r,o)}n((c=c.apply(i,s||[])).next())})}finalize(){return Promise.reject(new i)}initialize(){return Promise.resolve()}deinitialize(){return Promise.resolve()}handleOffsiteRedirectResponse(e){const t=e.body.additional_action_required.data.redirect_url,r=e.body.provider_data;return new Promise(e=>{this.formPoster.postForm(t,JSON.parse(r),e)})}isOffsiteRedirectResponse(e){if("object"!=typeof e||null===e)return!1;const t=e;if(!t.body)return!1;const r=t.body;return"additional_action_required"===r.status&&!!r.additional_action_required&&"offsite_redirect"===r.additional_action_required.type&&"string"==typeof r.provider_data}}const a=(c=t=>new s(t,e()),d=[{id:"humm"}],Object.assign(c,{resolveIds:d}));var c,d;export{a as createHummPaymentStrategy};
//# sourceMappingURL=humm.js.map