import{getScriptLoader as e}from"@bigcommerce/script-loader";import{noop as t}from"lodash";var i;class n extends Error{constructor(e){var t;super(e||"An unexpected error has occurred."),this.name="StandardError",this.type="standard",t=new.target.prototype,Object.setPrototypeOf?Object.setPrototypeOf(this,t):this.__proto__=t,"function"==typeof Error.captureStackTrace?Error.captureStackTrace(this,new.target):this.stack=new Error(this.message).stack}}class a extends n{constructor(e){super(e||"Invalid arguments have been provided."),this.name="InvalidArgumentError",this.type="invalid_argument"}}class r extends a{constructor(e){let t="Unable to submit payment for the order because the payload is invalid.";e&&(t=`${t} Make sure the following fields are provided correctly: ${e.join(", ")}.`),super(t),this.name="PaymentArgumentInvalidError"}}!function(e){e[e.MissingBillingAddress=0]="MissingBillingAddress",e[e.MissingCart=1]="MissingCart",e[e.MissingCheckout=2]="MissingCheckout",e[e.MissingConsignments=3]="MissingConsignments",e[e.MissingCustomer=4]="MissingCustomer",e[e.MissingCheckoutConfig=5]="MissingCheckoutConfig",e[e.MissingOrder=6]="MissingOrder",e[e.MissingOrderConfig=7]="MissingOrderConfig",e[e.MissingOrderId=8]="MissingOrderId",e[e.MissingPayment=9]="MissingPayment",e[e.MissingPaymentId=10]="MissingPaymentId",e[e.MissingPaymentInstrument=11]="MissingPaymentInstrument",e[e.MissingPaymentMethod=12]="MissingPaymentMethod",e[e.MissingPaymentRedirectUrl=13]="MissingPaymentRedirectUrl",e[e.MissingPaymentStatus=14]="MissingPaymentStatus",e[e.MissingPaymentToken=15]="MissingPaymentToken",e[e.MissingShippingAddress=16]="MissingShippingAddress"}(i||(i={}));class s extends n{constructor(e){super(function(e){switch(e){case i.MissingBillingAddress:return"Unable to proceed because billing address data is unavailable.";case i.MissingCart:return"Unable to proceed because cart data is unavailable.";case i.MissingConsignments:return"Unable to proceed because consignments data is unavailable.";case i.MissingCheckout:return"Unable to proceed because checkout data is unavailable.";case i.MissingCustomer:return"Unable to proceed because customer data is unavailable.";case i.MissingCheckoutConfig:case i.MissingOrderConfig:return"Unable to proceed because configuration data is unavailable.";case i.MissingOrder:return"Unable to proceed because order data is unavailable.";case i.MissingOrderId:return"Unable to proceed because order ID is unavailable or not generated yet.";case i.MissingPayment:return"Unable to proceed because payment data is unavailable.";case i.MissingPaymentToken:return"Unable to proceed because the token required to submit a payment is missing.";case i.MissingPaymentMethod:return"Unable to proceed because payment method data is unavailable or not properly configured.";case i.MissingShippingAddress:return"Unable to proceed because shipping address data is unavailable.";default:return"Unable to proceed because the required data is unavailable."}}(e)),this.subtype=e,this.name="MissingDataError",this.type="missing_data"}}class o extends n{constructor(e){super(e||"The current order could not be finalized successfully"),this.name="OrderFinalizationNotCompletedError",this.type="order_finalization_not_completed"}}var c;!function(e){e[e.CheckoutButtonNotInitialized=0]="CheckoutButtonNotInitialized",e[e.CustomerNotInitialized=1]="CustomerNotInitialized",e[e.PaymentNotInitialized=2]="PaymentNotInitialized",e[e.ShippingNotInitialized=3]="ShippingNotInitialized",e[e.SpamProtectionNotInitialized=4]="SpamProtectionNotInitialized"}(c||(c={}));class d extends n{constructor(e){super(function(e){switch(e){case c.CustomerNotInitialized:return"Unable to proceed because the customer step of checkout has not been initialized.";case c.PaymentNotInitialized:return"Unable to proceed because the payment step of checkout has not been initialized.";case c.ShippingNotInitialized:return"Unable to proceed because the shipping step of checkout has not been initialized.";case c.SpamProtectionNotInitialized:return"Unable to proceed because the checkout spam protection has not been initialized.";default:return"Unable to proceed because the required component has not been initialized."}}(e)),this.subtype=e,this.name="NotInitializedError",this.type="not_initialized"}}const u={body:{},headers:{},status:0};class l extends n{constructor(e,{message:t,errors:i}={}){const{body:n,headers:a,status:r}=e||u;super(t||"An unexpected error has occurred."),this.name="RequestError",this.type="request",this.body=n,this.headers=a,this.status=r,this.errors=i||[]}}var p=function(e,t,i,n){return new(i||(i=Promise))(function(a,r){function s(e){try{c(n.next(e))}catch(e){r(e)}}function o(e){try{c(n.throw(e))}catch(e){r(e)}}function c(e){var t;e.done?a(e.value):(t=e.value,t instanceof i?t:new i(function(e){e(t)})).then(s,o)}c((n=n.apply(e,t||[])).next())})};class h{constructor(e,t){this._paymentIntegrationService=e,this._clearpayScriptLoader=t}initialize(e){return p(this,void 0,void 0,function*(){const{getPaymentMethodOrThrow:t}=this._paymentIntegrationService.getState(),i=t(e.methodId,e.gatewayId);this._clearpaySdk=yield this._clearpayScriptLoader.load(i)})}deinitialize(){return this._clearpaySdk=void 0,Promise.resolve()}execute(e,i){return p(this,void 0,void 0,function*(){const{gatewayId:n,methodId:s}=e.payment||{};if(!n||!s)throw new r(["payment.gatewayId","payment.methodId"]);const o=this._paymentIntegrationService.getState(),{isStoreCreditApplied:c}=o.getCheckoutOrThrow();yield this._paymentIntegrationService.applyStoreCredit(c),yield this._paymentIntegrationService.validateCheckout(o.getCheckout(),i);const{countryCode:d}=o.getBillingAddressOrThrow();if(!this._isCountrySupported(d))throw new a("Unable to proceed because billing country is not supported.");return yield this._loadPaymentMethod(n,s,i),yield this._redirectToClearpay(d,this._paymentIntegrationService.getState().getPaymentMethod(s,n)),new Promise(t)})}finalize(e){var t,n,a;return p(this,void 0,void 0,function*(){const r=this._paymentIntegrationService.getState(),c=r.getPaymentId(),d=r.getContextConfig();if(!c)throw new s(i.MissingCheckout);if(!d||!d.payment.token)throw new s(i.MissingCheckoutConfig);const u={methodId:c.providerId,paymentData:{nonce:d.payment.token}};yield this._paymentIntegrationService.submitOrder({},e);try{yield this._paymentIntegrationService.submitPayment(u)}catch(e){if(yield this._paymentIntegrationService.forgetCheckout(c.providerId),yield this._paymentIntegrationService.loadPaymentMethods(),(e=>"object"==typeof e&&null!==e&&"body"in e)(e))throw new o(null===(a=null===(n=null===(t=e.body)||void 0===t?void 0:t.errors)||void 0===n?void 0:n[0])||void 0===a?void 0:a.message)}})}_redirectToClearpay(e,t){return p(this,void 0,void 0,function*(){if(!this._clearpaySdk||!t||!t.clientToken)throw new d(c.PaymentNotInitialized);return this._clearpaySdk.initialize({countryCode:e}),this._clearpaySdk.redirect({token:t.clientToken}),Promise.resolve()})}_isCountrySupported(e){return"GB"===e}_loadPaymentMethod(e,t,i){var n;return p(this,void 0,void 0,function*(){try{return yield this._paymentIntegrationService.loadPaymentMethod(e,Object.assign(Object.assign({},i),{params:Object.assign(Object.assign({},null==i?void 0:i.params),{method:t})}))}catch(e){if(e instanceof l&&422===(null===(n=e.body)||void 0===n?void 0:n.status))throw new a("Clearpay can't process your payment for this order, please try another payment method");throw e}})}}class y extends n{constructor(e){super(e||"Unable to proceed because the client library of a payment method is not loaded or ready to be used."),this.name="PaymentMethodClientUnavailableError",this.type="payment_method_client_unavailable"}}class g{constructor(e,t=window){this._scriptLoader=e,this._window=t}load(e){return t=this,i=void 0,a=function*(){if(yield this._scriptLoader.loadScript(this._getScriptUrl(e.config.testMode)),!this._window.AfterPay)throw new y;return this._window.AfterPay},new((n=void 0)||(n=Promise))(function(e,r){function s(e){try{c(a.next(e))}catch(e){r(e)}}function o(e){try{c(a.throw(e))}catch(e){r(e)}}function c(t){var i;t.done?e(t.value):(i=t.value,i instanceof n?i:new n(function(e){e(i)})).then(s,o)}c((a=a.apply(t,i||[])).next())});var t,i,n,a}_getScriptUrl(e){return e?"//portal.sandbox.clearpay.co.uk/afterpay-async.js":"//portal.clearpay.co.uk/afterpay-async.js"}}const m=(b=t=>new h(t,new g(e())),v=[{gateway:"clearpay"},{id:"clearpay"}],Object.assign(b,{resolveIds:v}));var b,v;export{m as createClearpayPaymentStrategy};
//# sourceMappingURL=clearpay.js.map