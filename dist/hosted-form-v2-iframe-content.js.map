{"version":3,"file":"hosted-form-v2-iframe-content.js","mappings":"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","sources":["webpack://@bigcommerce/checkout-sdk/webpack/bootstrap","webpack://@bigcommerce/checkout-sdk/webpack/runtime/define property getters","webpack://@bigcommerce/checkout-sdk/webpack/runtime/hasOwnProperty shorthand","webpack://@bigcommerce/checkout-sdk/webpack/runtime/make namespace object","webpack://@bigcommerce/checkout-sdk/external commonjs \"tslib\"","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/common/errors/standard-error.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/common/utility/set-prototype-of.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/common/errors/invalid-argument-error.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/common/url/parse-url.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/common/url/append-www.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/common/utility/bind-decorator.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/common/iframe/is-iframe-event.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/common/iframe/iframe-event-listener.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/hosted-input-storage.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/get-hosted-input-storage.ts","webpack://@bigcommerce/checkout-sdk/external commonjs \"@bigcommerce/request-sender\"","webpack://@bigcommerce/checkout-sdk/external commonjs \"rxjs\"","webpack://@bigcommerce/checkout-sdk/external commonjs \"rxjs/operators\"","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/common/iframe/iframe-event-poster.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/hosted-field-type.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/common/http-request/content-type.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/payment/manual-order-payment-request-sender.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/card-expiry-formatter.ts","webpack://@bigcommerce/checkout-sdk/external commonjs \"card-validator\"","webpack://@bigcommerce/checkout-sdk/external commonjs \"lodash\"","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/card-number-formatter.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/map-to-autocomplete-type.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/hosted-autocomplete-fieldset.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/hosted-field-events.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/hosted-input-events.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/hosted-input.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/hosted-card-expiry-input.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/hosted-card-number-input.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/hosted-input-aggregator.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/errors/invalid-hosted-form-value-error.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/hosted-input-manual-order-payment-handler.ts","webpack://@bigcommerce/checkout-sdk/external commonjs \"yup\"","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/hosted-input-validator.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/hosted-input-factory.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/map-to-accessibility-label.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/errors/invalid-hosted-form-config-error.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/hosted-input-initializer.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/initialize-hosted-input.ts","webpack://@bigcommerce/checkout-sdk/./packages/hosted-form-v2/src/iframe-content/notify-initialize-error.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"tslib\");","import { setPrototypeOf } from '../utility';\n\nimport CustomError from './custom-error';\n\n/**\n * This error type should not be constructed directly. It is a base class for\n * all custom errors thrown in this library.\n */\nexport default abstract class StandardError extends Error implements CustomError {\n    name = 'StandardError';\n    type = 'standard';\n\n    constructor(message?: string) {\n        super(message || 'An unexpected error has occurred.');\n\n        setPrototypeOf(this, new.target.prototype);\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, new.target);\n        } else {\n            this.stack = new Error(this.message).stack;\n        }\n    }\n}\n","export default function setPrototypeOf(object: any, prototype: object) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else {\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n","import StandardError from './standard-error';\n\n/**\n * This error should be thrown when a method is unable to proceed because the\n * caller has not provided all the arguments according to their requirements,\n * i.e.: if an argument is missing or it is not the expected data type.\n */\nexport default class InvalidArgumentError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Invalid arguments have been provided.');\n\n        this.name = 'InvalidArgumentError';\n        this.type = 'invalid_argument';\n    }\n}\n","import { InvalidArgumentError } from '../errors';\n\nimport Url from './url';\n\nexport default function parseUrl(url: string): Url {\n    if (!/^(https?:)?\\/\\//.test(url)) {\n        throw new InvalidArgumentError('The provided URL must be absolute.');\n    }\n\n    // new URL() is not supported in IE11, use anchor tag instead\n    const anchor = document.createElement('a');\n\n    anchor.href = url;\n\n    // IE11 returns 80 or 443 for the port number depending on the URL scheme,\n    // even if the port number is not specified in the URL.\n    const port =\n        anchor.port && url.indexOf(`${anchor.hostname}:${anchor.port}`) !== -1 ? anchor.port : '';\n\n    return {\n        hash: anchor.hash,\n        hostname: anchor.hostname,\n        href: anchor.href,\n        origin: `${anchor.protocol}//${anchor.hostname}${port ? `:${port}` : ''}`,\n        pathname: anchor.pathname,\n        port,\n        protocol: anchor.protocol,\n        search: anchor.search,\n    };\n}\n","import parseUrl from './parse-url';\nimport Url from './url';\n\nexport default function appendWww(url: Url): Url {\n    return parseUrl(\n        url.hostname.indexOf('www') === 0\n            ? url.href\n            : url.href.replace(url.hostname, `www.${url.hostname}`),\n    );\n}\n","/**\n * Decorates a class or a method by binding all its prototype methods or itself\n * to the calling instance respectively.\n */\nfunction bindDecorator<T extends Method>(\n    target: object,\n    key: string,\n    descriptor: TypedPropertyDescriptor<T>,\n): TypedPropertyDescriptor<T>;\nfunction bindDecorator<T extends Constructor<object>>(target: T): T;\n\nfunction bindDecorator(target: any, key?: any, descriptor?: any): any {\n    if (!key || !descriptor) {\n        return bindClassDecorator(target);\n    }\n\n    return bindMethodDecorator(target, key, descriptor);\n}\n\nexport default bindDecorator;\n\n/**\n * Decorates a class by binding all its prototype methods to the calling\n * instance.\n */\nexport function bindClassDecorator<T extends Constructor<object>>(target: T): T {\n    const decoratedTarget = class extends target {};\n\n    Object.getOwnPropertyNames(target.prototype).forEach((key) => {\n        const descriptor = Object.getOwnPropertyDescriptor(target.prototype, key);\n\n        if (!descriptor || key === 'constructor') {\n            return;\n        }\n\n        Object.defineProperty(\n            decoratedTarget.prototype,\n            key,\n            bindMethodDecorator(target.prototype, key, descriptor),\n        );\n    });\n\n    return decoratedTarget;\n}\n\n/**\n * Decorates a method by binding it to the calling instance.\n */\nexport function bindMethodDecorator<T extends Method>(\n    _: object,\n    key: string,\n    descriptor: TypedPropertyDescriptor<T>,\n): TypedPropertyDescriptor<T> {\n    if (typeof descriptor.value !== 'function') {\n        return descriptor;\n    }\n\n    let method: T = descriptor.value;\n\n    return {\n        get() {\n            const boundMethod = method.bind(this) as T;\n\n            Object.defineProperty(this, key, {\n                ...descriptor,\n                value: boundMethod,\n            });\n\n            return boundMethod;\n        },\n        set(value) {\n            method = value;\n        },\n    };\n}\n\nexport type Constructor<T> = new (...args: any[]) => T;\nexport type Method = (...args: any[]) => any;\n","import IframeEvent from './iframe-event';\n\nexport default function isIframeEvent<TEvent extends IframeEvent<TType>, TType extends string>(\n    object: any,\n    type: TType,\n): object is TEvent {\n    return object.type === type;\n}\n","import { appendWww, parseUrl } from '../url';\nimport { bindDecorator as bind } from '../utility';\n\nimport { IframeEventMap } from './iframe-event';\nimport isIframeEvent from './is-iframe-event';\n\nexport default class IframeEventListener<\n    TEventMap extends IframeEventMap<keyof TEventMap>,\n    TContext = undefined,\n> {\n    private _isListening: boolean;\n    private _listeners: EventListeners<TEventMap, TContext>;\n    private _sourceOrigins: string[];\n\n    constructor(sourceOrigin: string) {\n        this._sourceOrigins = [\n            parseUrl(sourceOrigin).origin,\n            appendWww(parseUrl(sourceOrigin)).origin,\n        ];\n        this._isListening = false;\n        this._listeners = {};\n    }\n\n    listen(): void {\n        if (this._isListening) {\n            return;\n        }\n\n        this._isListening = true;\n\n        window.addEventListener('message', this._handleMessage);\n    }\n\n    stopListen(): void {\n        if (!this._isListening) {\n            return;\n        }\n\n        this._isListening = false;\n\n        window.removeEventListener('message', this._handleMessage);\n    }\n\n    addListener<TType extends keyof TEventMap>(\n        type: TType,\n        listener: (event: TEventMap[TType], context?: TContext) => void,\n    ): void {\n        let listeners = this._listeners[type];\n\n        if (!listeners) {\n            this._listeners[type] = listeners = [];\n        }\n\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    }\n\n    removeListener<TType extends keyof TEventMap>(\n        type: TType,\n        listener: (event: TEventMap[TType], context?: TContext) => void,\n    ): void {\n        const listeners = this._listeners[type];\n\n        if (!listeners) {\n            return;\n        }\n\n        const index = listeners.indexOf(listener);\n\n        if (index >= 0) {\n            listeners.splice(index, 1);\n        }\n    }\n\n    trigger<TType extends keyof TEventMap>(event: TEventMap[TType], context?: TContext): void {\n        const listeners = this._listeners[event.type];\n\n        if (!listeners) {\n            return;\n        }\n\n        listeners.forEach((listener) => (context ? listener(event, context) : listener(event)));\n    }\n\n    @bind\n    private _handleMessage(messageEvent: MessageEvent): void {\n        if (\n            this._sourceOrigins.indexOf(messageEvent.origin) === -1 ||\n            !isIframeEvent(messageEvent.data as TEventMap[keyof TEventMap], messageEvent.data.type)\n        ) {\n            return;\n        }\n\n        const { context, ...event } = messageEvent.data;\n\n        this.trigger(event, context);\n    }\n}\n\ntype EventListeners<TEventMap, TContext = undefined> = {\n    [key in keyof TEventMap]?: Array<(event: TEventMap[key], context?: TContext) => void>;\n};\n","export default class HostedInputStorage {\n    private _nonce?: string;\n\n    setNonce(nonce: string): void {\n        this._nonce = nonce;\n    }\n\n    getNonce(): string | undefined {\n        return this._nonce;\n    }\n}\n","import HostedInputStorage from './hosted-input-storage';\n\nlet storage: HostedInputStorage | null;\n\nexport default function getHostedInputStorage(): HostedInputStorage {\n    storage = storage || new HostedInputStorage();\n\n    return storage;\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@bigcommerce/request-sender\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"rxjs\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"rxjs/operators\");","import { fromEvent } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\n\nimport { parseUrl } from '../url';\n\nimport IframeEvent from './iframe-event';\nimport isIframeEvent from './is-iframe-event';\n\nexport interface IframeEventPostOptions<\n    TSuccessEvent extends IframeEvent,\n    TErrorEvent extends IframeEvent,\n> {\n    errorType?: TErrorEvent['type'];\n    successType?: TSuccessEvent['type'];\n}\n\nexport default class IframeEventPoster<TEvent, TContext = undefined> {\n    private _targetOrigin: string;\n\n    constructor(targetOrigin: string, private _targetWindow?: Window, private _context?: TContext) {\n        this._targetOrigin = targetOrigin === '*' ? '*' : parseUrl(targetOrigin).origin;\n    }\n\n    post(event: TEvent): void;\n    post<\n        TSuccessEvent extends IframeEvent = IframeEvent,\n        TErrorEvent extends IframeEvent = IframeEvent,\n    >(\n        event: TEvent,\n        options: IframeEventPostOptions<TSuccessEvent, TErrorEvent>,\n    ): Promise<TSuccessEvent>;\n    post<\n        TSuccessEvent extends IframeEvent = IframeEvent,\n        TErrorEvent extends IframeEvent = IframeEvent,\n    >(\n        event: TEvent,\n        options?: IframeEventPostOptions<TSuccessEvent, TErrorEvent>,\n    ): Promise<TSuccessEvent> | void {\n        const targetWindow = this._targetWindow;\n\n        if (window === targetWindow) {\n            return;\n        }\n\n        if (!targetWindow) {\n            throw new Error('Unable to post message because target window is not set.');\n        }\n\n        const result =\n            options &&\n            fromEvent<MessageEvent>(window, 'message')\n                .pipe(\n                    filter(\n                        (event) =>\n                            event.origin === this._targetOrigin &&\n                            isIframeEvent(event.data, event.data.type) &&\n                            [options.successType, options.errorType].indexOf(event.data.type) !==\n                                -1,\n                    ),\n                    map((event) => {\n                        if (options.errorType === event.data.type) {\n                            throw event.data;\n                        }\n\n                        return event.data;\n                    }),\n                    take(1),\n                )\n                .toPromise();\n\n        targetWindow.postMessage({ ...event, context: this._context }, this._targetOrigin);\n\n        return result;\n    }\n\n    setTarget(window: Window) {\n        this._targetWindow = window;\n    }\n\n    setContext(context: TContext) {\n        this._context = context;\n    }\n}\n","enum HostedFieldType {\n    CardCode = 'cardCode',\n    CardExpiry = 'cardExpiry',\n    CardName = 'cardName',\n    CardNumber = 'cardNumber',\n}\n\nexport default HostedFieldType;\n","enum ContentType {\n    Json = 'application/json',\n    JsonV1 = 'application/vnd.bc.v1+json',\n}\n\nexport default ContentType;\n","import { RequestSender } from '@bigcommerce/request-sender';\n\nimport ContentType from '../common/http-request/content-type';\nimport HostedFormManualOrderData from '../hosted-form-manual-order-data';\nimport { HostedInputValues } from '../iframe-content';\n\nexport class ManualOrderPaymentRequestSender {\n    constructor(private _requestSender: RequestSender, private _paymentOrigin: string) {}\n\n    async submitPayment(\n        requestInitializationData: HostedFormManualOrderData,\n        instrumentFormData: HostedInputValues,\n        nonce?: string,\n    ): Promise<void> {\n        const { paymentMethodId, paymentSessionToken } = requestInitializationData;\n\n        const [expiryMonth, expiryYear] = instrumentFormData.cardExpiry\n            ? instrumentFormData.cardExpiry.split('/')\n            : [];\n\n        const options = {\n            headers: {\n                Accept: ContentType.Json,\n                'Content-Type': ContentType.Json,\n                'X-Payment-Session-Token': paymentSessionToken,\n            },\n            body: {\n                instrument: {\n                    type: 'card',\n                    name: instrumentFormData.cardName ?? '',\n                    number: instrumentFormData.cardNumber\n                        ? instrumentFormData.cardNumber.replace(/ /g, '')\n                        : '',\n                    expires: {\n                        month: Number(expiryMonth.trim()),\n                        year: Number(`20${expiryYear.trim()}`),\n                    },\n                    verification_value: instrumentFormData.cardCode ?? undefined,\n                },\n                payment_method_id: paymentMethodId,\n                form_nonce: nonce ?? undefined,\n            },\n        };\n\n        await this._requestSender.post<void>(`${this._paymentOrigin}/payments`, options);\n    }\n}\n","import CardExpiryDate from './card-expiry-date';\n\nconst NUMBER_SEPARATOR = '/';\n\nexport default class CardExpiryFormatter {\n    format(value: string): string {\n        const [month = '', year = ''] = value.split(new RegExp(`\\\\s*${NUMBER_SEPARATOR}\\\\s*`));\n        const trimmedMonth = month.slice(0, 2);\n        const trimmedYear =\n            year.length === 4 ? year.slice(-2) : year ? year.slice(0, 2) : month.slice(2);\n\n        // i.e.: '1'\n        if (value.length < 2) {\n            return month;\n        }\n\n        // ie.: '10 /' (without trailing space)\n        if (value.length > 3 && !trimmedYear) {\n            return trimmedMonth;\n        }\n\n        return `${trimmedMonth} ${NUMBER_SEPARATOR} ${trimmedYear}`;\n    }\n\n    toObject(value: string): CardExpiryDate {\n        const [month = '', year = ''] = value.split(new RegExp(`\\\\s*${NUMBER_SEPARATOR}\\\\s*`));\n\n        if (!/^\\d+$/.test(month) || !/^\\d+$/.test(year)) {\n            return { month: '', year: '' };\n        }\n\n        return {\n            month: month.length === 1 ? `0${month}` : month.slice(0, 2),\n            year: year.length === 2 ? `20${year}` : year.slice(0, 4),\n        };\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"card-validator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"lodash\");","import { creditCardType, number } from 'card-validator';\nimport { max } from 'lodash';\n\nconst NUMBER_SEPARATOR = ' ';\n\nexport default class CardNumberFormatter {\n    format(value: string): string {\n        const { card } = number(value);\n\n        if (!card) {\n            return value;\n        }\n\n        const maxLength = max(creditCardType(value).map((info) => max(info.lengths)));\n        const unformattedValue = this.unformat(value).slice(0, maxLength);\n\n        return card.gaps\n            .filter((gapIndex) => unformattedValue.length > gapIndex)\n            .reduce(\n                (output, gapIndex, index) =>\n                    [output.slice(0, gapIndex + index), output.slice(gapIndex + index)].join(\n                        NUMBER_SEPARATOR,\n                    ),\n                unformattedValue,\n            );\n    }\n\n    unformat(value: string): string {\n        const { card } = number(value);\n\n        if (!card) {\n            return value;\n        }\n\n        return value.replace(new RegExp(NUMBER_SEPARATOR, 'g'), '');\n    }\n}\n","import HostedFieldType from '../hosted-field-type';\n\nexport default function mapToAutocompleteType(type: HostedFieldType): string {\n    switch (type) {\n        case HostedFieldType.CardCode:\n            return 'cc-csc';\n\n        case HostedFieldType.CardExpiry:\n            return 'cc-exp';\n\n        case HostedFieldType.CardName:\n            return 'cc-name';\n\n        case HostedFieldType.CardNumber:\n            return 'cc-number';\n\n        default:\n            return '';\n    }\n}\n","import { kebabCase } from 'lodash';\n\nimport HostedFieldType from '../hosted-field-type';\n\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport mapToAutocompleteType from './map-to-autocomplete-type';\n\nexport default class HostedAutocompleteFieldset {\n    private _inputs: HTMLInputElement[];\n\n    constructor(\n        private _form: HTMLFormElement,\n        private _fieldTypes: HostedFieldType[],\n        private _inputAggregator: HostedInputAggregator,\n    ) {\n        this._inputs = this._fieldTypes.map((type) => this._createInput(type));\n    }\n\n    attach(): void {\n        this._inputs.forEach((input) => this._form.appendChild(input));\n    }\n\n    detach(): void {\n        this._inputs.forEach((input) => {\n            if (!input.parentElement) {\n                return;\n            }\n\n            input.parentElement.removeChild(input);\n        });\n    }\n\n    private _createInput(type: HostedFieldType): HTMLInputElement {\n        const input = document.createElement('input');\n\n        input.autocomplete = mapToAutocompleteType(type);\n        input.id = this._getAutocompleteElementId(type);\n        input.tabIndex = -1;\n        input.style.position = 'absolute';\n        input.style.opacity = '0';\n        input.style.zIndex = '-1';\n\n        input.addEventListener('change', this._handleChange);\n\n        return input;\n    }\n\n    private _handleChange: (event: Event) => void = (event) => {\n        const targetInput = event.target as HTMLInputElement;\n\n        if (!targetInput) {\n            throw new Error('Unable to get a reference to the target of the change event.');\n        }\n\n        const targetHostedInput = this._inputAggregator\n            .getInputs()\n            .find((input) => this._getAutocompleteElementId(input.getType()) === targetInput.id);\n\n        if (!targetHostedInput) {\n            return;\n        }\n\n        targetHostedInput.setValue(targetInput.value);\n    };\n\n    private _getAutocompleteElementId(type: HostedFieldType): string {\n        return `autocomplete-${kebabCase(type)}`;\n    }\n}\n","import HostedFieldType from './hosted-field-type';\nimport HostedFormManualOrderData from './hosted-form-manual-order-data';\nimport { HostedFieldStylesMap } from './hosted-form-options';\nimport HostedFormOrderData from './hosted-form-order-data';\n\nexport enum HostedFieldEventType {\n    AttachRequested = 'HOSTED_FIELD:ATTACH_REQUESTED',\n    SubmitRequested = 'HOSTED_FIELD:SUBMITTED_REQUESTED',\n    SubmitManualOrderRequested = 'HOSTED_FIELD:SUBMIT_MANUAL_ORDER_REQUESTED',\n    ValidateRequested = 'HOSTED_FIELD:VALIDATE_REQUESTED',\n}\n\nexport interface HostedFieldEventMap {\n    [HostedFieldEventType.AttachRequested]: HostedFieldAttachEvent;\n    [HostedFieldEventType.SubmitManualOrderRequested]: HostedFieldSubmitManualOrderRequestEvent;\n    [HostedFieldEventType.ValidateRequested]: HostedFieldValidateRequestEvent;\n}\n\nexport type HostedFieldEvent =\n    | HostedFieldAttachEvent\n    | HostedFieldSubmitRequestEvent\n    | HostedFieldSubmitManualOrderRequestEvent\n    | HostedFieldValidateRequestEvent;\n\nexport interface HostedFieldSubmitRequestEvent {\n    type: HostedFieldEventType.SubmitRequested;\n    payload: {\n        data: HostedFormOrderData;\n        fields: HostedFieldType[];\n    };\n}\n\nexport interface HostedFieldAttachEvent {\n    type: HostedFieldEventType.AttachRequested;\n    payload: {\n        accessibilityLabel?: string;\n        fontUrls?: string[];\n        placeholder?: string;\n        styles?: HostedFieldStylesMap;\n        origin?: string;\n        type: HostedFieldType;\n    };\n}\n\nexport interface HostedFieldSubmitManualOrderRequestEvent {\n    type: HostedFieldEventType.SubmitManualOrderRequested;\n    payload: {\n        data: HostedFormManualOrderData;\n    };\n}\n\nexport interface HostedFieldValidateRequestEvent {\n    type: HostedFieldEventType.ValidateRequested;\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport { PaymentErrorData, PaymentErrorResponseBody } from '../errors';\nimport HostedFieldType from '../hosted-field-type';\nimport { HostedFormErrorsData } from '../hosted-form-options';\n\nimport HostedInputInitializeErrorData from './hosted-input-initialize-error-data';\nimport HostedInputValidateResults from './hosted-input-validate-results';\n\n// Event types\nexport enum HostedInputEventType {\n    AttachSucceeded = 'HOSTED_INPUT:ATTACH_SUCCEEDED',\n    AttachFailed = 'HOSTED_INPUT:ATTACH_FAILED',\n    BinChanged = 'HOSTED_INPUT:BIN_CHANGED',\n    Blurred = 'HOSTED_INPUT:BLURRED',\n    Changed = 'HOSTED_INPUT:CHANGED',\n    CardTypeChanged = 'HOSTED_INPUT:CARD_TYPE_CHANGED',\n    Entered = 'HOSTED_INPUT:ENTERED',\n    Focused = 'HOSTED_INPUT:FOCUSED',\n    SubmitSucceeded = 'HOSTED_INPUT:SUBMIT_SUCCEEDED',\n    SubmitFailed = 'HOSTED_INPUT:SUBMIT_FAILED',\n    SubmitManualOrderSucceeded = 'HOSTED_INPUT:SUBMIT_MANUAL_ORDER_SUCCEEDED',\n    SubmitManualOrderFailed = 'HOSTED_INPUT:SUBMIT_MANUAL_ORDER_FAILED',\n    Validated = 'HOSTED_INPUT:VALIDATED',\n    StoredCardSucceeded = 'HOSTED_INPUT:STORED_CARD_SUCCEEDED',\n    StoredCardFailed = 'HOSTED_INPUT:STORED_CARD_FAILED',\n}\n\n// Event mapping\nexport interface HostedInputEventMap {\n    [HostedInputEventType.AttachSucceeded]: HostedInputAttachSuccessEvent;\n    [HostedInputEventType.AttachFailed]: HostedInputAttachErrorEvent;\n    [HostedInputEventType.BinChanged]: HostedInputBinChangeEvent;\n    [HostedInputEventType.Blurred]: HostedInputBlurEvent;\n    [HostedInputEventType.Changed]: HostedInputChangeEvent;\n    [HostedInputEventType.CardTypeChanged]: HostedInputCardTypeChangeEvent;\n    [HostedInputEventType.Entered]: HostedInputEnterEvent;\n    [HostedInputEventType.Focused]: HostedInputFocusEvent;\n    [HostedInputEventType.SubmitManualOrderSucceeded]: HostedInputSubmitManualOrderSuccessEvent;\n    [HostedInputEventType.SubmitManualOrderFailed]: HostedInputSubmitManualOrderErrorEvent;\n    [HostedInputEventType.Validated]: HostedInputValidateEvent;\n}\n\n// Events\nexport type HostedInputEvent =\n    | HostedInputAttachSuccessEvent\n    | HostedInputAttachErrorEvent\n    | HostedInputBinChangeEvent\n    | HostedInputBlurEvent\n    | HostedInputChangeEvent\n    | HostedInputCardTypeChangeEvent\n    | HostedInputEnterEvent\n    | HostedInputFocusEvent\n    | HostedInputSubmitManualOrderSuccessEvent\n    | HostedInputSubmitManualOrderErrorEvent\n    | HostedInputValidateEvent;\n\nexport interface HostedInputAttachSuccessEvent {\n    type: HostedInputEventType.AttachSucceeded;\n}\n\nexport interface HostedInputAttachErrorEvent {\n    type: HostedInputEventType.AttachFailed;\n    payload: {\n        error: HostedInputInitializeErrorData;\n    };\n}\n\nexport interface HostedInputBinChangeEvent {\n    type: HostedInputEventType.BinChanged;\n    payload: {\n        bin?: string;\n    };\n}\n\nexport interface HostedInputBlurEvent {\n    type: HostedInputEventType.Blurred;\n    payload: {\n        fieldType: HostedFieldType;\n        errors?: HostedFormErrorsData;\n    };\n}\n\nexport interface HostedInputChangeEvent {\n    type: HostedInputEventType.Changed;\n    payload: {\n        fieldType: HostedFieldType;\n    };\n}\n\nexport interface HostedInputCardTypeChangeEvent {\n    type: HostedInputEventType.CardTypeChanged;\n    payload: {\n        cardType?: string;\n    };\n}\n\nexport interface HostedInputFocusEvent {\n    type: HostedInputEventType.Focused;\n    payload: {\n        fieldType: HostedFieldType;\n    };\n}\n\nexport interface HostedInputEnterEvent {\n    type: HostedInputEventType.Entered;\n    payload: {\n        fieldType: HostedFieldType;\n    };\n}\nexport interface HostedInputSubmitManualOrderSuccessEvent {\n    type: HostedInputEventType.SubmitManualOrderSucceeded;\n}\n\nexport interface HostedInputSubmitManualOrderErrorEvent {\n    type: HostedInputEventType.SubmitManualOrderFailed;\n    payload: {\n        error: PaymentErrorData;\n        response?: Response<PaymentErrorResponseBody>;\n    };\n}\n\nexport interface HostedInputValidateEvent {\n    type: HostedInputEventType.Validated;\n    payload: HostedInputValidateResults;\n}\n\nexport interface HostedInputSubmitSuccessEvent {\n    type: HostedInputEventType.SubmitSucceeded;\n    payload: {\n        response: Response<unknown>;\n    };\n}\n\nexport interface HostedInputSubmitErrorEvent {\n    type: HostedInputEventType.SubmitFailed;\n    payload: {\n        error: PaymentErrorData;\n        response?: Response<PaymentErrorResponseBody>;\n    };\n}\n","import { kebabCase } from 'lodash';\n\nimport { IframeEventListener, IframeEventPoster } from '../common/iframe';\nimport { parseUrl } from '../common/url';\nimport {\n    HostedFieldEventMap,\n    HostedFieldEventType,\n    HostedFieldValidateRequestEvent,\n} from '../hosted-field-events';\nimport HostedFieldType from '../hosted-field-type';\n\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport { HostedInputEvent, HostedInputEventType } from './hosted-input-events';\nimport HostedInputManualOrderPaymentHandler from './hosted-input-manual-order-payment-handler';\nimport HostedInputStyles, { HostedInputStylesMap } from './hosted-input-styles';\nimport HostedInputValidator from './hosted-input-validator';\nimport HostedInputWindow from './hosted-input-window';\n\nexport default class HostedInput {\n    protected _input: HTMLInputElement;\n    protected _previousValue?: string;\n    private _fontLinks?: HTMLLinkElement[];\n    private _isTouched = false;\n\n    /**\n     * @internal\n     */\n    constructor(\n        protected _type: HostedFieldType,\n        protected _form: HTMLFormElement,\n        protected _placeholder: string,\n        protected _accessibilityLabel: string,\n        protected _autocomplete: string,\n        protected _styles: HostedInputStylesMap,\n        protected _fontUrls: string[],\n        protected _eventListener: IframeEventListener<HostedFieldEventMap>,\n        protected _eventPoster: IframeEventPoster<HostedInputEvent>,\n        protected _inputAggregator: HostedInputAggregator,\n        protected _inputValidator: HostedInputValidator,\n        protected _manualOrderPaymentHandler: HostedInputManualOrderPaymentHandler,\n    ) {\n        this._input = document.createElement('input');\n\n        this._input.addEventListener('input', this._handleInput);\n        this._input.addEventListener('blur', this._handleBlur);\n        this._input.addEventListener('focus', this._handleFocus);\n        this._eventListener.addListener(\n            HostedFieldEventType.ValidateRequested,\n            this._handleValidate,\n        );\n\n        this._eventListener.addListener(\n            HostedFieldEventType.SubmitManualOrderRequested,\n            this._manualOrderPaymentHandler.handle,\n        );\n\n        this._configureInput();\n    }\n\n    getType(): HostedFieldType {\n        return this._type;\n    }\n\n    getValue(): string {\n        return this._input.value;\n    }\n\n    setValue(value: string): void {\n        this._processChange(value);\n    }\n\n    isTouched(): boolean {\n        return this._isTouched;\n    }\n\n    attach(): void {\n        this._form.appendChild(this._input);\n        this._form.addEventListener('submit', this._handleSubmit);\n\n        this._loadFonts();\n\n        this._eventPoster.setTarget(window.parent);\n        this._eventListener.listen();\n\n        // fixes the issue on Firefox/Safari where the input doesn't focus properly\n        window.addEventListener('focus', this._forceFocusToInput);\n\n        // Assign itself to the global so it can be accessed by its sibling frames\n        (window as unknown as HostedInputWindow).hostedInput = this;\n\n        this._eventPoster.post({ type: HostedInputEventType.AttachSucceeded });\n    }\n\n    detach(): void {\n        if (this._input.parentElement) {\n            this._input.parentElement.removeChild(this._input);\n        }\n\n        this._form.removeEventListener('submit', this._handleSubmit);\n        this._unloadFonts();\n\n        window.removeEventListener('focus', this._forceFocusToInput);\n\n        this._eventListener.stopListen();\n    }\n\n    protected _formatValue(value: string): void {\n        this._input.value = value;\n    }\n\n    protected _notifyChange(_value: string): void {\n        this._eventPoster.post({\n            type: HostedInputEventType.Changed,\n            payload: {\n                fieldType: this._type,\n            },\n        });\n    }\n\n    private _configureInput(): void {\n        this._input.style.backgroundColor = 'transparent';\n        this._input.style.border = '0';\n        this._input.style.display = 'block';\n        this._input.style.height = '100%';\n        this._input.style.margin = '0';\n        this._input.style.outline = 'none';\n        this._input.style.padding = '0';\n        this._input.style.width = '100%';\n        this._input.id = kebabCase(this._type);\n        this._input.placeholder = this._placeholder;\n        this._input.autocomplete = this._autocomplete;\n\n        this._input.setAttribute('aria-label', this._accessibilityLabel);\n\n        this._applyStyles(this._styles.default);\n\n        switch (this._input.id) {\n            case 'card-code':\n            case 'card-expiry':\n            case 'card-number':\n                this._input.type = 'text';\n                this._input.inputMode = 'numeric';\n                this._input.pattern = '[0-9]*';\n                break;\n\n            case 'card-name':\n                this._input.type = 'text';\n                this._input.inputMode = 'text';\n                break;\n        }\n    }\n\n    private _applyStyles(styles: HostedInputStyles = {}): void {\n        const allowedStyles: {\n            [key in keyof Required<HostedInputStyles>]: HostedInputStyles[key];\n        } = {\n            color: styles.color,\n            fontFamily: styles.fontFamily,\n            fontSize: styles.fontSize,\n            fontWeight: styles.fontWeight,\n        };\n        const styleKeys = Object.keys(allowedStyles) as Array<keyof HostedInputStyles>;\n\n        styleKeys.forEach((key) => {\n            if (!allowedStyles[key]) {\n                return;\n            }\n\n            this._input.style[key] = allowedStyles[key] || '';\n        });\n    }\n\n    private _loadFonts(): void {\n        if (this._fontLinks) {\n            return;\n        }\n\n        this._fontLinks = this._fontUrls\n            .filter((url) => parseUrl(url).hostname === 'fonts.googleapis.com')\n            .filter((url) => !document.querySelector(`link[href='${url}'][rel='stylesheet']`))\n            .map((url) => {\n                const link = document.createElement('link');\n\n                link.rel = 'stylesheet';\n                link.href = url;\n\n                document.head.appendChild(link);\n\n                return link;\n            });\n    }\n\n    private _unloadFonts(): void {\n        if (!this._fontLinks) {\n            return;\n        }\n\n        this._fontLinks.forEach((link) => {\n            if (!link.parentElement) {\n                return;\n            }\n\n            link.parentElement.removeChild(link);\n        });\n\n        this._fontLinks = undefined;\n    }\n\n    private async _validateForm(): Promise<void> {\n        const values = this._inputAggregator.getInputValues();\n        const results = await this._inputValidator.validate(values);\n\n        if (results.isValid) {\n            this._applyStyles(this._styles.default);\n        } else {\n            this._applyStyles(this._styles.error);\n        }\n\n        this._eventPoster.post({\n            type: HostedInputEventType.Validated,\n            payload: results,\n        });\n    }\n\n    private _processChange(value: string): void {\n        if (value === this._previousValue) {\n            return;\n        }\n\n        this._isTouched = true;\n\n        this._formatValue(value);\n        this._validateForm();\n        this._notifyChange(value);\n\n        this._previousValue = value;\n    }\n\n    private _handleInput: (event: Event) => void = (event) => {\n        const input = event.target as HTMLInputElement;\n\n        this._processChange(input.value);\n    };\n\n    private _handleBlur: (event: Event) => void = () => {\n        this._applyStyles(this._styles.default);\n        this._validateForm();\n\n        this._eventPoster.post({\n            type: HostedInputEventType.Blurred,\n            payload: {\n                fieldType: this._type,\n            },\n        });\n    };\n\n    private _handleFocus: (event: Event) => void = () => {\n        this._applyStyles(this._styles.focus);\n\n        this._eventPoster.post({\n            type: HostedInputEventType.Focused,\n            payload: {\n                fieldType: this._type,\n            },\n        });\n    };\n\n    private _handleValidate: (event: HostedFieldValidateRequestEvent) => void = () => {\n        this._validateForm();\n    };\n\n    private _handleSubmit: (event: Event) => void = (event) => {\n        event.preventDefault();\n\n        this._eventPoster.post({\n            type: HostedInputEventType.Entered,\n            payload: {\n                fieldType: this._type,\n            },\n        });\n    };\n\n    private _forceFocusToInput = (): void => {\n        if (document.activeElement === document.body) {\n            const browserName = navigator.userAgent.toLowerCase();\n\n            if (browserName.indexOf('safari') > -1) {\n                if (this._input.value === '') {\n                    this._input.setAttribute('value', ' ');\n                    this._input.setSelectionRange(0, 1);\n                    this._input.setAttribute('value', '');\n                }\n            } else {\n                this._input.focus();\n            }\n        }\n    };\n}\n","import { IframeEventListener, IframeEventPoster } from '../common/iframe';\nimport { HostedFieldEventMap } from '../hosted-field-events';\nimport HostedFieldType from '../hosted-field-type';\n\nimport CardExpiryFormatter from './card-expiry-formatter';\nimport HostedInput from './hosted-input';\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport { HostedInputEvent } from './hosted-input-events';\nimport HostedInputManualOrderPaymentHandler from './hosted-input-manual-order-payment-handler';\nimport { HostedInputStylesMap } from './hosted-input-styles';\nimport HostedInputValidator from './hosted-input-validator';\n\nexport default class HostedCardExpiryInput extends HostedInput {\n    /**\n     * @internal\n     */\n    constructor(\n        form: HTMLFormElement,\n        placeholder: string,\n        accessibilityLabel: string,\n        autocomplete: string,\n        styles: HostedInputStylesMap,\n        fontUrls: string[],\n        eventListener: IframeEventListener<HostedFieldEventMap>,\n        eventPoster: IframeEventPoster<HostedInputEvent>,\n        inputAggregator: HostedInputAggregator,\n        inputValidator: HostedInputValidator,\n        manualOrderPaymentHandler: HostedInputManualOrderPaymentHandler,\n        private _formatter: CardExpiryFormatter,\n    ) {\n        super(\n            HostedFieldType.CardExpiry,\n            form,\n            placeholder,\n            accessibilityLabel,\n            autocomplete,\n            styles,\n            fontUrls,\n            eventListener,\n            eventPoster,\n            inputAggregator,\n            inputValidator,\n            manualOrderPaymentHandler,\n        );\n    }\n\n    protected _formatValue(value: string): void {\n        this._input.value = this._formatter.format(value);\n    }\n}\n","import { number } from 'card-validator';\nimport { get } from 'lodash';\n\nimport { IframeEventListener, IframeEventPoster } from '../common/iframe';\nimport { HostedFieldEventMap } from '../hosted-field-events';\nimport HostedFieldType from '../hosted-field-type';\n\nimport CardNumberFormatter from './card-number-formatter';\nimport HostedAutocompleteFieldset from './hosted-autocomplete-fieldset';\nimport HostedInput from './hosted-input';\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport { HostedInputEvent, HostedInputEventType } from './hosted-input-events';\nimport HostedInputManualOrderPaymentHandler from './hosted-input-manual-order-payment-handler';\nimport { HostedInputStylesMap } from './hosted-input-styles';\nimport HostedInputValidator from './hosted-input-validator';\n\nexport default class HostedCardNumberInput extends HostedInput {\n    /**\n     * @internal\n     */\n    constructor(\n        type: HostedFieldType,\n        form: HTMLFormElement,\n        placeholder: string,\n        accessibilityLabel: string,\n        autocomplete: string,\n        styles: HostedInputStylesMap,\n        fontUrls: string[],\n        eventListener: IframeEventListener<HostedFieldEventMap>,\n        eventPoster: IframeEventPoster<HostedInputEvent>,\n        inputAggregator: HostedInputAggregator,\n        inputValidator: HostedInputValidator,\n        manualOrderPaymentHandler: HostedInputManualOrderPaymentHandler,\n        private _autocompleteFieldset: HostedAutocompleteFieldset,\n        private _formatter: CardNumberFormatter,\n    ) {\n        super(\n            type,\n            form,\n            placeholder,\n            accessibilityLabel,\n            autocomplete,\n            styles,\n            fontUrls,\n            eventListener,\n            eventPoster,\n            inputAggregator,\n            inputValidator,\n            manualOrderPaymentHandler,\n        );\n    }\n\n    attach(): void {\n        super.attach();\n\n        this._autocompleteFieldset.attach();\n    }\n\n    protected _notifyChange(value: string): void {\n        const cardInfo = number(value).card;\n        const prevCardInfo = this._previousValue && number(this._previousValue).card;\n\n        if (get(prevCardInfo, 'type') !== get(cardInfo, 'type')) {\n            this._eventPoster.post({\n                type: HostedInputEventType.CardTypeChanged,\n                payload: {\n                    cardType: cardInfo ? cardInfo.type : undefined,\n                },\n            });\n        }\n\n        const unformattedValue = this._formatter.unformat(value);\n        const unformattedPreviousValue = this._previousValue\n            ? this._formatter.unformat(this._previousValue)\n            : '';\n\n        const bin =\n            unformattedValue.length >= 6 && number(unformattedValue).isPotentiallyValid\n                ? unformattedValue.substr(0, 6)\n                : '';\n        const prevBin =\n            unformattedPreviousValue.length >= 6 ? unformattedPreviousValue.substr(0, 6) : '';\n\n        if (bin !== prevBin) {\n            this._eventPoster.post({\n                type: HostedInputEventType.BinChanged,\n                payload: { bin },\n            });\n        }\n    }\n\n    protected _formatValue(value: string): void {\n        const selectionEnd = this._input.selectionEnd;\n        const formattedValue = this._formatter.format(value);\n\n        if (selectionEnd === value.length && value.length < formattedValue.length) {\n            this._input.setSelectionRange(formattedValue.length, formattedValue.length);\n        } else {\n            this._input.setSelectionRange(selectionEnd || 0, selectionEnd || 0);\n        }\n\n        this._input.value = formattedValue;\n    }\n}\n","import HostedInput from './hosted-input';\nimport HostedInputValues from './hosted-input-values';\nimport HostedInputWindow from './hosted-input-window';\n\nexport default class HostedInputAggregator {\n    constructor(private _parentWindow: Window) {}\n\n    getInputs(filter?: (field: HostedInput) => boolean): HostedInput[] {\n        return Array.prototype.slice\n            .call(this._parentWindow.frames)\n            .reduce((result: Window[], frame: Window) => {\n                try {\n                    const input = (frame as HostedInputWindow).hostedInput;\n\n                    if (!input || (filter && !filter(input))) {\n                        return result;\n                    }\n\n                    return [...result, input];\n                } catch (error) {\n                    if (error instanceof DOMException) {\n                        return result;\n                    }\n\n                    // IE11 doesn't throw `DOMException`\n                    if (error instanceof Error && error.message === 'Permission denied') {\n                        return result;\n                    }\n\n                    throw error;\n                }\n            }, []);\n    }\n\n    getInputValues(filter?: (field: HostedInput) => boolean): HostedInputValues {\n        return this.getInputs(filter).reduce((result, input) => {\n            return {\n                ...result,\n                [input.getType()]: input.getValue(),\n            };\n        }, {} as HostedInputValues);\n    }\n}\n","import { flatMap, map, values } from 'lodash';\n\nimport { StandardError } from '../common/errors';\nimport { HostedInputValidateErrorDataMap } from '../iframe-content';\n\nexport default class InvalidHostedFormValueError extends StandardError {\n    constructor(public errors: HostedInputValidateErrorDataMap) {\n        super(\n            [\n                'Unable to proceed due to invalid user input values',\n                ...flatMap(values(errors), (fieldErrors) =>\n                    map(fieldErrors, ({ message }) => message),\n                ),\n            ].join('. '),\n        );\n\n        this.name = 'InvalidHostedFormValueError';\n        this.type = 'invalid_hosted_form_value';\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\nimport { snakeCase } from 'lodash';\n\nimport { IframeEventPoster } from '../common/iframe';\nimport { InvalidHostedFormValueError, PaymentErrorResponseBody } from '../errors';\nimport { HostedFieldSubmitManualOrderRequestEvent } from '../hosted-field-events';\nimport { ManualOrderPaymentRequestSender } from '../payment';\n\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport { HostedInputEvent, HostedInputEventType } from './hosted-input-events';\nimport HostedInputStorage from './hosted-input-storage';\nimport HostedInputValidator from './hosted-input-validator';\n\nexport default class HostedInputManualOrderPaymentHandler {\n    constructor(\n        private _inputAggregator: HostedInputAggregator,\n        private _inputValidator: HostedInputValidator,\n        private _inputStorage: HostedInputStorage,\n        private _eventPoster: IframeEventPoster<HostedInputEvent>,\n        private _manualOrderPaymentRequestSender: ManualOrderPaymentRequestSender,\n    ) {}\n\n    handle: (event: HostedFieldSubmitManualOrderRequestEvent) => Promise<void> = async (event) => {\n        const {\n            payload: { data },\n        } = event;\n        const values = this._inputAggregator.getInputValues();\n        const results = await this._inputValidator.validate(values);\n\n        this._eventPoster.post({\n            type: HostedInputEventType.Validated,\n            payload: results,\n        });\n\n        if (!results.isValid) {\n            const error = new InvalidHostedFormValueError(results.errors);\n\n            return this._eventPoster.post({\n                type: HostedInputEventType.SubmitManualOrderFailed,\n                payload: {\n                    error: { code: snakeCase(error.name), message: error.message },\n                },\n            });\n        }\n\n        try {\n            await this._manualOrderPaymentRequestSender.submitPayment(\n                data,\n                values,\n                this._inputStorage.getNonce(),\n            );\n\n            this._eventPoster.post({\n                type: HostedInputEventType.SubmitManualOrderSucceeded,\n            });\n        } catch (error) {\n            this._eventPoster.post({\n                type: HostedInputEventType.SubmitManualOrderFailed,\n                payload: this._isPaymentErrorResponse(error)\n                    ? { error: error.body.errors[0], response: error }\n                    : { error: { code: snakeCase(error.name), message: error.message } },\n            });\n        }\n    };\n\n    private _isPaymentErrorResponse(response: any): response is Response<PaymentErrorResponseBody> {\n        const { body: { errors = [] } = {} } = response || {};\n\n        return (\n            typeof (errors[0] && errors[0].code) === 'string' &&\n            typeof (errors[0] && errors[0].message) === 'string'\n        );\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"yup\");","import { creditCardType, cvv, expirationDate, number } from 'card-validator';\nimport { object, ObjectShape, string, StringSchema, ValidationError } from 'yup';\n\nimport { HostedInputValidateErrorDataMap } from './hosted-input-validate-error-data';\nimport HostedInputValidateResults from './hosted-input-validate-results';\nimport HostedInputValues from './hosted-input-values';\n\nexport default class HostedInputValidator {\n    private readonly _completeSchema: ObjectShape = {\n        cardCode: this._getCardCodeSchema(),\n        cardExpiry: this._getCardExpirySchema(),\n        cardName: this._getCardNameSchema(),\n        cardNumber: this._getCardNumberSchema(),\n    };\n\n    constructor() {\n        this._configureCardValidator();\n    }\n\n    async validate(values: HostedInputValues): Promise<HostedInputValidateResults> {\n        const schemas: ObjectShape = {};\n        const results: HostedInputValidateResults = {\n            errors: {},\n            isValid: true,\n        };\n\n        let requiredField: keyof HostedInputValues;\n\n        for (requiredField in values) {\n            if (Object.prototype.hasOwnProperty.call(values, requiredField)) {\n                schemas[requiredField] = this._completeSchema[requiredField];\n                results.errors[requiredField] = [];\n            }\n        }\n\n        try {\n            await object(schemas).validate(values, { abortEarly: false });\n\n            return results;\n        } catch (error) {\n            if (error.name !== 'ValidationError') {\n                throw error;\n            }\n\n            return {\n                errors: (\n                    Object.keys(results.errors) as Array<keyof HostedInputValidateErrorDataMap>\n                ).reduce(\n                    (result, fieldType) => ({\n                        ...result,\n                        [fieldType]: (error as ValidationError).inner\n                            .filter((innerError) => innerError.path === fieldType)\n                            .map((innerError) => ({\n                                fieldType: innerError.path,\n                                message: innerError.errors.join(' '),\n                                type: innerError.type,\n                            })),\n                    }),\n                    {} as HostedInputValidateErrorDataMap,\n                ),\n                isValid: false,\n            };\n        }\n    }\n\n    private _configureCardValidator(): void {\n        const discoverInfo = creditCardType.getTypeInfo('discover');\n        const visaInfo = creditCardType.getTypeInfo('visa');\n\n        // Need to support 13 digit PAN because some gateways only provide test credit card numbers in this format.\n        creditCardType.updateCard('visa', {\n            lengths: [13, ...(visaInfo.lengths || [])],\n        });\n\n        // Add support for 8-BIN Discover Cards.\n        creditCardType.updateCard('discover', {\n            patterns: [...(discoverInfo.patterns || []), [810, 817]],\n        });\n\n        creditCardType.addCard({\n            niceType: 'Mada',\n            type: 'mada',\n            patterns: [\n                400861, 401757, 407197, 407395, 409201, 410685, 412565, 417633, 419593, 422817,\n                422818, 422819, 428331, 428671, 428672, 428673, 431361, 432328, 434107, 439954,\n                440533, 440647, 440795, 445564, 446393, 446404, 446672, 455036, 455708, 457865,\n                458456, 462220, 468540, 468541, 468542, 468543, 483010, 483011, 483012, 484783,\n                486094, 486095, 486096, 489317, 489318, 489319, 493428, 504300, 506968, 508160,\n                513213, 520058, 521076, 524130, 524514, 529415, 529741, 530060, 530906, 531095,\n                531196, 532013, 535825, 535989, 536023, 537767, 539931, 543085, 543357, 549760,\n                554180, 557606, 558848, 585265, 588845, 588846, 588847, 588848, 588849, 588850,\n                588851, 588982, 588983, 589005, 589206, 604906, 605141, 636120, 968201, 968202,\n                968203, 968204, 968205, 968206, 968207, 968208, 968209, 968210, 968211,\n            ],\n            gaps: [4, 8, 12],\n            lengths: [16, 18, 19],\n            code: {\n                name: 'CVV',\n                size: 3,\n            },\n        });\n    }\n\n    private _getCardCodeSchema(): StringSchema {\n        return string()\n            .required('CVV is required')\n            .test({\n                message: 'CVV must be valid',\n                name: 'invalid_card_code',\n                test(value) {\n                    const { card } = number((this.parent as HostedInputValues).cardNumber || '');\n\n                    return cvv(value, card && card.code ? card.code.size : undefined).isValid;\n                },\n            });\n    }\n\n    private _getCardExpirySchema(): StringSchema {\n        return string()\n            .required('Expiration date is required')\n            .test({\n                message: 'Expiration date must be a valid future date in MM / YY format',\n                name: 'invalid_card_expiry',\n                test: (value) => expirationDate(value).isValid,\n            });\n    }\n\n    private _getCardNameSchema(): StringSchema {\n        return string().max(200).required('Full name is required');\n    }\n\n    private _getCardNumberSchema(): StringSchema {\n        return string()\n            .required('Credit card number is required')\n            .test({\n                message: 'Credit card number must be valid',\n                name: 'invalid_card_number',\n                test: (value) => number(value).isValid,\n            });\n    }\n}\n","import { createRequestSender } from '@bigcommerce/request-sender';\n\nimport { IframeEventListener, IframeEventPoster } from '../common/iframe';\nimport { appendWww, parseUrl } from '../common/url';\nimport HostedFieldType from '../hosted-field-type';\nimport { ManualOrderPaymentRequestSender } from '../payment';\n\nimport CardExpiryFormatter from './card-expiry-formatter';\nimport CardNumberFormatter from './card-number-formatter';\nimport getHostedInputStorage from './get-hosted-input-storage';\nimport HostedAutocompleteFieldset from './hosted-autocomplete-fieldset';\nimport HostedCardExpiryInput from './hosted-card-expiry-input';\nimport HostedCardNumberInput from './hosted-card-number-input';\nimport HostedInput from './hosted-input';\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport HostedInputManualOrderPaymentHandler from './hosted-input-manual-order-payment-handler';\nimport { HostedInputStylesMap } from './hosted-input-styles';\nimport HostedInputValidator from './hosted-input-validator';\nimport mapToAccessibilityLabel from './map-to-accessibility-label';\nimport mapToAutocompleteType from './map-to-autocomplete-type';\n\nexport default class HostedInputFactory {\n    constructor(private _parentOrigin: string, private _paymentOrigin: string) {}\n\n    create(\n        form: HTMLFormElement,\n        type: HostedFieldType,\n        styles: HostedInputStylesMap = {},\n        fontUrls: string[] = [],\n        placeholder = '',\n        accessibilityLabel: string = mapToAccessibilityLabel(type),\n    ): HostedInput {\n        const autocomplete = mapToAutocompleteType(type);\n\n        if (type === HostedFieldType.CardNumber) {\n            return this._createNumberInput(\n                type,\n                form,\n                styles,\n                fontUrls,\n                placeholder,\n                accessibilityLabel,\n                autocomplete,\n            );\n        }\n\n        if (type === HostedFieldType.CardExpiry) {\n            return this._createExpiryInput(\n                form,\n                styles,\n                fontUrls,\n                placeholder,\n                accessibilityLabel,\n                autocomplete,\n            );\n        }\n\n        return this._createInput(\n            type,\n            form,\n            styles,\n            fontUrls,\n            placeholder,\n            accessibilityLabel,\n            autocomplete,\n        );\n    }\n\n    normalizeParentOrigin(origin: string): void {\n        if (this._parentOrigin === origin) {\n            return;\n        }\n\n        if (\n            this._parentOrigin !== appendWww(parseUrl(origin)).origin &&\n            origin !== appendWww(parseUrl(this._parentOrigin)).origin\n        ) {\n            return;\n        }\n\n        this._parentOrigin = origin;\n    }\n\n    getParentOrigin(): string {\n        return this._parentOrigin;\n    }\n\n    private _createExpiryInput(\n        form: HTMLFormElement,\n        styles: HostedInputStylesMap,\n        fontUrls: string[],\n        placeholder: string,\n        accessibilityLabel = '',\n        autocomplete = '',\n    ): HostedCardExpiryInput {\n        return new HostedCardExpiryInput(\n            form,\n            placeholder,\n            accessibilityLabel,\n            autocomplete,\n            styles,\n            fontUrls,\n            new IframeEventListener(this._parentOrigin),\n            new IframeEventPoster(this._parentOrigin, window.parent),\n            new HostedInputAggregator(window.parent),\n            new HostedInputValidator(),\n            this._createManualOrderPaymentHandler(),\n            new CardExpiryFormatter(),\n        );\n    }\n\n    private _createNumberInput(\n        type: HostedFieldType,\n        form: HTMLFormElement,\n        styles: HostedInputStylesMap,\n        fontUrls: string[],\n        placeholder: string,\n        accessibilityLabel = '',\n        autocomplete = '',\n    ): HostedCardNumberInput {\n        return new HostedCardNumberInput(\n            type,\n            form,\n            placeholder,\n            accessibilityLabel,\n            autocomplete,\n            styles,\n            fontUrls,\n            new IframeEventListener(this._parentOrigin),\n            new IframeEventPoster(this._parentOrigin, window.parent),\n            new HostedInputAggregator(window.parent),\n            new HostedInputValidator(),\n            this._createManualOrderPaymentHandler(),\n            new HostedAutocompleteFieldset(\n                form,\n                [HostedFieldType.CardCode, HostedFieldType.CardExpiry, HostedFieldType.CardName],\n                new HostedInputAggregator(window.parent),\n            ),\n            new CardNumberFormatter(),\n        );\n    }\n\n    private _createInput(\n        type: HostedFieldType,\n        form: HTMLFormElement,\n        styles: HostedInputStylesMap,\n        fontUrls: string[],\n        placeholder: string,\n        accessibilityLabel = '',\n        autocomplete = '',\n    ): HostedInput {\n        return new HostedInput(\n            type,\n            form,\n            placeholder,\n            accessibilityLabel,\n            autocomplete,\n            styles,\n            fontUrls,\n            new IframeEventListener(this._parentOrigin),\n            new IframeEventPoster(this._parentOrigin, window.parent),\n            new HostedInputAggregator(window.parent),\n            new HostedInputValidator(),\n            this._createManualOrderPaymentHandler(),\n        );\n    }\n\n    private _createManualOrderPaymentHandler(): HostedInputManualOrderPaymentHandler {\n        return new HostedInputManualOrderPaymentHandler(\n            new HostedInputAggregator(window.parent),\n            new HostedInputValidator(),\n            getHostedInputStorage(),\n            new IframeEventPoster(this._parentOrigin, window.parent),\n            new ManualOrderPaymentRequestSender(createRequestSender(), this._paymentOrigin),\n        );\n    }\n}\n","import HostedFieldType from '../hosted-field-type';\n\nexport default function mapToAccessibilityLabel(type: HostedFieldType): string {\n    switch (type) {\n        case HostedFieldType.CardCode:\n            return 'CVC';\n\n        case HostedFieldType.CardExpiry:\n            return 'Expiration';\n\n        case HostedFieldType.CardName:\n            return 'Name on card';\n\n        case HostedFieldType.CardNumber:\n            return 'Credit card number';\n    }\n}\n","import { StandardError } from '../common/errors';\n\nexport default class InvalidHostedFormConfigError extends StandardError {\n    constructor(message?: string) {\n        super(\n            message ||\n                'Unable to proceed due to invalid configuration provided for the hosted payment form.',\n        );\n\n        this.name = 'InvalidHostedFormConfigError';\n        this.type = 'invalid_hosted_form_config';\n    }\n}\n","import { fromEvent } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { IframeEventListener } from '../common/iframe';\nimport { InvalidHostedFormConfigError } from '../errors';\nimport {\n    HostedFieldAttachEvent,\n    HostedFieldEventMap,\n    HostedFieldEventType,\n} from '../hosted-field-events';\n\nimport HostedInput from './hosted-input';\nimport HostedInputFactory from './hosted-input-factory';\nimport HostedInputStorage from './hosted-input-storage';\n\ninterface EventTargetLike<TEvent> {\n    addListener(eventName: string, handler: (event: TEvent) => void): void;\n    removeListener(eventName: string, handler: (event: TEvent) => void): void;\n}\n\nexport default class HostedInputInitializer {\n    constructor(\n        private _factory: HostedInputFactory,\n        private _storage: HostedInputStorage,\n        private _eventListener: IframeEventListener<HostedFieldEventMap>,\n    ) {}\n\n    initialize(containerId: string, nonce?: string): Promise<HostedInput> {\n        if (nonce) {\n            this._storage.setNonce(nonce);\n        }\n\n        const form = this._createFormContainer(containerId);\n\n        this._resetPageStyles(containerId);\n        this._eventListener.listen();\n\n        return fromEvent<HostedFieldAttachEvent>(\n            this._eventListener as EventTargetLike<HostedFieldAttachEvent>,\n            HostedFieldEventType.AttachRequested,\n        )\n            .pipe(\n                map(({ payload }) => {\n                    const { accessibilityLabel, fontUrls, placeholder, styles, origin, type } =\n                        payload;\n\n                    if (origin) {\n                        this._factory.normalizeParentOrigin(origin);\n                    }\n\n                    const field = this._factory.create(\n                        form,\n                        type,\n                        styles,\n                        fontUrls,\n                        placeholder,\n                        accessibilityLabel,\n                    );\n\n                    field.attach();\n\n                    return field;\n                }),\n                take(1),\n            )\n            .toPromise();\n    }\n\n    private _resetPageStyles(containerId: string) {\n        const html = document.querySelector('html');\n        const body = document.querySelector('body');\n        const container = document.getElementById(containerId);\n\n        [html, body, container].forEach((node) => {\n            if (!node) {\n                return;\n            }\n\n            node.style.height = '100%';\n            node.style.width = '100%';\n            node.style.overflow = 'hidden';\n            node.style.padding = '0';\n            node.style.margin = '0';\n        });\n    }\n\n    private _createFormContainer(containerId: string): HTMLFormElement {\n        const container = document.getElementById(containerId);\n\n        if (!container) {\n            throw new InvalidHostedFormConfigError(\n                'Unable to proceed because the provided container ID is not valid.',\n            );\n        }\n\n        const form = document.createElement('form');\n        const button = document.createElement('button');\n\n        form.noValidate = true;\n        form.style.height = '100%';\n        form.style.width = '100%';\n        button.style.display = 'none';\n\n        container.appendChild(form);\n        form.appendChild(button);\n\n        return form;\n    }\n}\n","import { IframeEventListener } from '../common/iframe';\nimport { HostedFieldEventMap } from '../hosted-field-events';\n\nimport getHostedInputStorage from './get-hosted-input-storage';\nimport HostedInput from './hosted-input';\nimport HostedInputFactory from './hosted-input-factory';\nimport HostedInputInitializer from './hosted-input-initializer';\nimport HostedInputOptions from './hosted-input-options';\n\nexport default function initializeHostedInput(options: HostedInputOptions): Promise<HostedInput> {\n    const { containerId, nonce, parentOrigin, paymentOrigin } = options;\n    const initializer = new HostedInputInitializer(\n        new HostedInputFactory(parentOrigin, paymentOrigin),\n        getHostedInputStorage(),\n        new IframeEventListener<HostedFieldEventMap>(parentOrigin),\n    );\n\n    return initializer.initialize(containerId, nonce);\n}\n","import { IframeEventPoster } from '../common/iframe';\n\nimport { HostedInputAttachErrorEvent, HostedInputEventType } from './hosted-input-events';\nimport HostedInputInitializeErrorData from './hosted-input-initialize-error-data';\n\nconst poster = new IframeEventPoster<HostedInputAttachErrorEvent>('*', window.parent);\n\nexport default function notifyInitializeError(error: HostedInputInitializeErrorData): void {\n    poster.post({\n        type: HostedInputEventType.AttachFailed,\n        payload: { error },\n    });\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","require","message","object","name","type","setPrototypeOf","__proto__","Error","captureStackTrace","stack","parseUrl","url","test","anchor","document","createElement","href","port","indexOf","hostname","hash","origin","protocol","pathname","search","appendWww","replace","target","descriptor","bindMethodDecorator","decoratedTarget","getOwnPropertyNames","forEach","getOwnPropertyDescriptor","bindClassDecorator","_","method","boundMethod","bind","this","set","isIframeEvent","sourceOrigin","_sourceOrigins","_isListening","_listeners","listen","window","addEventListener","_handleMessage","stopListen","removeEventListener","addListener","listener","listeners","push","removeListener","index","splice","trigger","event","context","messageEvent","data","setNonce","nonce","_nonce","getNonce","storage","getHostedInputStorage","targetOrigin","_targetWindow","_context","_targetOrigin","post","options","targetWindow","result","fromEvent","pipe","filter","successType","errorType","map","take","toPromise","postMessage","setTarget","setContext","HostedFieldType","ContentType","_requestSender","_paymentOrigin","submitPayment","requestInitializationData","instrumentFormData","paymentMethodId","paymentSessionToken","cardExpiry","split","expiryMonth","expiryYear","headers","Accept","Json","body","instrument","cardName","number","cardNumber","expires","month","Number","trim","year","verification_value","cardCode","undefined","payment_method_id","form_nonce","format","RegExp","trimmedMonth","slice","trimmedYear","length","toObject","card","maxLength","max","creditCardType","info","lengths","unformattedValue","unformat","gaps","gapIndex","reduce","output","join","mapToAutocompleteType","CardCode","CardExpiry","CardName","CardNumber","_form","_fieldTypes","_inputAggregator","_handleChange","targetInput","targetHostedInput","getInputs","find","input","_getAutocompleteElementId","getType","id","setValue","_inputs","_createInput","attach","appendChild","detach","parentElement","removeChild","autocomplete","tabIndex","style","position","opacity","zIndex","kebabCase","HostedFieldEventType","HostedInputEventType","_type","_placeholder","_accessibilityLabel","_autocomplete","_styles","_fontUrls","_eventListener","_eventPoster","_inputValidator","_manualOrderPaymentHandler","_isTouched","_handleInput","_processChange","_handleBlur","_applyStyles","default","_validateForm","Blurred","payload","fieldType","_handleFocus","focus","Focused","_handleValidate","_handleSubmit","preventDefault","Entered","_forceFocusToInput","activeElement","navigator","userAgent","toLowerCase","_input","setAttribute","setSelectionRange","ValidateRequested","SubmitManualOrderRequested","handle","_configureInput","getValue","isTouched","_loadFonts","parent","hostedInput","AttachSucceeded","_unloadFonts","_formatValue","_notifyChange","_value","Changed","backgroundColor","border","display","height","margin","outline","padding","width","placeholder","inputMode","pattern","styles","allowedStyles","color","fontFamily","fontSize","fontWeight","keys","_fontLinks","querySelector","link","rel","head","values","getInputValues","validate","results","isValid","error","Validated","_previousValue","form","accessibilityLabel","fontUrls","eventListener","eventPoster","inputAggregator","inputValidator","manualOrderPaymentHandler","_formatter","_autocompleteFieldset","cardInfo","prevCardInfo","CardTypeChanged","cardType","unformattedPreviousValue","bin","isPotentiallyValid","substr","BinChanged","selectionEnd","formattedValue","_parentWindow","Array","frames","frame","DOMException","errors","flatMap","fieldErrors","_inputStorage","_manualOrderPaymentRequestSender","SubmitManualOrderFailed","code","snakeCase","SubmitManualOrderSucceeded","_isPaymentErrorResponse","response","_completeSchema","_getCardCodeSchema","_getCardExpirySchema","_getCardNameSchema","_getCardNumberSchema","_configureCardValidator","requiredField","schemas","abortEarly","inner","innerError","path","discoverInfo","getTypeInfo","visaInfo","updateCard","patterns","addCard","niceType","size","string","required","cvv","expirationDate","_parentOrigin","create","mapToAccessibilityLabel","_createNumberInput","_createExpiryInput","normalizeParentOrigin","getParentOrigin","_createManualOrderPaymentHandler","ManualOrderPaymentRequestSender","createRequestSender","_factory","_storage","initialize","containerId","_createFormContainer","_resetPageStyles","AttachRequested","field","getElementById","node","overflow","container","button","noValidate","initializeHostedInput","parentOrigin","paymentOrigin","poster","notifyInitializeError","AttachFailed"],"sourceRoot":""}