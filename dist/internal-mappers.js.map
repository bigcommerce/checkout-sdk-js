{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"tslib\"","webpack:///./src/coupon/map-to-internal-gift-certificate.ts","webpack:///./src/common/utility/cache-key-maps.ts","webpack:///./src/common/utility/cache-key-resolver.ts","webpack:///./src/quote/map-to-internal-quote.ts","webpack:///./src/shipping/map-to-internal-shipping-options.ts","webpack:///./src/bundles/internal-mappers.ts","webpack:///external \"lodash\"","webpack:///./src/payment/payment-method-types.ts","webpack:///./src/address/map-to-internal-address.ts","webpack:///./src/billing/is-billing-address-like.ts","webpack:///./src/cart/map-to-internal-line-items.ts","webpack:///./src/cart/map-gift-certificate-to-internal-line-item.ts","webpack:///external \"shallowequal\"","webpack:///./src/cart/map-to-internal-line-item.ts","webpack:///./src/shipping/map-to-internal-shipping-option.ts","webpack:///./src/common/utility/amount-transformer.ts","webpack:///./src/customer/map-to-internal-customer.ts","webpack:///./src/order/map-to-internal-order.ts","webpack:///./src/cart/map-to-internal-cart.ts","webpack:///./src/promotion/map-to-discount-notifications.ts","webpack:///./src/coupon/map-to-internal-coupon.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","mapToInternalGiftCertificate","giftCertificate","code","discountedAmount","used","remainingBalance","remaining","balance","purchaseDate","isTerminalCacheKeyMap","map","options","_lastId","_map","maps","_usedMaps","this","_options","maxSize","isEqual","onExpire","getKey","result","_resolveMap","args","index","parentMap","cacheKey","usedCount","_generateMap","slice","_removeLeastUsedMap","getUsedCount","length","isMatched","mapIndex","unshift","splice","parent","terminalMap","recentlyUsedMap","indexOf","pop","_removeMap","isRootCacheKeyMap","mapToInternalQuote","checkout","shippingAddress","consignment","consignments","orderComment","customerMessage","shippingOption","selectedShippingOption","id","undefined","billingAddress","mapToInternalShippingOptions","reduce","shippingOptions","availableShippingOptions","option","selectedOptionId","HOSTED","OFFLINE","mapToInternalAddress","address","addressId","isBillingAddressLike","firstName","lastName","company","addressLine1","address1","addressLine2","address2","city","province","stateOrProvince","provinceCode","stateOrProvinceCode","postCode","postalCode","country","countryCode","phone","customFields","mapToInternalLineItems","itemMap","decimalPlaces","idKey","keys","item","amountTransformer","imageUrl","amount","amountAfterDiscount","discount","integerAmount","toInteger","integerAmountAfterDiscount","integerUnitPrice","integerUnitPriceAfterDiscount","integerDiscount","quantity","sender","recipient","type","attributes","variantId","mapGiftCertificateToInternalLineItem","mapToInternalLineItemType","mapToInternalLineItem","extendedListPrice","extendedSalePrice","discountAmount","listPrice","salePrice","downloadsPageUrl","downloadPageUrl","brand","sku","categoryNames","productId","addedByPromotion","mapToInternalShippingOption","isSelected","description","price","cost","selected","isRecommended","transitTime","_decimalPlaces","Math","round","pow","mapToInternalCustomer","customer","addresses","customerId","isGuest","storeCredit","email","fullName","join","customerGroupName","customerGroup","mapToInternalOrder","order","orderMeta","payments","items","currency","orderId","lineItems","customerCanBeCreated","payment","mapToInternalOrderPayment","subtotal","baseAmount","coupon","coupons","sum","token","orderToken","callbackUrl","discountNotifications","providerId","totalDiscountedAmount","appliedGiftCertificates","detail","socialData","mapToInternalSocialDataList","status","hasDigitalItems","isDownloadable","isComplete","shipping","shippingCostTotal","amountBeforeDiscount","shippingCostBeforeDiscount","integerAmountBeforeDiscount","mapToStoreCredit","taxes","taxTotal","handling","handlingCostTotal","grandTotal","orderAmount","orderAmountAsInteger","mapToInternalPaymentStatus","isDefaultOrderPayment","step","helpText","instructions","returnUrl","socialDataObject","physicalItems","digitalItems","forEach","lineItem","socialMedia","image","url","link","shareText","text","sharingLink","channelName","channel","channelCode","mapToInternalCart","promotions","notifications","cart","promotion","banners","banner","push","placeholders","discountType","message","messageHtml","giftCertificates","certificate","required","isShippingRequired","taxSubtotal","couponTypes","mapToInternalCoupon","displayName","couponType"],"mappings":"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","file":"internal-mappers.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 175);\n","module.exports = require(\"tslib\");","import GiftCertificate from './gift-certificate';\nimport InternalGiftCertificate from './internal-gift-certificate';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalGiftCertificate(giftCertificate: GiftCertificate): InternalGiftCertificate {\n    return {\n        code: giftCertificate.code,\n        discountedAmount: giftCertificate.used,\n        remainingBalance: giftCertificate.remaining,\n        giftCertificate: {\n            balance: giftCertificate.balance,\n            code: giftCertificate.code,\n            purchaseDate: giftCertificate.purchaseDate,\n        },\n    };\n}\n","export interface RootCacheKeyMap {\n    maps: ChildCacheKeyMap[];\n}\n\nexport interface IntermediateCacheKeyMap {\n    maps: ChildCacheKeyMap[];\n    parentMap: RootCacheKeyMap | IntermediateCacheKeyMap;\n    usedCount: number;\n    value: any;\n}\n\nexport interface TerminalCacheKeyMap extends IntermediateCacheKeyMap {\n    cacheKey: string;\n}\n\nexport type ChildCacheKeyMap = IntermediateCacheKeyMap | TerminalCacheKeyMap;\n\nexport function isTerminalCacheKeyMap(map: ChildCacheKeyMap): map is TerminalCacheKeyMap {\n    return map.hasOwnProperty('cacheKey');\n}\n\nexport function isRootCacheKeyMap(map: RootCacheKeyMap | ChildCacheKeyMap): map is RootCacheKeyMap {\n    return map.hasOwnProperty('parentMap');\n}\n","import { noop } from 'lodash';\nimport shallowEqual from 'shallowequal';\n\nimport { isRootCacheKeyMap, isTerminalCacheKeyMap, ChildCacheKeyMap, IntermediateCacheKeyMap, RootCacheKeyMap, TerminalCacheKeyMap } from './cache-key-maps';\n\nexport interface CacheKeyResolverOptions {\n    maxSize?: number;\n    onExpire?(key: string): void;\n    isEqual?(valueA: any, valueB: any): boolean;\n}\n\ninterface ResolveResult {\n    index: number;\n    parentMap: RootCacheKeyMap | IntermediateCacheKeyMap;\n    map?: TerminalCacheKeyMap;\n}\n\nexport default class CacheKeyResolver {\n    private _lastId = 0;\n    private _map: RootCacheKeyMap = { maps: [] };\n    private _usedMaps: TerminalCacheKeyMap[] = [];\n    private _options: Required<CacheKeyResolverOptions>;\n\n    constructor(options?: CacheKeyResolverOptions) {\n        this._options = {\n            maxSize: 0,\n            isEqual: shallowEqual,\n            onExpire: noop,\n            ...options,\n        };\n    }\n\n    getKey(...args: any[]): string {\n        const result = this._resolveMap(...args);\n        const { index, parentMap } = result;\n        let { map } = result;\n\n        if (map && map.cacheKey) {\n            map.usedCount++;\n        } else {\n            map = this._generateMap(parentMap, args.slice(index));\n        }\n\n        // Keep track of the least used map so we can remove it if the size of\n        // the stack exceeds the maximum size.\n        this._removeLeastUsedMap(map);\n\n        return map.cacheKey;\n    }\n\n    getUsedCount(...args: any[]): number {\n        const { map } = this._resolveMap(...args);\n\n        return map ? map.usedCount : 0;\n    }\n\n    private _resolveMap(...args: any[]): ResolveResult {\n        let index = 0;\n        let parentMap = this._map;\n\n        // Traverse the tree to find the linked list of maps that match the\n        // arguments of the call. Each intermediate or terminal map contains a\n        // value that could be used to match with the arguments. The last map in\n        // the list (the terminal) should contain a cache key. If it can does\n        // not exist, we will return a falsy value so that the caller could\n        // handle and generate a new cache key.\n        while (parentMap.maps.length) {\n            let isMatched = false;\n\n            for (let mapIndex = 0; mapIndex < parentMap.maps.length; mapIndex++) {\n                const map = parentMap.maps[mapIndex];\n\n                if (!this._options.isEqual(map.value, args[index])) {\n                    continue;\n                }\n\n                // Move the most recently used map to the top of the stack for\n                // quicker access\n                parentMap.maps.unshift(...parentMap.maps.splice(mapIndex, 1));\n\n                if ((args.length === 0 || index === args.length - 1) && isTerminalCacheKeyMap(map)) {\n                    return { index, map, parentMap };\n                }\n\n                isMatched = true;\n                parentMap = map;\n                index++;\n\n                break;\n            }\n\n            if (!isMatched) {\n                break;\n            }\n        }\n\n        return { index, parentMap };\n    }\n\n    private _generateMap(parent: RootCacheKeyMap | IntermediateCacheKeyMap, args: any[]): TerminalCacheKeyMap {\n        let index = 0;\n        let parentMap = parent;\n        let map: IntermediateCacheKeyMap;\n\n        do {\n            map = {\n                maps: [],\n                parentMap,\n                usedCount: 1,\n                value: args[index],\n            };\n\n            // Continue to build the tree of maps so that it could be resolved\n            // next time when the function is called with the same set of\n            // arguments.\n            parentMap.maps.unshift(map);\n\n            parentMap = map;\n            index++;\n        } while (index < args.length);\n\n        const terminalMap = map as TerminalCacheKeyMap;\n\n        terminalMap.cacheKey = `${++this._lastId}`;\n\n        return terminalMap;\n    }\n\n    private _removeLeastUsedMap(recentlyUsedMap: TerminalCacheKeyMap): void {\n        if (!this._options.maxSize) {\n            return;\n        }\n\n        const index = this._usedMaps.indexOf(recentlyUsedMap);\n\n        this._usedMaps.splice(\n            index === -1 ? 0 : index,\n            index === -1 ? 0 : 1,\n            recentlyUsedMap\n        );\n\n        if (this._usedMaps.length <= this._options.maxSize) {\n            return;\n        }\n\n        const map = this._usedMaps.pop();\n\n        if (!map) {\n            return;\n        }\n\n        this._removeMap(map);\n        this._options.onExpire(map.cacheKey);\n    }\n\n    private _removeMap(map: ChildCacheKeyMap): void {\n        if (!map.parentMap) {\n            return;\n        }\n\n        map.parentMap.maps.splice(map.parentMap.maps.indexOf(map), 1);\n\n        if (isRootCacheKeyMap(map.parentMap)) {\n            return;\n        }\n\n        this._removeMap(map.parentMap);\n    }\n}\n","import { mapToInternalAddress, Address, InternalAddress } from '../address';\nimport { Checkout } from '../checkout';\n\nimport InternalQuote from './internal-quote';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalQuote(checkout: Checkout, shippingAddress?: Address): InternalQuote {\n    const consignment = checkout.consignments && checkout.consignments[0];\n\n    return {\n        orderComment: checkout.customerMessage,\n        shippingOption: consignment && consignment.selectedShippingOption ? consignment.selectedShippingOption.id : undefined,\n        billingAddress: checkout.billingAddress ? mapToInternalAddress(checkout.billingAddress) : {} as InternalAddress,\n        shippingAddress: shippingAddress && mapToInternalAddress(shippingAddress, checkout.consignments),\n    };\n}\n","import Consignment from './consignment';\nimport { InternalShippingOptionList } from './internal-shipping-option';\nimport mapToInternalShippingOption from './map-to-internal-shipping-option';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalShippingOptions(consignments: Consignment[]): InternalShippingOptionList {\n    return consignments.reduce((result, consignment) => {\n        let shippingOptions;\n\n        if (consignment.availableShippingOptions && consignment.availableShippingOptions.length) {\n            shippingOptions = consignment.availableShippingOptions;\n        } else if (consignment.selectedShippingOption) {\n            shippingOptions = [consignment.selectedShippingOption];\n        }\n\n        return {\n            ...result,\n            [consignment.id]: (shippingOptions || []).map(option => {\n                const selectedOptionId = consignment.selectedShippingOption && consignment.selectedShippingOption.id;\n\n                return mapToInternalShippingOption(\n                    option,\n                    option.id === selectedOptionId\n                );\n            }),\n        };\n    }, {});\n}\n","/**\n * Please note that these mappers are for internal use only. DO NOT USE. They\n * can be removed or changed at any time.\n */\nexport { mapToInternalAddress } from '../address';\nexport { mapToInternalCart } from '../cart';\nexport { mapToInternalCoupon, mapToInternalGiftCertificate } from '../coupon';\nexport { mapToInternalCustomer } from '../customer';\nexport { mapToInternalLineItem, mapToInternalLineItems } from '../cart';\nexport { mapToInternalOrder } from '../order';\nexport { mapToInternalQuote } from '../quote';\nexport { mapToInternalShippingOption, mapToInternalShippingOptions } from '../shipping';\nexport { CacheKeyResolver } from '../common/utility';\n","module.exports = require(\"lodash\");","export const HOSTED = 'PAYMENT_TYPE_HOSTED';\nexport const OFFLINE = 'PAYMENT_TYPE_OFFLINE';\n","import { isBillingAddressLike, BillingAddress } from '../billing';\nimport { Consignment } from '../shipping';\n\nimport Address from './address';\nimport InternalAddress from './internal-address';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalAddress(\n    address: Address | BillingAddress,\n    consignments?: Consignment[]\n): InternalAddress<any> {\n    let addressId;\n\n    if (isBillingAddressLike(address)) {\n        addressId = address.id;\n    } else if (consignments && consignments.length) {\n        addressId = consignments[0].id;\n    }\n\n    return {\n        id: addressId,\n        firstName: address.firstName,\n        lastName: address.lastName,\n        company: address.company,\n        addressLine1: address.address1,\n        addressLine2: address.address2,\n        city: address.city,\n        province: address.stateOrProvince,\n        provinceCode: address.stateOrProvinceCode,\n        postCode: address.postalCode,\n        country: address.country,\n        countryCode: address.countryCode,\n        phone: address.phone,\n        customFields: address.customFields,\n    };\n}\n","import { Address } from '../address';\n\nimport BillingAddress from './billing-address';\n\nexport default function isBillingAddressLike(address: Address): address is BillingAddress {\n    const billingAddress = address as BillingAddress;\n\n    return typeof billingAddress.id !== 'undefined';\n}\n","import InternalLineItem from './internal-line-item';\nimport { LineItem } from './line-item';\nimport LineItemMap from './line-item-map';\nimport mapGiftCertificateToInternalLineItem from './map-gift-certificate-to-internal-line-item';\nimport mapToInternalLineItem from './map-to-internal-line-item';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalLineItems(\n    itemMap: LineItemMap,\n    decimalPlaces: number,\n    idKey: keyof LineItem = 'id'\n): InternalLineItem[] {\n    return (Object.keys(itemMap) as Array<keyof LineItemMap>)\n        .reduce((result, key) => [\n            ...result,\n            ...(itemMap[key] as LineItem[]).map((item: any) => {\n                if (key === 'giftCertificates') {\n                    return mapGiftCertificateToInternalLineItem(item, decimalPlaces);\n                }\n\n                return mapToInternalLineItem(\n                    item,\n                    mapToInternalLineItemType(key),\n                    decimalPlaces,\n                    idKey\n                );\n            }),\n        ], [] as InternalLineItem[]);\n}\n\nfunction mapToInternalLineItemType(type: string): string {\n    switch (type) {\n        case 'physicalItems':\n            return 'ItemPhysicalEntity';\n\n        case 'digitalItems':\n            return 'ItemDigitalEntity';\n\n        case 'giftCertificates':\n            return 'ItemGiftCertificateEntity';\n\n        default:\n            return '';\n    }\n}\n","import { AmountTransformer } from '../common/utility';\n\nimport InternalLineItem from './internal-line-item';\nimport { GiftCertificateItem } from './line-item';\n\nexport default function mapGiftCertificateToInternalLineItem(\n    item: GiftCertificateItem,\n    decimalPlaces: number\n): InternalLineItem {\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: item.id,\n        imageUrl: '',\n        name: item.name,\n        amount: item.amount,\n        amountAfterDiscount: item.amount,\n        discount: 0,\n        integerAmount: amountTransformer.toInteger(item.amount),\n        integerAmountAfterDiscount: amountTransformer.toInteger(item.amount),\n        integerUnitPrice: amountTransformer.toInteger(item.amount),\n        integerUnitPriceAfterDiscount: amountTransformer.toInteger(item.amount),\n        integerDiscount: 0,\n        quantity: 1,\n        sender: item.sender,\n        recipient: item.recipient,\n        type: 'ItemGiftCertificateEntity',\n        attributes: [],\n        variantId: null,\n    };\n}\n","module.exports = require(\"shallowequal\");","import { AmountTransformer } from '../common/utility';\n\nimport InternalLineItem from './internal-line-item';\nimport { DigitalItem, LineItem } from './line-item';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalLineItem(\n    item: LineItem,\n    type: string,\n    decimalPlaces: number,\n    idKey: keyof LineItem = 'id'\n): InternalLineItem {\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: (item[idKey] as string | number),\n        imageUrl: item.imageUrl,\n        amount: item.extendedListPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        discount: item.discountAmount,\n        integerAmount: amountTransformer.toInteger(item.extendedListPrice),\n        integerAmountAfterDiscount: amountTransformer.toInteger(item.extendedSalePrice),\n        integerDiscount: amountTransformer.toInteger(item.discountAmount),\n        integerUnitPrice: amountTransformer.toInteger(item.listPrice),\n        integerUnitPriceAfterDiscount: amountTransformer.toInteger(item.salePrice),\n        downloadsPageUrl: (item as DigitalItem).downloadPageUrl,\n        name: item.name,\n        quantity: item.quantity,\n        brand: item.brand,\n        sku: item.sku,\n        categoryNames: item.categoryNames,\n        variantId: item.variantId,\n        productId: item.productId,\n        attributes: (item.options || []).map(option => ({\n            name: option.name,\n            value: option.value,\n        })),\n        addedByPromotion: item.addedByPromotion,\n        type,\n    };\n}\n","import InternalShippingOption from './internal-shipping-option';\nimport ShippingOption from './shipping-option';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalShippingOption(option: ShippingOption, isSelected: boolean): InternalShippingOption {\n    return {\n        description: option.description,\n        module: option.type,\n        price: option.cost,\n        id: option.id,\n        selected: isSelected,\n        isRecommended: option.isRecommended,\n        imageUrl: option.imageUrl,\n        transitTime: option.transitTime,\n    };\n}\n","export default class AmountTransformer {\n    constructor(private _decimalPlaces: number) {}\n\n    toInteger(amount: number): number {\n        return Math.round(amount * Math.pow(10, this._decimalPlaces));\n    }\n}\n","import { mapToInternalAddress } from '../address';\nimport { BillingAddress } from '../billing';\n\nimport { Customer } from '.';\nimport InternalCustomer from './internal-customer';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalCustomer(customer: Customer, billingAddress: BillingAddress): InternalCustomer {\n    const firstName = customer.firstName || billingAddress.firstName || '';\n    const lastName = customer.lastName || billingAddress.lastName || '';\n\n    return {\n        addresses: (customer.addresses || []).map(address => mapToInternalAddress(address)),\n        customerId: customer.id,\n        isGuest: customer.isGuest,\n        storeCredit: customer.storeCredit,\n        email: customer.email || billingAddress.email || '',\n        firstName,\n        lastName,\n        name: customer.fullName || [firstName, lastName].join(' '),\n        customerGroupName: customer.customerGroup && customer.customerGroup.name,\n    };\n}\n","import { filter, find, keyBy, reduce } from 'lodash';\n\nimport { mapToInternalLineItems, LineItem } from '../cart';\nimport { Checkout } from '../checkout';\nimport { AmountTransformer } from '../common/utility';\nimport { mapToInternalCoupon } from '../coupon';\nimport { HOSTED } from '../payment';\n\nimport InternalOrder, { InternalGiftCertificateList, InternalIncompleteOrder, InternalOrderPayment, InternalSocialDataList } from './internal-order';\nimport Order, { GatewayOrderPayment, GiftCertificateOrderPayment, OrderPayment, OrderPayments } from './order';\nimport { OrderMetaState } from './order-state';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalOrder(order: Order, orderMeta: OrderMetaState = {}): InternalOrder {\n    const decimalPlaces = order.currency.decimalPlaces;\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: order.orderId,\n        items: mapToInternalLineItems(order.lineItems, order.currency.decimalPlaces, 'productId'),\n        orderId: order.orderId,\n        currency: order.currency.code,\n        customerCanBeCreated: order.customerCanBeCreated,\n        payment: mapToInternalOrderPayment(order.payments, orderMeta.payment),\n        subtotal: {\n            amount: order.baseAmount,\n            integerAmount: amountTransformer.toInteger(order.baseAmount),\n        },\n        coupon: {\n            discountedAmount: reduce(order.coupons, (sum, coupon) => {\n                return sum + coupon.discountedAmount;\n            }, 0),\n            coupons: order.coupons.map(mapToInternalCoupon),\n        },\n        discount: {\n            amount: order.discountAmount,\n            integerAmount: amountTransformer.toInteger(order.discountAmount),\n        },\n        token: orderMeta.orderToken,\n        callbackUrl: orderMeta.callbackUrl,\n        discountNotifications: [],\n        giftCertificate: mapToGiftCertificates(order.payments),\n        socialData: mapToInternalSocialDataList(order),\n        status: order.status,\n        hasDigitalItems: order.hasDigitalItems,\n        isDownloadable: order.isDownloadable,\n        isComplete: order.isComplete,\n        shipping: {\n            amount: order.shippingCostTotal,\n            integerAmount: amountTransformer.toInteger(order.shippingCostTotal),\n            amountBeforeDiscount: order.shippingCostBeforeDiscount,\n            integerAmountBeforeDiscount: amountTransformer.toInteger(order.shippingCostBeforeDiscount),\n        },\n        storeCredit: {\n            amount: mapToStoreCredit(order.payments),\n        },\n        taxes: order.taxes,\n        taxTotal: {\n            amount: order.taxTotal,\n            integerAmount: amountTransformer.toInteger(order.taxTotal),\n        },\n        handling: {\n            amount: order.handlingCostTotal,\n            integerAmount: amountTransformer.toInteger(order.handlingCostTotal),\n        },\n        grandTotal: {\n            amount: order.orderAmount,\n            integerAmount: order.orderAmountAsInteger,\n        },\n    };\n}\n\nexport function mapToInternalIncompleteOrder(checkout: Checkout): InternalIncompleteOrder {\n    const payment = find(checkout.payments, { providerType: HOSTED });\n\n    return {\n        orderId: null,\n        isComplete: false,\n        payment: !payment ? {} : {\n            id: payment.providerId,\n            gateway: payment.gatewayId,\n            status: mapToInternalPaymentStatus(payment.detail.step),\n        },\n    };\n}\n\nfunction mapToInternalPaymentStatus(status: string): string {\n    return `PAYMENT_STATUS_${status}`;\n}\n\nfunction mapToStoreCredit(payments?: OrderPayments): number {\n    const item = find(payments, { providerId: 'storecredit' });\n\n    return item ? item.amount : 0;\n}\n\nfunction mapToGiftCertificates(payments?: OrderPayments): InternalGiftCertificateList {\n    const items = filter(payments, { providerId: 'giftcertificate' }) as GiftCertificateOrderPayment[];\n\n    return {\n        totalDiscountedAmount: reduce(items, (sum, item) => item.amount + sum, 0),\n        appliedGiftCertificates: keyBy(items.map(item => ({\n            code: item.detail.code,\n            discountedAmount: item.amount,\n            remainingBalance: item.detail.remaining,\n            giftCertificate: {\n                balance: item.amount + item.detail.remaining,\n                code: item.detail.code,\n                purchaseDate: '',\n            },\n        })), 'code'),\n    };\n}\n\nfunction mapToInternalOrderPayment(payments?: OrderPayments, payment: InternalOrderPayment = {}): InternalOrderPayment {\n    const item = find(payments, isDefaultOrderPayment) as GatewayOrderPayment;\n\n    if (!item) {\n        return {};\n    }\n\n    return {\n        id: item.providerId,\n        status: mapToInternalPaymentStatus(item.detail.step),\n        helpText: item.detail.instructions,\n        returnUrl: payment.returnUrl,\n    };\n}\n\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\n    return payment.providerId !== 'giftcertificate' && payment.providerId !== 'storecredit';\n}\n\nfunction mapToInternalSocialDataList(order: Order): { [itemId: string]: InternalSocialDataList } | undefined {\n    const socialDataObject: { [itemId: string]: InternalSocialDataList } = {};\n    const items = [\n        ...order.lineItems.physicalItems,\n        ...order.lineItems.digitalItems,\n    ];\n\n    items.forEach(item => {\n        socialDataObject[item.id] = mapToInternalSocialData(item);\n    });\n\n    return socialDataObject;\n}\n\nfunction mapToInternalSocialData(lineItem: LineItem): InternalSocialDataList {\n    const codes = ['fb', 'tw', 'gp'];\n\n    return codes.reduce((socialData, code) => {\n        const item = lineItem.socialMedia && find(lineItem.socialMedia, item => item.code === code);\n\n        if (!item) {\n            return socialData;\n        }\n\n        socialData[code] = {\n            name: lineItem.name,\n            description: lineItem.name,\n            image: lineItem.imageUrl,\n            url: item.link,\n            shareText: item.text,\n            sharingLink: item.link,\n            channelName: item.channel,\n            channelCode: item.code,\n        };\n\n        return socialData;\n    }, {} as InternalSocialDataList);\n}\n","import { keyBy, reduce, some } from 'lodash';\n\nimport { Checkout } from '../checkout';\nimport { AmountTransformer } from '../common/utility';\nimport { mapToInternalCoupon, mapToInternalGiftCertificate } from '../coupon';\nimport { mapToDiscountNotifications } from '../promotion';\n\nimport InternalCart from './internal-cart';\nimport mapToInternalLineItems from './map-to-internal-line-items';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalCart(checkout: Checkout): InternalCart {\n    const decimalPlaces = checkout.cart.currency.decimalPlaces;\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: checkout.cart.id,\n        items: mapToInternalLineItems(checkout.cart.lineItems, decimalPlaces),\n        currency: checkout.cart.currency.code,\n        coupon: {\n            discountedAmount: reduce(checkout.cart.coupons, (sum, coupon) => {\n                return sum + coupon.discountedAmount;\n            }, 0),\n            coupons: checkout.cart.coupons.map(mapToInternalCoupon),\n        },\n        discount: {\n            amount: checkout.cart.discountAmount,\n            integerAmount: amountTransformer.toInteger(checkout.cart.discountAmount),\n        },\n        discountNotifications: mapToDiscountNotifications(checkout.promotions),\n        giftCertificate: {\n            totalDiscountedAmount: reduce(checkout.giftCertificates, (sum, certificate) => {\n                return sum + certificate.used;\n            }, 0),\n            appliedGiftCertificates: keyBy(checkout.giftCertificates.map(mapToInternalGiftCertificate), 'code'),\n        },\n        shipping: {\n            amount: checkout.shippingCostTotal,\n            integerAmount: amountTransformer.toInteger(checkout.shippingCostTotal),\n            amountBeforeDiscount: checkout.shippingCostBeforeDiscount,\n            integerAmountBeforeDiscount: amountTransformer.toInteger(checkout.shippingCostBeforeDiscount),\n            required: some(checkout.cart.lineItems.physicalItems, lineItem => lineItem.isShippingRequired),\n        },\n        subtotal: {\n            amount: checkout.subtotal,\n            integerAmount: amountTransformer.toInteger(checkout.subtotal),\n        },\n        storeCredit: {\n            amount: checkout.customer ? checkout.customer.storeCredit : 0,\n        },\n        taxSubtotal: {\n            amount: checkout.taxTotal,\n            integerAmount: amountTransformer.toInteger(checkout.taxTotal),\n        },\n        taxes: checkout.taxes,\n        taxTotal: {\n            amount: checkout.taxTotal,\n            integerAmount: amountTransformer.toInteger(checkout.taxTotal),\n        },\n        handling: {\n            amount: checkout.handlingCostTotal,\n            integerAmount: amountTransformer.toInteger(checkout.handlingCostTotal),\n        },\n        grandTotal: {\n            amount: checkout.grandTotal,\n            integerAmount: amountTransformer.toInteger(checkout.grandTotal),\n        },\n    };\n}\n","import { DiscountNotification } from '../discount';\n\nimport { Promotion } from '.';\n\nexport default function mapToDiscountNotifications(promotions?: Promotion[]): DiscountNotification[] {\n    const notifications: DiscountNotification[] = [];\n\n    (promotions || []).forEach(promotion => {\n        (promotion.banners || []).forEach(banner => {\n            notifications.push({\n                placeholders: [],\n                discountType: null,\n                message: '',\n                messageHtml: banner.text,\n            });\n        });\n    });\n\n    return notifications;\n}\n","import Coupon from './coupon';\nimport InternalCoupon from './internal-coupon';\n\nconst couponTypes = [\n    'per_item_discount',\n    'percentage_discount',\n    'per_total_discount',\n    'shipping_discount',\n    'free_shipping',\n];\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalCoupon(coupon: Coupon): InternalCoupon {\n    return {\n        code: coupon.code,\n        discount: coupon.displayName,\n        discountType: couponTypes.indexOf(coupon.couponType),\n    };\n}\n"],"sourceRoot":""}