{"version":3,"file":"internal-mappers.js","mappings":"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","sources":["webpack://@bigcommerce/checkout-sdk/webpack/bootstrap","webpack://@bigcommerce/checkout-sdk/webpack/runtime/compat get default export","webpack://@bigcommerce/checkout-sdk/webpack/runtime/define property getters","webpack://@bigcommerce/checkout-sdk/webpack/runtime/hasOwnProperty shorthand","webpack://@bigcommerce/checkout-sdk/webpack/runtime/make namespace object","webpack://@bigcommerce/checkout-sdk/./packages/core/src/address/map-to-internal-address.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/billing/is-billing-address-like.ts","webpack://@bigcommerce/checkout-sdk/external commonjs \"lodash\"","webpack://@bigcommerce/checkout-sdk/./packages/core/src/common/utility/amount-transformer.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/coupon/map-to-internal-coupon.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/coupon/map-to-internal-gift-certificate.ts","webpack://@bigcommerce/checkout-sdk/external commonjs \"tslib\"","webpack://@bigcommerce/checkout-sdk/./packages/core/src/cart/map-to-internal-line-item.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/cart/map-to-internal-line-items.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/cart/map-gift-certificate-to-internal-line-item.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/cart/map-to-internal-cart.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/promotion/map-to-discount-notifications.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/customer/map-to-internal-customer.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/order/map-to-internal-order.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/quote/map-to-internal-quote.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/shipping/map-to-internal-shipping-option.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/shipping/map-to-internal-shipping-options.ts","webpack://@bigcommerce/checkout-sdk/external commonjs \"shallowequal\"","webpack://@bigcommerce/checkout-sdk/./packages/core/src/common/utility/cache-key-maps.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/common/utility/cache-key-resolver.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { isBillingAddressLike, BillingAddress } from '../billing';\nimport { Consignment } from '../shipping';\n\nimport Address from './address';\nimport InternalAddress from './internal-address';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalAddress(\n    address: Address | BillingAddress,\n    consignments?: Consignment[]\n): InternalAddress<any> {\n    let addressId;\n\n    if (isBillingAddressLike(address)) {\n        addressId = address.id;\n    } else if (consignments && consignments.length) {\n        addressId = consignments[0].id;\n    }\n\n    return {\n        id: addressId,\n        firstName: address.firstName,\n        lastName: address.lastName,\n        company: address.company,\n        addressLine1: address.address1,\n        addressLine2: address.address2,\n        city: address.city,\n        province: address.stateOrProvince,\n        provinceCode: address.stateOrProvinceCode,\n        postCode: address.postalCode,\n        country: address.country,\n        countryCode: address.countryCode,\n        phone: address.phone,\n        customFields: address.customFields,\n    };\n}\n","import { Address } from '../address';\n\nimport BillingAddress from './billing-address';\n\nexport default function isBillingAddressLike(address: Address): address is BillingAddress {\n    const billingAddress = address as BillingAddress;\n\n    return typeof billingAddress.id !== 'undefined';\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"lodash\");","export default class AmountTransformer {\n    constructor(private _decimalPlaces: number) {}\n\n    toInteger(amount: number): number {\n        return Math.round(amount * Math.pow(10, this._decimalPlaces));\n    }\n}\n","import Coupon from './coupon';\nimport InternalCoupon from './internal-coupon';\n\nconst couponTypes = [\n    'per_item_discount',\n    'percentage_discount',\n    'per_total_discount',\n    'shipping_discount',\n    'free_shipping',\n];\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalCoupon(coupon: Coupon): InternalCoupon {\n    return {\n        code: coupon.code,\n        discount: coupon.displayName,\n        discountType: couponTypes.indexOf(coupon.couponType),\n    };\n}\n","import GiftCertificate from './gift-certificate';\nimport InternalGiftCertificate from './internal-gift-certificate';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalGiftCertificate(giftCertificate: GiftCertificate): InternalGiftCertificate {\n    return {\n        code: giftCertificate.code,\n        discountedAmount: giftCertificate.used,\n        remainingBalance: giftCertificate.remaining,\n        giftCertificate: {\n            balance: giftCertificate.balance,\n            code: giftCertificate.code,\n            purchaseDate: giftCertificate.purchaseDate,\n        },\n    };\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"tslib\");","import { AmountTransformer } from '../common/utility';\n\nimport InternalLineItem from './internal-line-item';\nimport { DigitalItem, LineItem } from './line-item';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalLineItem(\n    item: LineItem,\n    type: string,\n    decimalPlaces: number,\n    idKey: keyof LineItem = 'id'\n): InternalLineItem {\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: (item[idKey] as string | number),\n        imageUrl: item.imageUrl,\n        amount: item.extendedListPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        discount: item.discountAmount,\n        integerAmount: amountTransformer.toInteger(item.extendedListPrice),\n        integerAmountAfterDiscount: amountTransformer.toInteger(item.extendedSalePrice),\n        integerDiscount: amountTransformer.toInteger(item.discountAmount),\n        integerUnitPrice: amountTransformer.toInteger(item.listPrice),\n        integerUnitPriceAfterDiscount: amountTransformer.toInteger(item.salePrice),\n        downloadsPageUrl: (item as DigitalItem).downloadPageUrl,\n        name: item.name,\n        quantity: item.quantity,\n        brand: item.brand,\n        sku: item.sku,\n        categoryNames: item.categoryNames,\n        variantId: item.variantId,\n        productId: item.productId,\n        attributes: (item.options || []).map(option => ({\n            name: option.name,\n            value: option.value,\n        })),\n        addedByPromotion: item.addedByPromotion,\n        type,\n    };\n}\n","import InternalLineItem from './internal-line-item';\nimport { LineItem } from './line-item';\nimport LineItemMap from './line-item-map';\nimport mapGiftCertificateToInternalLineItem from './map-gift-certificate-to-internal-line-item';\nimport mapToInternalLineItem from './map-to-internal-line-item';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalLineItems(\n    itemMap: LineItemMap,\n    decimalPlaces: number,\n    idKey: keyof LineItem = 'id'\n): InternalLineItem[] {\n    return (Object.keys(itemMap) as Array<keyof LineItemMap>)\n        .reduce((result, key) => [\n            ...result,\n            ...(itemMap[key] as LineItem[]).map((item: any) => {\n                if (key === 'giftCertificates') {\n                    return mapGiftCertificateToInternalLineItem(item, decimalPlaces);\n                }\n\n                return mapToInternalLineItem(\n                    item,\n                    mapToInternalLineItemType(key),\n                    decimalPlaces,\n                    idKey\n                );\n            }),\n        ], [] as InternalLineItem[]);\n}\n\nfunction mapToInternalLineItemType(type: string): string {\n    switch (type) {\n        case 'physicalItems':\n            return 'ItemPhysicalEntity';\n\n        case 'digitalItems':\n            return 'ItemDigitalEntity';\n\n        case 'giftCertificates':\n            return 'ItemGiftCertificateEntity';\n\n        default:\n            return '';\n    }\n}\n","import { AmountTransformer } from '../common/utility';\n\nimport InternalLineItem from './internal-line-item';\nimport { GiftCertificateItem } from './line-item';\n\nexport default function mapGiftCertificateToInternalLineItem(\n    item: GiftCertificateItem,\n    decimalPlaces: number\n): InternalLineItem {\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: item.id,\n        imageUrl: '',\n        name: item.name,\n        amount: item.amount,\n        amountAfterDiscount: item.amount,\n        discount: 0,\n        integerAmount: amountTransformer.toInteger(item.amount),\n        integerAmountAfterDiscount: amountTransformer.toInteger(item.amount),\n        integerUnitPrice: amountTransformer.toInteger(item.amount),\n        integerUnitPriceAfterDiscount: amountTransformer.toInteger(item.amount),\n        integerDiscount: 0,\n        quantity: 1,\n        sender: item.sender,\n        recipient: item.recipient,\n        type: 'ItemGiftCertificateEntity',\n        attributes: [],\n        variantId: null,\n    };\n}\n","import { keyBy, reduce, some } from 'lodash';\n\nimport { Checkout } from '../checkout';\nimport { AmountTransformer } from '../common/utility';\nimport { mapToInternalCoupon, mapToInternalGiftCertificate } from '../coupon';\nimport { mapToDiscountNotifications } from '../promotion';\n\nimport InternalCart from './internal-cart';\nimport mapToInternalLineItems from './map-to-internal-line-items';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalCart(checkout: Checkout): InternalCart {\n    const decimalPlaces = checkout.cart.currency.decimalPlaces;\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: checkout.cart.id,\n        items: mapToInternalLineItems(checkout.cart.lineItems, decimalPlaces),\n        currency: checkout.cart.currency.code,\n        coupon: {\n            discountedAmount: reduce(checkout.cart.coupons, (sum, coupon) => {\n                return sum + coupon.discountedAmount;\n            }, 0),\n            coupons: checkout.cart.coupons.map(mapToInternalCoupon),\n        },\n        discount: {\n            amount: checkout.cart.discountAmount,\n            integerAmount: amountTransformer.toInteger(checkout.cart.discountAmount),\n        },\n        discountNotifications: mapToDiscountNotifications(checkout.promotions),\n        giftCertificate: {\n            totalDiscountedAmount: reduce(checkout.giftCertificates, (sum, certificate) => {\n                return sum + certificate.used;\n            }, 0),\n            appliedGiftCertificates: keyBy(checkout.giftCertificates.map(mapToInternalGiftCertificate), 'code'),\n        },\n        shipping: {\n            amount: checkout.shippingCostTotal,\n            integerAmount: amountTransformer.toInteger(checkout.shippingCostTotal),\n            amountBeforeDiscount: checkout.shippingCostBeforeDiscount,\n            integerAmountBeforeDiscount: amountTransformer.toInteger(checkout.shippingCostBeforeDiscount),\n            required: some(checkout.cart.lineItems.physicalItems, lineItem => lineItem.isShippingRequired),\n        },\n        subtotal: {\n            amount: checkout.subtotal,\n            integerAmount: amountTransformer.toInteger(checkout.subtotal),\n        },\n        storeCredit: {\n            amount: checkout.customer ? checkout.customer.storeCredit : 0,\n        },\n        taxSubtotal: {\n            amount: checkout.taxTotal,\n            integerAmount: amountTransformer.toInteger(checkout.taxTotal),\n        },\n        taxes: checkout.taxes,\n        taxTotal: {\n            amount: checkout.taxTotal,\n            integerAmount: amountTransformer.toInteger(checkout.taxTotal),\n        },\n        handling: {\n            amount: checkout.handlingCostTotal,\n            integerAmount: amountTransformer.toInteger(checkout.handlingCostTotal),\n        },\n        grandTotal: {\n            amount: checkout.grandTotal,\n            integerAmount: amountTransformer.toInteger(checkout.grandTotal),\n        },\n    };\n}\n","import { DiscountNotification } from '../discount';\n\nimport { Promotion } from '.';\n\nexport default function mapToDiscountNotifications(promotions?: Promotion[]): DiscountNotification[] {\n    const notifications: DiscountNotification[] = [];\n\n    (promotions || []).forEach(promotion => {\n        (promotion.banners || []).forEach(banner => {\n            notifications.push({\n                placeholders: [],\n                discountType: null,\n                message: '',\n                messageHtml: banner.text,\n            });\n        });\n    });\n\n    return notifications;\n}\n","import { mapToInternalAddress } from '../address';\nimport { BillingAddress } from '../billing';\n\nimport { Customer } from '.';\nimport InternalCustomer from './internal-customer';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalCustomer(customer: Customer, billingAddress: BillingAddress): InternalCustomer {\n    const firstName = customer.firstName || billingAddress.firstName || '';\n    const lastName = customer.lastName || billingAddress.lastName || '';\n\n    return {\n        addresses: (customer.addresses || []).map(address => mapToInternalAddress(address)),\n        customerId: customer.id,\n        isGuest: customer.isGuest,\n        storeCredit: customer.storeCredit,\n        email: customer.email || billingAddress.email || '',\n        firstName,\n        lastName,\n        name: customer.fullName || [firstName, lastName].join(' '),\n        customerGroupName: customer.customerGroup && customer.customerGroup.name,\n    };\n}\n","import { filter, find, keyBy, reduce } from 'lodash';\n\nimport { mapToInternalLineItems, LineItem } from '../cart';\nimport { Checkout } from '../checkout';\nimport { AmountTransformer } from '../common/utility';\nimport { mapToInternalCoupon } from '../coupon';\nimport { HOSTED } from '../payment';\n\nimport InternalOrder, { InternalGiftCertificateList, InternalIncompleteOrder, InternalOrderPayment, InternalSocialDataList } from './internal-order';\nimport Order, { GatewayOrderPayment, GiftCertificateOrderPayment, OrderPayment, OrderPayments } from './order';\nimport { OrderMetaState } from './order-state';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalOrder(order: Order, orderMeta: OrderMetaState = {}): InternalOrder {\n    const decimalPlaces = order.currency.decimalPlaces;\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: order.orderId,\n        items: mapToInternalLineItems(order.lineItems, order.currency.decimalPlaces, 'productId'),\n        orderId: order.orderId,\n        currency: order.currency.code,\n        customerCanBeCreated: order.customerCanBeCreated,\n        payment: mapToInternalOrderPayment(order.payments, orderMeta.payment),\n        subtotal: {\n            amount: order.baseAmount,\n            integerAmount: amountTransformer.toInteger(order.baseAmount),\n        },\n        coupon: {\n            discountedAmount: reduce(order.coupons, (sum, coupon) => {\n                return sum + coupon.discountedAmount;\n            }, 0),\n            coupons: order.coupons.map(mapToInternalCoupon),\n        },\n        discount: {\n            amount: order.discountAmount,\n            integerAmount: amountTransformer.toInteger(order.discountAmount),\n        },\n        token: orderMeta.orderToken,\n        callbackUrl: orderMeta.callbackUrl,\n        discountNotifications: [],\n        giftCertificate: mapToGiftCertificates(order.payments),\n        socialData: mapToInternalSocialDataList(order),\n        status: order.status,\n        hasDigitalItems: order.hasDigitalItems,\n        isDownloadable: order.isDownloadable,\n        isComplete: order.isComplete,\n        shipping: {\n            amount: order.shippingCostTotal,\n            integerAmount: amountTransformer.toInteger(order.shippingCostTotal),\n            amountBeforeDiscount: order.shippingCostBeforeDiscount,\n            integerAmountBeforeDiscount: amountTransformer.toInteger(order.shippingCostBeforeDiscount),\n        },\n        storeCredit: {\n            amount: mapToStoreCredit(order.payments),\n        },\n        taxes: order.taxes,\n        taxTotal: {\n            amount: order.taxTotal,\n            integerAmount: amountTransformer.toInteger(order.taxTotal),\n        },\n        handling: {\n            amount: order.handlingCostTotal,\n            integerAmount: amountTransformer.toInteger(order.handlingCostTotal),\n        },\n        grandTotal: {\n            amount: order.orderAmount,\n            integerAmount: order.orderAmountAsInteger,\n        },\n    };\n}\n\nexport function mapToInternalIncompleteOrder(checkout: Checkout): InternalIncompleteOrder {\n    const payment = find(checkout.payments, { providerType: HOSTED });\n\n    return {\n        orderId: null,\n        isComplete: false,\n        payment: !payment ? {} : {\n            id: payment.providerId,\n            gateway: payment.gatewayId,\n            status: mapToInternalPaymentStatus(payment.detail.step),\n        },\n    };\n}\n\nfunction mapToInternalPaymentStatus(status: string): string {\n    return `PAYMENT_STATUS_${status}`;\n}\n\nfunction mapToStoreCredit(payments?: OrderPayments): number {\n    const item = find(payments, { providerId: 'storecredit' });\n\n    return item ? item.amount : 0;\n}\n\nfunction mapToGiftCertificates(payments?: OrderPayments): InternalGiftCertificateList {\n    const items = filter(payments, { providerId: 'giftcertificate' }) as GiftCertificateOrderPayment[];\n\n    return {\n        totalDiscountedAmount: reduce(items, (sum, item) => item.amount + sum, 0),\n        appliedGiftCertificates: keyBy(items.map(item => ({\n            code: item.detail.code,\n            discountedAmount: item.amount,\n            remainingBalance: item.detail.remaining,\n            giftCertificate: {\n                balance: item.amount + item.detail.remaining,\n                code: item.detail.code,\n                purchaseDate: '',\n            },\n        })), 'code'),\n    };\n}\n\nfunction mapToInternalOrderPayment(payments?: OrderPayments, payment: InternalOrderPayment = {}): InternalOrderPayment {\n    const item = find(payments, isDefaultOrderPayment) as GatewayOrderPayment;\n\n    if (!item) {\n        return {};\n    }\n\n    return {\n        id: item.providerId,\n        status: mapToInternalPaymentStatus(item.detail.step),\n        helpText: item.detail.instructions,\n        returnUrl: payment.returnUrl,\n    };\n}\n\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\n    return payment.providerId !== 'giftcertificate' && payment.providerId !== 'storecredit';\n}\n\nfunction mapToInternalSocialDataList(order: Order): { [itemId: string]: InternalSocialDataList } | undefined {\n    const socialDataObject: { [itemId: string]: InternalSocialDataList } = {};\n    const items = [\n        ...order.lineItems.physicalItems,\n        ...order.lineItems.digitalItems,\n    ];\n\n    items.forEach(item => {\n        socialDataObject[item.id] = mapToInternalSocialData(item);\n    });\n\n    return socialDataObject;\n}\n\nfunction mapToInternalSocialData(lineItem: LineItem): InternalSocialDataList {\n    const codes = ['fb', 'tw', 'gp'];\n\n    return codes.reduce((socialData, code) => {\n        const item = lineItem.socialMedia && find(lineItem.socialMedia, item => item.code === code);\n\n        if (!item) {\n            return socialData;\n        }\n\n        socialData[code] = {\n            name: lineItem.name,\n            description: lineItem.name,\n            image: lineItem.imageUrl,\n            url: item.link,\n            shareText: item.text,\n            sharingLink: item.link,\n            channelName: item.channel,\n            channelCode: item.code,\n        };\n\n        return socialData;\n    }, {} as InternalSocialDataList);\n}\n","import { mapToInternalAddress, Address, InternalAddress } from '../address';\nimport { Checkout } from '../checkout';\n\nimport InternalQuote from './internal-quote';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalQuote(checkout: Checkout, shippingAddress?: Address): InternalQuote {\n    const consignment = checkout.consignments && checkout.consignments[0];\n\n    return {\n        orderComment: checkout.customerMessage,\n        shippingOption: consignment && consignment.selectedShippingOption ? consignment.selectedShippingOption.id : undefined,\n        billingAddress: checkout.billingAddress ? mapToInternalAddress(checkout.billingAddress) : {} as InternalAddress,\n        shippingAddress: shippingAddress && mapToInternalAddress(shippingAddress, checkout.consignments),\n    };\n}\n","import InternalShippingOption from './internal-shipping-option';\nimport ShippingOption from './shipping-option';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalShippingOption(option: ShippingOption, isSelected: boolean): InternalShippingOption {\n    return {\n        description: option.description,\n        module: option.type,\n        price: option.cost,\n        id: option.id,\n        selected: isSelected,\n        isRecommended: option.isRecommended,\n        imageUrl: option.imageUrl,\n        transitTime: option.transitTime,\n    };\n}\n","import Consignment from './consignment';\nimport { InternalShippingOptionList } from './internal-shipping-option';\nimport mapToInternalShippingOption from './map-to-internal-shipping-option';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalShippingOptions(consignments: Consignment[]): InternalShippingOptionList {\n    return consignments.reduce((result, consignment) => {\n        let shippingOptions;\n\n        if (consignment.availableShippingOptions && consignment.availableShippingOptions.length) {\n            shippingOptions = consignment.availableShippingOptions;\n        } else if (consignment.selectedShippingOption) {\n            shippingOptions = [consignment.selectedShippingOption];\n        }\n\n        return {\n            ...result,\n            [consignment.id]: (shippingOptions || []).map(option => {\n                const selectedOptionId = consignment.selectedShippingOption && consignment.selectedShippingOption.id;\n\n                return mapToInternalShippingOption(\n                    option,\n                    option.id === selectedOptionId\n                );\n            }),\n        };\n    }, {});\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"shallowequal\");","export interface RootCacheKeyMap {\n    maps: ChildCacheKeyMap[];\n}\n\nexport interface IntermediateCacheKeyMap {\n    maps: ChildCacheKeyMap[];\n    parentMap: RootCacheKeyMap | IntermediateCacheKeyMap;\n    usedCount: number;\n    value: any;\n}\n\nexport interface TerminalCacheKeyMap extends IntermediateCacheKeyMap {\n    cacheKey: string;\n}\n\nexport type ChildCacheKeyMap = IntermediateCacheKeyMap | TerminalCacheKeyMap;\n\nexport function isTerminalCacheKeyMap(map: ChildCacheKeyMap): map is TerminalCacheKeyMap {\n    return Object.prototype.hasOwnProperty.call(map, 'cacheKey');\n}\n\nexport function isRootCacheKeyMap(map: RootCacheKeyMap | ChildCacheKeyMap): map is RootCacheKeyMap {\n    return Object.prototype.hasOwnProperty.call(map, 'parentMap');\n}\n","import { noop } from 'lodash';\nimport shallowEqual from 'shallowequal';\n\nimport { isRootCacheKeyMap, isTerminalCacheKeyMap, ChildCacheKeyMap, IntermediateCacheKeyMap, RootCacheKeyMap, TerminalCacheKeyMap } from './cache-key-maps';\n\nexport interface CacheKeyResolverOptions {\n    maxSize?: number;\n    onExpire?(key: string): void;\n    isEqual?(valueA: any, valueB: any): boolean;\n}\n\ninterface ResolveResult {\n    index: number;\n    parentMap: RootCacheKeyMap | IntermediateCacheKeyMap;\n    map?: TerminalCacheKeyMap;\n}\n\nexport default class CacheKeyResolver {\n    private _lastId = 0;\n    private _map: RootCacheKeyMap = { maps: [] };\n    private _usedMaps: TerminalCacheKeyMap[] = [];\n    private _options: Required<CacheKeyResolverOptions>;\n\n    constructor(options?: CacheKeyResolverOptions) {\n        this._options = {\n            maxSize: 0,\n            isEqual: shallowEqual,\n            onExpire: noop,\n            ...options,\n        };\n    }\n\n    getKey(...args: any[]): string {\n        const result = this._resolveMap(...args);\n        const { index, parentMap } = result;\n        let { map } = result;\n\n        if (map && map.cacheKey) {\n            map.usedCount++;\n        } else {\n            map = this._generateMap(parentMap, args.slice(index));\n        }\n\n        // Keep track of the least used map so we can remove it if the size of\n        // the stack exceeds the maximum size.\n        this._removeLeastUsedMap(map);\n\n        return map.cacheKey;\n    }\n\n    getUsedCount(...args: any[]): number {\n        const { map } = this._resolveMap(...args);\n\n        return map ? map.usedCount : 0;\n    }\n\n    private _resolveMap(...args: any[]): ResolveResult {\n        let index = 0;\n        let parentMap = this._map;\n\n        // Traverse the tree to find the linked list of maps that match the\n        // arguments of the call. Each intermediate or terminal map contains a\n        // value that could be used to match with the arguments. The last map in\n        // the list (the terminal) should contain a cache key. If it can does\n        // not exist, we will return a falsy value so that the caller could\n        // handle and generate a new cache key.\n        while (parentMap.maps.length) {\n            let isMatched = false;\n\n            for (let mapIndex = 0; mapIndex < parentMap.maps.length; mapIndex++) {\n                const map = parentMap.maps[mapIndex];\n\n                if (!this._options.isEqual(map.value, args[index])) {\n                    continue;\n                }\n\n                // Move the most recently used map to the top of the stack for\n                // quicker access\n                parentMap.maps.unshift(...parentMap.maps.splice(mapIndex, 1));\n\n                if ((args.length === 0 || index === args.length - 1) && isTerminalCacheKeyMap(map)) {\n                    return { index, map, parentMap };\n                }\n\n                isMatched = true;\n                parentMap = map;\n                index++;\n\n                break;\n            }\n\n            if (!isMatched) {\n                break;\n            }\n        }\n\n        return { index, parentMap };\n    }\n\n    private _generateMap(parent: RootCacheKeyMap | IntermediateCacheKeyMap, args: any[]): TerminalCacheKeyMap {\n        let index = 0;\n        let parentMap = parent;\n        let map: IntermediateCacheKeyMap;\n\n        do {\n            map = {\n                maps: [],\n                parentMap,\n                usedCount: 1,\n                value: args[index],\n            };\n\n            // Continue to build the tree of maps so that it could be resolved\n            // next time when the function is called with the same set of\n            // arguments.\n            parentMap.maps.unshift(map);\n\n            parentMap = map;\n            index++;\n        } while (index < args.length);\n\n        const terminalMap = map as TerminalCacheKeyMap;\n\n        terminalMap.cacheKey = `${++this._lastId}`;\n\n        return terminalMap;\n    }\n\n    private _removeLeastUsedMap(recentlyUsedMap: TerminalCacheKeyMap): void {\n        if (!this._options.maxSize) {\n            return;\n        }\n\n        const index = this._usedMaps.indexOf(recentlyUsedMap);\n\n        this._usedMaps.splice(\n            index === -1 ? 0 : index,\n            index === -1 ? 0 : 1,\n            recentlyUsedMap\n        );\n\n        if (this._usedMaps.length <= this._options.maxSize) {\n            return;\n        }\n\n        const map = this._usedMaps.pop();\n\n        if (!map) {\n            return;\n        }\n\n        this._removeMap(map);\n        this._options.onExpire(map.cacheKey);\n    }\n\n    private _removeMap(map: ChildCacheKeyMap): void {\n        if (!map.parentMap) {\n            return;\n        }\n\n        map.parentMap.maps.splice(map.parentMap.maps.indexOf(map), 1);\n\n        if (isRootCacheKeyMap(map.parentMap)) {\n            return;\n        }\n\n        this._removeMap(map.parentMap);\n    }\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","mapToInternalAddress","address","consignments","addressId","id","isBillingAddressLike","length","firstName","lastName","company","addressLine1","address1","addressLine2","address2","city","province","stateOrProvince","provinceCode","stateOrProvinceCode","postCode","postalCode","country","countryCode","phone","customFields","require","_decimalPlaces","toInteger","amount","Math","round","pow","this","couponTypes","mapToInternalCoupon","coupon","code","discount","displayName","discountType","indexOf","couponType","mapToInternalGiftCertificate","giftCertificate","discountedAmount","used","remainingBalance","remaining","balance","purchaseDate","mapToInternalLineItem","item","type","decimalPlaces","idKey","amountTransformer","imageUrl","extendedListPrice","amountAfterDiscount","extendedSalePrice","discountAmount","integerAmount","integerAmountAfterDiscount","integerDiscount","integerUnitPrice","listPrice","integerUnitPriceAfterDiscount","salePrice","downloadsPageUrl","downloadPageUrl","name","quantity","brand","sku","categoryNames","variantId","productId","attributes","options","map","option","addedByPromotion","mapToInternalLineItems","itemMap","keys","reduce","result","sender","recipient","mapGiftCertificateToInternalLineItem","mapToInternalLineItemType","mapToInternalCart","checkout","promotions","notifications","cart","currency","items","lineItems","coupons","sum","discountNotifications","forEach","promotion","banners","banner","push","placeholders","message","messageHtml","text","totalDiscountedAmount","giftCertificates","certificate","appliedGiftCertificates","keyBy","shipping","shippingCostTotal","amountBeforeDiscount","shippingCostBeforeDiscount","integerAmountBeforeDiscount","required","some","physicalItems","lineItem","isShippingRequired","subtotal","storeCredit","customer","taxSubtotal","taxTotal","taxes","handling","handlingCostTotal","grandTotal","mapToInternalCustomer","billingAddress","addresses","customerId","isGuest","email","fullName","join","customerGroupName","customerGroup","mapToInternalOrder","order","orderMeta","payments","orderId","customerCanBeCreated","payment","mapToInternalOrderPayment","baseAmount","token","orderToken","callbackUrl","filter","providerId","detail","socialData","mapToInternalSocialDataList","status","hasDigitalItems","isDownloadable","isComplete","mapToStoreCredit","orderAmount","orderAmountAsInteger","find","isDefaultOrderPayment","step","helpText","instructions","returnUrl","socialDataObject","digitalItems","socialMedia","description","image","url","link","shareText","sharingLink","channelName","channel","channelCode","mapToInternalQuote","shippingAddress","consignment","orderComment","customerMessage","shippingOption","selectedShippingOption","undefined","mapToInternalShippingOption","isSelected","price","cost","selected","isRecommended","transitTime","mapToInternalShippingOptions","shippingOptions","availableShippingOptions","selectedOptionId","isTerminalCacheKeyMap","_lastId","_map","maps","_usedMaps","_options","maxSize","isEqual","onExpire","noop","getKey","_resolveMap","args","index","parentMap","cacheKey","usedCount","_generateMap","slice","_removeLeastUsedMap","getUsedCount","isMatched","mapIndex","unshift","splice","parent","terminalMap","recentlyUsedMap","pop","_removeMap","isRootCacheKeyMap"],"sourceRoot":""}