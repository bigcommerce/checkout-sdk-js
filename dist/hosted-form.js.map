{"version":3,"file":"hosted-form.js","mappings":"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","sources":["webpack://@bigcommerce/checkout-sdk/webpack/bootstrap","webpack://@bigcommerce/checkout-sdk/webpack/runtime/define property getters","webpack://@bigcommerce/checkout-sdk/webpack/runtime/hasOwnProperty shorthand","webpack://@bigcommerce/checkout-sdk/webpack/runtime/make namespace object","webpack://@bigcommerce/checkout-sdk/external commonjs \"tslib\"","webpack://@bigcommerce/checkout-sdk/./packages/core/src/common/error/errors/standard-error.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/common/utility/set-prototype-of.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/common/error/errors/invalid-argument-error.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/common/url/parse-url.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/common/url/append-www.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/common/utility/bind-decorator.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/common/iframe/is-iframe-event.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/common/iframe/iframe-event-listener.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/hosted-form/iframe-content/hosted-input-storage.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/hosted-form/iframe-content/get-hosted-input-storage.ts","webpack://@bigcommerce/checkout-sdk/external commonjs \"@bigcommerce/bigpay-client\"","webpack://@bigcommerce/checkout-sdk/external commonjs \"rxjs\"","webpack://@bigcommerce/checkout-sdk/external commonjs \"rxjs/operators\"","webpack://@bigcommerce/checkout-sdk/./packages/core/src/common/iframe/iframe-event-poster.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/payment/payment-request-sender.ts","webpack://@bigcommerce/checkout-sdk/external commonjs \"lodash\"","webpack://@bigcommerce/checkout-sdk/./packages/core/src/address/map-to-internal-address.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/billing/is-billing-address-like.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/common/utility/amount-transformer.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/coupon/map-to-internal-coupon.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/generated/checkout-button-method-type.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/coupon/map-to-internal-gift-certificate.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/cart/map-to-internal-line-items.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/cart/map-gift-certificate-to-internal-line-item.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/cart/map-to-internal-line-item.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/cart/map-to-internal-cart.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/promotion/map-to-discount-notifications.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/common/error/errors/missing-data-error.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/customer/map-to-internal-customer.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/hosted-form/iframe-content/card-expiry-formatter.ts","webpack://@bigcommerce/checkout-sdk/external commonjs \"card-validator\"","webpack://@bigcommerce/checkout-sdk/./packages/core/src/hosted-form/iframe-content/card-number-formatter.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/order/map-to-internal-order.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/shipping/map-to-internal-shipping-option.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/payment/payment-request-transformer.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/payment/is-vaulted-instrument.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/hosted-form/hosted-field-type.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/hosted-form/iframe-content/map-to-autocomplete-type.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/hosted-form/iframe-content/hosted-autocomplete-fieldset.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/hosted-form/hosted-field-events.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/hosted-form/iframe-content/hosted-input-events.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/hosted-form/iframe-content/hosted-input.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/hosted-form/iframe-content/hosted-card-expiry-input.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/hosted-form/iframe-content/hosted-card-number-input.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/hosted-form/iframe-content/hosted-input-aggregator.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/hosted-form/errors/invalid-hosted-form-value-error.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/hosted-form/iframe-content/hosted-input-payment-handler.ts","webpack://@bigcommerce/checkout-sdk/external commonjs \"yup\"","webpack://@bigcommerce/checkout-sdk/./packages/core/src/hosted-form/iframe-content/hosted-input-validator.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/hosted-form/iframe-content/hosted-input-factory.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/hosted-form/iframe-content/map-to-accessibility-label.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/hosted-form/errors/invalid-hosted-form-config-error.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/hosted-form/iframe-content/hosted-input-initializer.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/hosted-form/iframe-content/initialize-hosted-input.ts","webpack://@bigcommerce/checkout-sdk/./packages/core/src/hosted-form/iframe-content/notify-initialize-error.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"tslib\");","import { setPrototypeOf } from '../../utility';\n\nimport CustomError from './custom-error';\n\n/**\n * This error type should not be constructed directly. It is a base class for\n * all custom errors thrown in this library.\n */\nexport default abstract class StandardError extends Error implements CustomError {\n    name = 'StandardError';\n    type = 'standard';\n\n    constructor(message?: string) {\n        super(message || 'An unexpected error has occurred.');\n\n        setPrototypeOf(this, new.target.prototype);\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, new.target);\n        } else {\n            this.stack = (new Error(this.message)).stack;\n        }\n    }\n}\n","export default function setPrototypeOf(object: any, prototype: object) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else {\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n","import StandardError from './standard-error';\n\n/**\n * This error should be thrown when a method is unable to proceed because the\n * caller has not provided all the arguments according to their requirements,\n * i.e.: if an argument is missing or it is not the expected data type.\n */\nexport default class InvalidArgumentError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Invalid arguments have been provided.');\n\n        this.name = 'InvalidArgumentError';\n        this.type = 'invalid_argument';\n    }\n}\n","import { InvalidArgumentError } from '../error/errors';\n\nimport Url from './url';\n\nexport default function parseUrl(url: string): Url {\n    if (!/^(https?:)?\\/\\//.test(url)) {\n        throw new InvalidArgumentError('The provided URL must be absolute.');\n    }\n\n    // new URL() is not supported in IE11, use anchor tag instead\n    const anchor = document.createElement('a');\n\n    anchor.href = url;\n\n    // IE11 returns 80 or 443 for the port number depending on the URL scheme,\n    // even if the port number is not specified in the URL.\n    const port = anchor.port && url.indexOf(`${anchor.hostname}:${anchor.port}`) !== -1 ?\n        anchor.port :\n        '';\n\n    return {\n        hash: anchor.hash,\n        hostname: anchor.hostname,\n        href: anchor.href,\n        origin: `${anchor.protocol}//${anchor.hostname}${port ? ':' + port : ''}`,\n        pathname: anchor.pathname,\n        port,\n        protocol: anchor.protocol,\n        search: anchor.search,\n    };\n}\n","import parseUrl from './parse-url';\nimport Url from './url';\n\nexport default function appendWww(url: Url): Url {\n    return parseUrl(\n        url.hostname.indexOf('www') === 0 ?\n            url.href :\n            url.href.replace(url.hostname, `www.${url.hostname}`)\n    );\n}\n","/**\n * Decorates a class or a method by binding all its prototype methods or itself\n * to the calling instance respectively.\n */\nfunction bindDecorator<T extends Method>(target: object, key: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T>;\nfunction bindDecorator<T extends Constructor<object>>(target: T): T;\nfunction bindDecorator(target: any, key?: any, descriptor?: any): any {\n    if (!key || !descriptor) {\n        return bindClassDecorator(target);\n    }\n\n    return bindMethodDecorator(target, key, descriptor);\n}\n\nexport default bindDecorator;\n\n/**\n * Decorates a class by binding all its prototype methods to the calling\n * instance.\n */\nexport function bindClassDecorator<T extends Constructor<object>>(target: T): T {\n    const decoratedTarget = class extends target {};\n\n    Object.getOwnPropertyNames(target.prototype)\n        .forEach(key => {\n            const descriptor = Object.getOwnPropertyDescriptor(target.prototype, key);\n\n            if (!descriptor || key === 'constructor') {\n                return;\n            }\n\n            Object.defineProperty(\n                decoratedTarget.prototype,\n                key,\n                bindMethodDecorator(target.prototype, key, descriptor)\n            );\n        });\n\n    return decoratedTarget;\n}\n\n/**\n * Decorates a method by binding it to the calling instance.\n */\nexport function bindMethodDecorator<T extends Method>(_: object, key: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T> {\n    if (typeof descriptor.value !== 'function') {\n        return descriptor;\n    }\n\n    let method: T = descriptor.value;\n\n    return {\n        get() {\n            const boundMethod = method.bind(this) as T;\n\n            Object.defineProperty(this, key, {\n                ...descriptor,\n                value: boundMethod,\n            });\n\n            return boundMethod;\n        },\n        set(value) {\n            method = value;\n        },\n    };\n}\n\nexport type Constructor<T> = new (...args: any[]) => T;\nexport type Method = (...args: any[]) => any;\n","import IframeEvent from './iframe-event';\n\nexport default function isIframeEvent<TEvent extends IframeEvent<TType>, TType extends string>(\n    object: any,\n    type: TType\n): object is TEvent {\n    return object.type === type;\n}\n","import { appendWww, parseUrl } from '../url';\nimport { bindDecorator as bind } from '../utility';\n\nimport { IframeEventMap } from './iframe-event';\nimport isIframeEvent from './is-iframe-event';\n\nexport default class IframeEventListener<TEventMap extends IframeEventMap<keyof TEventMap>> {\n    private _isListening: boolean;\n    private _listeners: EventListeners<TEventMap>;\n    private _sourceOrigins: string[];\n\n    constructor(\n        sourceOrigin: string\n    ) {\n        this._sourceOrigins = [\n            parseUrl(sourceOrigin).origin,\n            appendWww(parseUrl(sourceOrigin)).origin,\n        ];\n        this._isListening = false;\n        this._listeners = {};\n    }\n\n    listen(): void {\n        if (this._isListening) {\n            return;\n        }\n\n        this._isListening = true;\n\n        window.addEventListener('message', this._handleMessage);\n    }\n\n    stopListen(): void {\n        if (!this._isListening) {\n            return;\n        }\n\n        this._isListening = false;\n\n        window.removeEventListener('message', this._handleMessage);\n    }\n\n    addListener<TType extends keyof TEventMap>(type: TType, listener: (event: TEventMap[TType]) => void): void {\n        let listeners = this._listeners[type];\n\n        if (!listeners) {\n            this._listeners[type] = listeners = [];\n        }\n\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    }\n\n    removeListener<TType extends keyof TEventMap>(type: TType, listener: (event: TEventMap[TType]) => void): void {\n        const listeners = this._listeners[type];\n\n        if (!listeners) {\n            return;\n        }\n\n        const index = listeners.indexOf(listener);\n\n        if (index >= 0) {\n            listeners.splice(index, 1);\n        }\n    }\n\n    trigger<TType extends keyof TEventMap>(event: TEventMap[TType]): void {\n        const listeners = this._listeners[event.type];\n\n        if (!listeners) {\n            return;\n        }\n\n        listeners.forEach(listener => listener(event));\n    }\n\n    @bind\n    private _handleMessage(event: MessageEvent): void {\n        if ((this._sourceOrigins.indexOf(event.origin) === -1) ||\n            !isIframeEvent(event.data as TEventMap[keyof TEventMap], event.data.type)\n        ) {\n            return;\n        }\n\n        this.trigger(event.data);\n    }\n}\n\ntype EventListeners<TEventMap> = {\n    [key in keyof TEventMap]?: Array<(event: TEventMap[key]) => void>;\n};\n","export default class HostedInputStorage {\n    private _nonce?: string;\n\n    setNonce(nonce: string): void {\n        this._nonce = nonce;\n    }\n\n    getNonce(): string | undefined {\n        return this._nonce;\n    }\n}\n","import HostedInputStorage from './hosted-input-storage';\n\nlet storage: HostedInputStorage | null;\n\nexport default function getHostedInputStorage(): HostedInputStorage {\n    storage = storage || new HostedInputStorage();\n\n    return storage;\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@bigcommerce/bigpay-client\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"rxjs\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"rxjs/operators\");","import { fromEvent } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\n\nimport { parseUrl } from '../url';\n\nimport IframeEvent from './iframe-event';\nimport isIframeEvent from './is-iframe-event';\n\nexport interface IframeEventPostOptions<TSuccessEvent extends IframeEvent, TErrorEvent extends IframeEvent> {\n    errorType?: TErrorEvent['type'];\n    successType?: TSuccessEvent['type'];\n}\n\nexport default class IframeEventPoster<TEvent> {\n    private _targetOrigin: string;\n\n    constructor(\n        targetOrigin: string,\n        private _targetWindow?: Window\n    ) {\n        this._targetOrigin = targetOrigin === '*' ? '*' : parseUrl(targetOrigin).origin;\n    }\n\n    post(event: TEvent): void;\n    post<TSuccessEvent extends IframeEvent = IframeEvent, TErrorEvent extends IframeEvent = IframeEvent>(\n        event: TEvent,\n        options: IframeEventPostOptions<TSuccessEvent, TErrorEvent>\n    ): Promise<TSuccessEvent>;\n    post<TSuccessEvent extends IframeEvent = IframeEvent, TErrorEvent extends IframeEvent = IframeEvent>(\n        event: TEvent,\n        options?: IframeEventPostOptions<TSuccessEvent, TErrorEvent>\n    ): Promise<TSuccessEvent> | void {\n        const targetWindow = this._targetWindow;\n\n        if (window === targetWindow) {\n            return;\n        }\n\n        if (!targetWindow) {\n            throw new Error('Unable to post message because target window is not set.');\n        }\n\n        const result = options && fromEvent<MessageEvent>(window, 'message')\n            .pipe(\n                filter(event =>\n                    event.origin === this._targetOrigin &&\n                    isIframeEvent(event.data, event.data.type) &&\n                    [options.successType, options.errorType].indexOf(event.data.type) !== -1\n                ),\n                map(event => {\n                    if (options.errorType === event.data.type) {\n                        throw event.data;\n                    }\n\n                    return event.data;\n                }),\n                take(1)\n            )\n            .toPromise();\n\n        targetWindow.postMessage(event, this._targetOrigin);\n\n        return result;\n    }\n\n    setTarget(window: Window) {\n        this._targetWindow = window;\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport PaymentRequestBody from './payment-request-body';\n\n/**\n * @todo Convert this file into TypeScript properly\n */\nexport default class PaymentRequestSender {\n    /**\n     * @constructor\n     * @param {BigpayClient} client\n     */\n    constructor(\n        private _client: any\n    ) {}\n\n    submitPayment(payload: PaymentRequestBody): Promise<Response<any>> {\n        return new Promise((resolve, reject) => {\n            this._client.submitPayment(payload, (error: any, response: any) => {\n                if (error) {\n                    reject(this._transformResponse(error));\n                } else {\n                    resolve(this._transformResponse(response));\n                }\n            });\n        });\n    }\n\n    initializeOffsitePayment(payload: PaymentRequestBody, target?: string): Promise<void> {\n        return new Promise(() => {\n            this._client.initializeOffsitePayment(payload, null, target);\n        });\n    }\n\n    private _transformResponse(response: any): Response<any> {\n        return {\n            headers: response.headers,\n            body: response.data,\n            status: response.status,\n            statusText: response.statusText,\n        };\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"lodash\");","import { isBillingAddressLike, BillingAddress } from '../billing';\nimport { Consignment } from '../shipping';\n\nimport Address from './address';\nimport InternalAddress from './internal-address';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalAddress(\n    address: Address | BillingAddress,\n    consignments?: Consignment[]\n): InternalAddress<any> {\n    let addressId;\n\n    if (isBillingAddressLike(address)) {\n        addressId = address.id;\n    } else if (consignments && consignments.length) {\n        addressId = consignments[0].id;\n    }\n\n    return {\n        id: addressId,\n        firstName: address.firstName,\n        lastName: address.lastName,\n        company: address.company,\n        addressLine1: address.address1,\n        addressLine2: address.address2,\n        city: address.city,\n        province: address.stateOrProvince,\n        provinceCode: address.stateOrProvinceCode,\n        postCode: address.postalCode,\n        country: address.country,\n        countryCode: address.countryCode,\n        phone: address.phone,\n        customFields: address.customFields,\n    };\n}\n","import { Address } from '../address';\n\nimport BillingAddress from './billing-address';\n\nexport default function isBillingAddressLike(address: Address): address is BillingAddress {\n    const billingAddress = address as BillingAddress;\n\n    return typeof billingAddress.id !== 'undefined';\n}\n","export default class AmountTransformer {\n    constructor(private _decimalPlaces: number) {}\n\n    toInteger(amount: number): number {\n        return Math.round(amount * Math.pow(10, this._decimalPlaces));\n    }\n}\n","import Coupon from './coupon';\nimport InternalCoupon from './internal-coupon';\n\nconst couponTypes = [\n    'per_item_discount',\n    'percentage_discount',\n    'per_total_discount',\n    'shipping_discount',\n    'free_shipping',\n];\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalCoupon(coupon: Coupon): InternalCoupon {\n    return {\n        code: coupon.code,\n        discount: coupon.displayName,\n        discountType: couponTypes.indexOf(coupon.couponType),\n    };\n}\n","enum CheckoutButtonMethodType {\n    APPLEPAY = \"applepay\",\n    AMAZON_PAY_V2 = \"amazonpay\",\n    BRAINTREE_PAYPAL = \"braintreepaypal\",\n    BRAINTREE_VENMO = \"braintreevenmo\",\n    BRAINTREE_PAYPAL_CREDIT = \"braintreepaypalcredit\",\n    GOOGLEPAY_ADYENV2 = \"googlepayadyenv2\",\n    GOOGLEPAY_ADYENV3 = \"googlepayadyenv3\",\n    GOOGLEPAY_AUTHORIZENET = \"googlepayauthorizenet\",\n    GOOGLEPAY_BNZ = \"googlepaybnz\",\n    GOOGLEPAY_BRAINTREE = \"googlepaybraintree\",\n    GOOGLEPAY_CHECKOUTCOM = \"googlepaycheckoutcom\",\n    GOOGLEPAY_CYBERSOURCEV2 = \"googlepaycybersourcev2\",\n    GOOGLEPAY_ORBITAL = \"googlepayorbital\",\n    GOOGLEPAY_STRIPE = \"googlepaystripe\",\n    GOOGLEPAY_STRIPEUPE = \"googlepaystripeupe\",\n    MASTERPASS = \"masterpass\",\n    PAYPALEXPRESS = \"paypalexpress\",\n    PAYPALCOMMERCE = \"paypalcommerce\",\n    PAYPALCOMMERCE_CREDIT = \"paypalcommercecredit\",\n    PAYPALCOMMERCE_APMS = \"paypalcommercealternativemethods\",\n    PAYPALCOMMERCE_INLINE = \"paypalcommerceinline\",\n    PAYPALCOMMERCE_VENMO = \"paypalcommercevenmo\"\n}\nexport default CheckoutButtonMethodType;\n\n","import GiftCertificate from './gift-certificate';\nimport InternalGiftCertificate from './internal-gift-certificate';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalGiftCertificate(giftCertificate: GiftCertificate): InternalGiftCertificate {\n    return {\n        code: giftCertificate.code,\n        discountedAmount: giftCertificate.used,\n        remainingBalance: giftCertificate.remaining,\n        giftCertificate: {\n            balance: giftCertificate.balance,\n            code: giftCertificate.code,\n            purchaseDate: giftCertificate.purchaseDate,\n        },\n    };\n}\n","import InternalLineItem from './internal-line-item';\nimport { LineItem } from './line-item';\nimport LineItemMap from './line-item-map';\nimport mapGiftCertificateToInternalLineItem from './map-gift-certificate-to-internal-line-item';\nimport mapToInternalLineItem from './map-to-internal-line-item';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalLineItems(\n    itemMap: LineItemMap,\n    decimalPlaces: number,\n    idKey: keyof LineItem = 'id'\n): InternalLineItem[] {\n    return (Object.keys(itemMap) as Array<keyof LineItemMap>)\n        .reduce((result, key) => [\n            ...result,\n            ...(itemMap[key] as LineItem[]).map((item: any) => {\n                if (key === 'giftCertificates') {\n                    return mapGiftCertificateToInternalLineItem(item, decimalPlaces);\n                }\n\n                return mapToInternalLineItem(\n                    item,\n                    mapToInternalLineItemType(key),\n                    decimalPlaces,\n                    idKey\n                );\n            }),\n        ], [] as InternalLineItem[]);\n}\n\nfunction mapToInternalLineItemType(type: string): string {\n    switch (type) {\n        case 'physicalItems':\n            return 'ItemPhysicalEntity';\n\n        case 'digitalItems':\n            return 'ItemDigitalEntity';\n\n        case 'giftCertificates':\n            return 'ItemGiftCertificateEntity';\n\n        default:\n            return '';\n    }\n}\n","import { AmountTransformer } from '../common/utility';\n\nimport InternalLineItem from './internal-line-item';\nimport { GiftCertificateItem } from './line-item';\n\nexport default function mapGiftCertificateToInternalLineItem(\n    item: GiftCertificateItem,\n    decimalPlaces: number\n): InternalLineItem {\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: item.id,\n        imageUrl: '',\n        name: item.name,\n        amount: item.amount,\n        amountAfterDiscount: item.amount,\n        discount: 0,\n        integerAmount: amountTransformer.toInteger(item.amount),\n        integerAmountAfterDiscount: amountTransformer.toInteger(item.amount),\n        integerUnitPrice: amountTransformer.toInteger(item.amount),\n        integerUnitPriceAfterDiscount: amountTransformer.toInteger(item.amount),\n        integerDiscount: 0,\n        quantity: 1,\n        sender: item.sender,\n        recipient: item.recipient,\n        type: 'ItemGiftCertificateEntity',\n        attributes: [],\n        variantId: null,\n    };\n}\n","import { AmountTransformer } from '../common/utility';\n\nimport InternalLineItem from './internal-line-item';\nimport { DigitalItem, LineItem } from './line-item';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalLineItem(\n    item: LineItem,\n    type: string,\n    decimalPlaces: number,\n    idKey: keyof LineItem = 'id'\n): InternalLineItem {\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: (item[idKey] as string | number),\n        imageUrl: item.imageUrl,\n        amount: item.extendedListPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        discount: item.discountAmount,\n        integerAmount: amountTransformer.toInteger(item.extendedListPrice),\n        integerAmountAfterDiscount: amountTransformer.toInteger(item.extendedSalePrice),\n        integerDiscount: amountTransformer.toInteger(item.discountAmount),\n        integerUnitPrice: amountTransformer.toInteger(item.listPrice),\n        integerUnitPriceAfterDiscount: amountTransformer.toInteger(item.salePrice),\n        downloadsPageUrl: (item as DigitalItem).downloadPageUrl,\n        name: item.name,\n        quantity: item.quantity,\n        brand: item.brand,\n        sku: item.sku,\n        categoryNames: item.categoryNames,\n        variantId: item.variantId,\n        productId: item.productId,\n        attributes: (item.options || []).map(option => ({\n            name: option.name,\n            value: option.value,\n        })),\n        addedByPromotion: item.addedByPromotion,\n        type,\n    };\n}\n","import { keyBy, reduce, some } from 'lodash';\n\nimport { Checkout } from '../checkout';\nimport { AmountTransformer } from '../common/utility';\nimport { mapToInternalCoupon, mapToInternalGiftCertificate } from '../coupon';\nimport { mapToDiscountNotifications } from '../promotion';\n\nimport InternalCart from './internal-cart';\nimport mapToInternalLineItems from './map-to-internal-line-items';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalCart(checkout: Checkout): InternalCart {\n    const decimalPlaces = checkout.cart.currency.decimalPlaces;\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: checkout.cart.id,\n        items: mapToInternalLineItems(checkout.cart.lineItems, decimalPlaces),\n        currency: checkout.cart.currency.code,\n        coupon: {\n            discountedAmount: reduce(checkout.cart.coupons, (sum, coupon) => {\n                return sum + coupon.discountedAmount;\n            }, 0),\n            coupons: checkout.cart.coupons.map(mapToInternalCoupon),\n        },\n        discount: {\n            amount: checkout.cart.discountAmount,\n            integerAmount: amountTransformer.toInteger(checkout.cart.discountAmount),\n        },\n        discountNotifications: mapToDiscountNotifications(checkout.promotions),\n        giftCertificate: {\n            totalDiscountedAmount: reduce(checkout.giftCertificates, (sum, certificate) => {\n                return sum + certificate.used;\n            }, 0),\n            appliedGiftCertificates: keyBy(checkout.giftCertificates.map(mapToInternalGiftCertificate), 'code'),\n        },\n        shipping: {\n            amount: checkout.shippingCostTotal,\n            integerAmount: amountTransformer.toInteger(checkout.shippingCostTotal),\n            amountBeforeDiscount: checkout.shippingCostBeforeDiscount,\n            integerAmountBeforeDiscount: amountTransformer.toInteger(checkout.shippingCostBeforeDiscount),\n            required: some(checkout.cart.lineItems.physicalItems, lineItem => lineItem.isShippingRequired),\n        },\n        subtotal: {\n            amount: checkout.subtotal,\n            integerAmount: amountTransformer.toInteger(checkout.subtotal),\n        },\n        storeCredit: {\n            amount: checkout.customer ? checkout.customer.storeCredit : 0,\n        },\n        taxSubtotal: {\n            amount: checkout.taxTotal,\n            integerAmount: amountTransformer.toInteger(checkout.taxTotal),\n        },\n        taxes: checkout.taxes,\n        taxTotal: {\n            amount: checkout.taxTotal,\n            integerAmount: amountTransformer.toInteger(checkout.taxTotal),\n        },\n        handling: {\n            amount: checkout.handlingCostTotal,\n            integerAmount: amountTransformer.toInteger(checkout.handlingCostTotal),\n        },\n        grandTotal: {\n            amount: checkout.grandTotal,\n            integerAmount: amountTransformer.toInteger(checkout.grandTotal),\n        },\n    };\n}\n","import { DiscountNotification } from '../discount';\n\nimport { Promotion } from '.';\n\nexport default function mapToDiscountNotifications(promotions?: Promotion[]): DiscountNotification[] {\n    const notifications: DiscountNotification[] = [];\n\n    (promotions || []).forEach(promotion => {\n        (promotion.banners || []).forEach(banner => {\n            notifications.push({\n                placeholders: [],\n                discountType: null,\n                message: '',\n                messageHtml: banner.text,\n            });\n        });\n    });\n\n    return notifications;\n}\n","import StandardError from './standard-error';\n\nexport enum MissingDataErrorType {\n    MissingBillingAddress,\n    MissingCart,\n    MissingCheckout,\n    MissingConsignments,\n    MissingCustomer,\n    MissingCheckoutConfig,\n    MissingOrder,\n    MissingOrderConfig,\n    MissingOrderId,\n    MissingPayment,\n    MissingPaymentId,\n    MissingPaymentInstrument,\n    MissingPaymentMethod,\n    MissingPaymentRedirectUrl,\n    MissingPaymentStatus,\n    MissingPaymentToken,\n    MissingShippingAddress,\n}\n\n/**\n * Throw this error when data that is expected to exist is missing. Usually it\n * is due to the fact that certain data has not been retrieved from or saved to\n * the server yet. And such data is required to perform certain actions.\n */\nexport default class MissingDataError extends StandardError {\n    constructor(\n        public subtype: MissingDataErrorType\n    ) {\n        super(getErrorMessage(subtype));\n\n        this.name = 'MissingDataError';\n        this.type = 'missing_data';\n    }\n}\n\nfunction getErrorMessage(type: MissingDataErrorType): string {\n    switch (type) {\n    case MissingDataErrorType.MissingBillingAddress:\n        return 'Unable to proceed because billing address data is unavailable.';\n\n    case MissingDataErrorType.MissingCart:\n        return 'Unable to proceed because cart data is unavailable.';\n\n    case MissingDataErrorType.MissingConsignments:\n        return 'Unable to proceed because consignments data is unavailable.';\n\n    case MissingDataErrorType.MissingCheckout:\n        return 'Unable to proceed because checkout data is unavailable.';\n\n    case MissingDataErrorType.MissingCustomer:\n        return 'Unable to proceed because customer data is unavailable.';\n\n    case MissingDataErrorType.MissingCheckoutConfig:\n    case MissingDataErrorType.MissingOrderConfig:\n        return 'Unable to proceed because configuration data is unavailable.';\n\n    case MissingDataErrorType.MissingOrder:\n        return 'Unable to proceed because order data is unavailable.';\n\n    case MissingDataErrorType.MissingOrderId:\n        return 'Unable to proceed because order ID is unavailable or not generated yet.';\n\n    case MissingDataErrorType.MissingPayment:\n        return 'Unable to proceed because payment data is unavailable.';\n\n    case MissingDataErrorType.MissingPaymentToken:\n        return 'Unable to proceed because the token required to submit a payment is missing.';\n\n    case MissingDataErrorType.MissingPaymentMethod:\n        return 'Unable to proceed because payment method data is unavailable or not properly configured.';\n\n    case MissingDataErrorType.MissingShippingAddress:\n        return 'Unable to proceed because shipping address data is unavailable.';\n\n    default:\n        return 'Unable to proceed because the required data is unavailable.';\n    }\n}\n","import { mapToInternalAddress } from '../address';\nimport { BillingAddress } from '../billing';\n\nimport { Customer } from '.';\nimport InternalCustomer from './internal-customer';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalCustomer(customer: Customer, billingAddress: BillingAddress): InternalCustomer {\n    const firstName = customer.firstName || billingAddress.firstName || '';\n    const lastName = customer.lastName || billingAddress.lastName || '';\n\n    return {\n        addresses: (customer.addresses || []).map(address => mapToInternalAddress(address)),\n        customerId: customer.id,\n        isGuest: customer.isGuest,\n        storeCredit: customer.storeCredit,\n        email: customer.email || billingAddress.email || '',\n        firstName,\n        lastName,\n        name: customer.fullName || [firstName, lastName].join(' '),\n        customerGroupName: customer.customerGroup && customer.customerGroup.name,\n    };\n}\n","import CardExpiryDate from './card-expiry-date';\n\nconst NUMBER_SEPARATOR = '/';\n\nexport default class CardExpiryFormatter {\n    format(value: string): string {\n        const [month = '', year = ''] = value.split(new RegExp(`\\\\s*${NUMBER_SEPARATOR}\\\\s*`));\n        const trimmedMonth = month.slice(0, 2);\n        const trimmedYear = year.length === 4 ? year.slice(-2) : (year ? year.slice(0, 2) : month.slice(2));\n\n        // i.e.: '1'\n        if (value.length < 2) {\n            return month;\n        }\n\n        // ie.: '10 /' (without trailing space)\n        if (value.length > 3 && !trimmedYear) {\n            return trimmedMonth;\n        }\n\n        return `${trimmedMonth} ${NUMBER_SEPARATOR} ${trimmedYear}`;\n    }\n\n    toObject(value: string): CardExpiryDate {\n        const [month = '', year = ''] = value.split(new RegExp(`\\\\s*${NUMBER_SEPARATOR}\\\\s*`));\n\n        if (!/^\\d+$/.test(month) || !/^\\d+$/.test(year)) {\n            return { month: '', year: '' };\n        }\n\n        return {\n            month: month.length === 1 ? `0${month}` : month.slice(0, 2),\n            year: year.length === 2 ? `20${year}` : year.slice(0, 4),\n        };\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"card-validator\");","import { creditCardType, number } from 'card-validator';\nimport { max } from 'lodash';\n\nconst NUMBER_SEPARATOR = ' ';\n\nexport default class CardNumberFormatter {\n    format(value: string): string {\n        const { card } = number(value);\n\n        if (!card) {\n            return value;\n        }\n\n        const maxLength = max(creditCardType(value).map(info => max(info.lengths)));\n        const unformattedValue = this.unformat(value).slice(0, maxLength);\n\n        return card.gaps\n            .filter(gapIndex => unformattedValue.length > gapIndex)\n            .reduce((output, gapIndex, index) => (\n                [\n                    output.slice(0, gapIndex + index),\n                    output.slice(gapIndex + index),\n                ].join(NUMBER_SEPARATOR)\n            ), unformattedValue);\n    }\n\n    unformat(value: string): string {\n        const { card } = number(value);\n\n        if (!card) {\n            return value;\n        }\n\n        return value.replace(new RegExp(NUMBER_SEPARATOR, 'g'), '');\n    }\n}\n","import { filter, find, keyBy, reduce } from 'lodash';\n\nimport { mapToInternalLineItems, LineItem } from '../cart';\nimport { Checkout } from '../checkout';\nimport { AmountTransformer } from '../common/utility';\nimport { mapToInternalCoupon } from '../coupon';\nimport { HOSTED } from '../payment';\n\nimport InternalOrder, { InternalGiftCertificateList, InternalIncompleteOrder, InternalOrderPayment, InternalSocialDataList } from './internal-order';\nimport Order, { GatewayOrderPayment, GiftCertificateOrderPayment, OrderPayment, OrderPayments } from './order';\nimport { OrderMetaState } from './order-state';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalOrder(order: Order, orderMeta: OrderMetaState = {}): InternalOrder {\n    const decimalPlaces = order.currency.decimalPlaces;\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: order.orderId,\n        items: mapToInternalLineItems(order.lineItems, order.currency.decimalPlaces, 'productId'),\n        orderId: order.orderId,\n        currency: order.currency.code,\n        customerCanBeCreated: order.customerCanBeCreated,\n        payment: mapToInternalOrderPayment(order.payments, orderMeta.payment),\n        subtotal: {\n            amount: order.baseAmount,\n            integerAmount: amountTransformer.toInteger(order.baseAmount),\n        },\n        coupon: {\n            discountedAmount: reduce(order.coupons, (sum, coupon) => {\n                return sum + coupon.discountedAmount;\n            }, 0),\n            coupons: order.coupons.map(mapToInternalCoupon),\n        },\n        discount: {\n            amount: order.discountAmount,\n            integerAmount: amountTransformer.toInteger(order.discountAmount),\n        },\n        token: orderMeta.orderToken,\n        callbackUrl: orderMeta.callbackUrl,\n        discountNotifications: [],\n        giftCertificate: mapToGiftCertificates(order.payments),\n        socialData: mapToInternalSocialDataList(order),\n        status: order.status,\n        hasDigitalItems: order.hasDigitalItems,\n        isDownloadable: order.isDownloadable,\n        isComplete: order.isComplete,\n        shipping: {\n            amount: order.shippingCostTotal,\n            integerAmount: amountTransformer.toInteger(order.shippingCostTotal),\n            amountBeforeDiscount: order.shippingCostBeforeDiscount,\n            integerAmountBeforeDiscount: amountTransformer.toInteger(order.shippingCostBeforeDiscount),\n        },\n        storeCredit: {\n            amount: mapToStoreCredit(order.payments),\n        },\n        taxes: order.taxes,\n        taxTotal: {\n            amount: order.taxTotal,\n            integerAmount: amountTransformer.toInteger(order.taxTotal),\n        },\n        handling: {\n            amount: order.handlingCostTotal,\n            integerAmount: amountTransformer.toInteger(order.handlingCostTotal),\n        },\n        grandTotal: {\n            amount: order.orderAmount,\n            integerAmount: order.orderAmountAsInteger,\n        },\n    };\n}\n\nexport function mapToInternalIncompleteOrder(checkout: Checkout): InternalIncompleteOrder {\n    const payment = find(checkout.payments, { providerType: HOSTED });\n\n    return {\n        orderId: null,\n        isComplete: false,\n        payment: !payment ? {} : {\n            id: payment.providerId,\n            gateway: payment.gatewayId,\n            status: mapToInternalPaymentStatus(payment.detail.step),\n        },\n    };\n}\n\nfunction mapToInternalPaymentStatus(status: string): string {\n    return `PAYMENT_STATUS_${status}`;\n}\n\nfunction mapToStoreCredit(payments?: OrderPayments): number {\n    const item = find(payments, { providerId: 'storecredit' });\n\n    return item ? item.amount : 0;\n}\n\nfunction mapToGiftCertificates(payments?: OrderPayments): InternalGiftCertificateList {\n    const items = filter(payments, { providerId: 'giftcertificate' }) as GiftCertificateOrderPayment[];\n\n    return {\n        totalDiscountedAmount: reduce(items, (sum, item) => item.amount + sum, 0),\n        appliedGiftCertificates: keyBy(items.map(item => ({\n            code: item.detail.code,\n            discountedAmount: item.amount,\n            remainingBalance: item.detail.remaining,\n            giftCertificate: {\n                balance: item.amount + item.detail.remaining,\n                code: item.detail.code,\n                purchaseDate: '',\n            },\n        })), 'code'),\n    };\n}\n\nfunction mapToInternalOrderPayment(payments?: OrderPayments, payment: InternalOrderPayment = {}): InternalOrderPayment {\n    const item = find(payments, isDefaultOrderPayment) as GatewayOrderPayment;\n\n    if (!item) {\n        return {};\n    }\n\n    return {\n        id: item.providerId,\n        status: mapToInternalPaymentStatus(item.detail.step),\n        helpText: item.detail.instructions,\n        returnUrl: payment.returnUrl,\n    };\n}\n\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\n    return payment.providerId !== 'giftcertificate' && payment.providerId !== 'storecredit';\n}\n\nfunction mapToInternalSocialDataList(order: Order): { [itemId: string]: InternalSocialDataList } | undefined {\n    const socialDataObject: { [itemId: string]: InternalSocialDataList } = {};\n    const items = [\n        ...order.lineItems.physicalItems,\n        ...order.lineItems.digitalItems,\n    ];\n\n    items.forEach(item => {\n        socialDataObject[item.id] = mapToInternalSocialData(item);\n    });\n\n    return socialDataObject;\n}\n\nfunction mapToInternalSocialData(lineItem: LineItem): InternalSocialDataList {\n    const codes = ['fb', 'tw', 'gp'];\n\n    return codes.reduce((socialData, code) => {\n        const item = lineItem.socialMedia && find(lineItem.socialMedia, item => item.code === code);\n\n        if (!item) {\n            return socialData;\n        }\n\n        socialData[code] = {\n            name: lineItem.name,\n            description: lineItem.name,\n            image: lineItem.imageUrl,\n            url: item.link,\n            shareText: item.text,\n            sharingLink: item.link,\n            channelName: item.channel,\n            channelCode: item.code,\n        };\n\n        return socialData;\n    }, {} as InternalSocialDataList);\n}\n","import InternalShippingOption from './internal-shipping-option';\nimport ShippingOption from './shipping-option';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalShippingOption(option: ShippingOption, isSelected: boolean): InternalShippingOption {\n    return {\n        description: option.description,\n        module: option.type,\n        price: option.cost,\n        id: option.id,\n        selected: isSelected,\n        isRecommended: option.isRecommended,\n        imageUrl: option.imageUrl,\n        transitTime: option.transitTime,\n    };\n}\n","import { pick } from 'lodash';\n\nimport { mapToInternalAddress, Address } from '../address';\nimport { mapToInternalCart } from '../cart';\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { CheckoutButtonMethodType } from '../checkout-buttons/strategies';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { mapToInternalCustomer } from '../customer';\nimport { HostedFormOrderData } from '../hosted-form';\nimport { CardExpiryFormatter, CardNumberFormatter, HostedInputValues } from '../hosted-form/iframe-content';\nimport { mapToInternalOrder } from '../order';\nimport { mapToInternalShippingOption } from '../shipping';\n\nimport isVaultedInstrument, { isFormattedVaultedInstrument } from './is-vaulted-instrument';\nimport Payment, { HostedCreditCardInstrument, HostedVaultedInstrument, PaymentInstrument } from './payment';\nimport PaymentMethod from './payment-method';\nimport PaymentRequestBody from './payment-request-body';\n\nexport default class PaymentRequestTransformer {\n    private _cardExpiryFormatter = new CardExpiryFormatter();\n    private _cardNumberFormatter = new CardNumberFormatter();\n\n    transform(payment: Payment, checkoutState: InternalCheckoutSelectors): PaymentRequestBody {\n        const billingAddress = checkoutState.billingAddress.getBillingAddress();\n        const checkout = checkoutState.checkout.getCheckout();\n        const customer = checkoutState.customer.getCustomer();\n        const order = checkoutState.order.getOrder();\n        const paymentMethod = checkoutState.paymentMethods.getPaymentMethod(payment.methodId, payment.gatewayId);\n        const shippingAddress = this._mapShippingAddress(checkoutState, paymentMethod);\n        const consignments = checkoutState.consignments.getConsignments();\n        const shippingOption = checkoutState.consignments.getShippingOption();\n        const storeConfig = checkoutState.config.getStoreConfig();\n        const contextConfig = checkoutState.config.getContextConfig();\n        const instrumentMeta = checkoutState.instruments.getInstrumentsMeta();\n        const paymentMeta = checkoutState.paymentMethods.getPaymentMethodsMeta();\n        const orderMeta = checkoutState.order.getOrderMeta();\n        const internalCustomer = customer && billingAddress && mapToInternalCustomer(customer, billingAddress);\n\n        const authToken = instrumentMeta && payment.paymentData &&\n            (isVaultedInstrument(payment.paymentData) || isFormattedVaultedInstrument(payment.paymentData)) ?\n            `${checkoutState.payment.getPaymentToken()}, ${instrumentMeta.vaultAccessToken}` :\n            checkoutState.payment.getPaymentToken();\n\n        if (!authToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentToken);\n        }\n\n        return {\n            additionalAction: payment.additionalAction,\n            authToken,\n            customer: internalCustomer,\n            billingAddress: billingAddress && mapToInternalAddress(billingAddress),\n            shippingAddress: shippingAddress && mapToInternalAddress(shippingAddress, consignments),\n            shippingOption: shippingOption && mapToInternalShippingOption(shippingOption, true),\n            cart: checkout && mapToInternalCart(checkout),\n            order: order && mapToInternalOrder(order, orderMeta),\n            orderMeta,\n            payment: payment.paymentData,\n            paymentMethod: paymentMethod && this._transformPaymentMethod(paymentMethod),\n            quoteMeta: {\n                request: {\n                    ...paymentMeta,\n                    geoCountryCode: contextConfig && contextConfig.geoCountryCode,\n                },\n            },\n            source: 'bigcommerce-checkout-js-sdk',\n            store: pick(storeConfig && storeConfig.storeProfile, [\n                'storeHash',\n                'storeId',\n                'storeLanguage',\n                'storeName',\n            ]),\n        };\n    }\n\n    transformWithHostedFormData(values: HostedInputValues, data: HostedFormOrderData, nonce: string): PaymentRequestBody {\n        const { additionalAction, authToken, checkout, config, order, orderMeta, payment = {}, paymentMethod, paymentMethodMeta } = data;\n        const consignment = checkout && checkout.consignments[0];\n        const shippingAddress = consignment && consignment.shippingAddress;\n        const shippingOption = consignment && consignment.selectedShippingOption;\n\n        return {\n            additionalAction,\n            authToken,\n            paymentMethod: paymentMethod && this._transformPaymentMethod(paymentMethod),\n            customer: order && order.billingAddress && checkout && mapToInternalCustomer(checkout.customer, order.billingAddress),\n            billingAddress: order && order.billingAddress && mapToInternalAddress(order.billingAddress),\n            shippingAddress: shippingAddress && checkout && mapToInternalAddress(shippingAddress, checkout.consignments),\n            shippingOption: shippingOption && mapToInternalShippingOption(shippingOption, true),\n            cart: checkout && mapToInternalCart(checkout),\n            order: order && mapToInternalOrder(order, orderMeta),\n            orderMeta,\n            payment: this._transformHostedInputValues(values, payment, nonce),\n            quoteMeta: {\n                request: {\n                    ...paymentMethodMeta,\n                    geoCountryCode: config && config.context.geoCountryCode,\n                },\n            },\n            source: 'bigcommerce-checkout-js-sdk',\n            store: config && pick(config.storeConfig.storeProfile, [\n                'storeHash',\n                'storeId',\n                'storeLanguage',\n                'storeName',\n            ]),\n        };\n    }\n\n    private _transformPaymentMethod(paymentMethod: PaymentMethod): PaymentMethod {\n        if (paymentMethod.method === 'multi-option' && !paymentMethod.gateway) {\n            return { ...paymentMethod, gateway: paymentMethod.id };\n        }\n\n        if (paymentMethod.initializationData && paymentMethod.initializationData.gateway) {\n            return { ...paymentMethod, id: paymentMethod.initializationData.gateway };\n        }\n\n        if (paymentMethod.id === CheckoutButtonMethodType.BRAINTREE_VENMO) {\n            return { ...paymentMethod, id: CheckoutButtonMethodType.BRAINTREE_PAYPAL };\n        }\n\n        return paymentMethod;\n    }\n\n    private _transformHostedInputValues(\n        values: HostedInputValues,\n        payment: HostedCreditCardInstrument | HostedVaultedInstrument,\n        nonce: string\n    ): PaymentInstrument {\n        return 'instrumentId' in payment ?\n            {\n                ...payment,\n                ccCvv: values.cardCodeVerification,\n                ccNumber: values.cardNumberVerification && this._cardNumberFormatter.unformat(values.cardNumberVerification),\n                hostedFormNonce: nonce,\n            } :\n            {\n                ...payment,\n                ccCvv: values.cardCode,\n                ccExpiry: this._cardExpiryFormatter.toObject(values.cardExpiry || ''),\n                ccName: values.cardName || '',\n                ccNumber: this._cardNumberFormatter.unformat(values.cardNumber || ''),\n                hostedFormNonce: nonce,\n            };\n    }\n\n    private _mapShippingAddress(checkoutState: InternalCheckoutSelectors, paymentMethod?: PaymentMethod): Address | undefined {\n        if (paymentMethod) {\n            const isBopisEnabled = paymentMethod.initializationData?.bopis?.enabled;\n            const requiredAddress = paymentMethod.initializationData?.bopis?.requiredAddress;\n            const consignments = checkoutState.consignments.getConsignments();\n            const isPickup = consignments?.every(consignment => consignment.selectedPickupOption);\n\n            if (isBopisEnabled && isPickup && requiredAddress === 'none') {\n                return undefined;\n            }\n        }\n\n        return checkoutState.shippingAddress.getShippingAddress();\n    }\n}\n","import { FormattedPayload, FormattedVaultedInstrument, HostedVaultedInstrument, PaymentInstrument, VaultedInstrument } from './payment';\n\nexport default function isVaultedInstrument(instrument: PaymentInstrument): instrument is VaultedInstrument {\n    return Boolean((instrument as VaultedInstrument).instrumentId);\n}\n\nexport function isHostedVaultedInstrument(instrument: PaymentInstrument): instrument is HostedVaultedInstrument {\n    return (\n        Boolean((instrument as HostedVaultedInstrument).instrumentId) &&\n        !Object.prototype.hasOwnProperty.call(instrument, 'ccNumber') &&\n        !Object.prototype.hasOwnProperty.call(instrument, 'ccCvv')\n    );\n}\n\nexport function isFormattedVaultedInstrument(instrument: PaymentInstrument): instrument is FormattedPayload<FormattedVaultedInstrument> {\n    const formattedInstrument = (instrument as FormattedPayload<FormattedVaultedInstrument>).formattedPayload;\n\n    if (!formattedInstrument) {\n        return false;\n    }\n\n    return typeof formattedInstrument.bigpay_token === 'string' ||\n        Boolean(formattedInstrument.bigpay_token && formattedInstrument.bigpay_token.token);\n}\n","enum HostedFieldType {\n    CardCode = 'cardCode',\n    CardCodeVerification = 'cardCodeVerification',\n    CardExpiry = 'cardExpiry',\n    CardName = 'cardName',\n    CardNumber = 'cardNumber',\n    CardNumberVerification = 'cardNumberVerification',\n}\n\nexport default HostedFieldType;\n","import HostedFieldType from '../hosted-field-type';\n\nexport default function mapToAutocompleteType(type: HostedFieldType): string {\n    switch (type) {\n    case HostedFieldType.CardCode:\n        return 'cc-csc';\n\n    case HostedFieldType.CardExpiry:\n        return 'cc-exp';\n\n    case HostedFieldType.CardName:\n        return 'cc-name';\n\n    case HostedFieldType.CardNumber:\n        return 'cc-number';\n\n    default:\n        return '';\n    }\n}\n","import { kebabCase } from 'lodash';\n\nimport HostedFieldType from '../hosted-field-type';\n\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport mapToAutocompleteType from './map-to-autocomplete-type';\n\nexport default class HostedAutocompleteFieldset {\n    private _inputs: HTMLInputElement[];\n\n    constructor(\n        private _form: HTMLFormElement,\n        private _fieldTypes: HostedFieldType[],\n        private _inputAggregator: HostedInputAggregator\n    ) {\n        this._inputs = this._fieldTypes.map(type => this._createInput(type));\n    }\n\n    attach(): void {\n        this._inputs.forEach(input => this._form.appendChild(input));\n    }\n\n    detach(): void {\n        this._inputs.forEach(input => {\n            if (!input.parentElement) {\n                return;\n            }\n\n            input.parentElement.removeChild(input);\n        });\n    }\n\n    private _createInput(type: HostedFieldType): HTMLInputElement {\n        const input = document.createElement('input');\n\n        input.autocomplete = mapToAutocompleteType(type);\n        input.id = this._getAutocompleteElementId(type);\n        input.tabIndex = -1;\n        input.style.position = 'absolute';\n        input.style.opacity = '0';\n        input.style.zIndex = '-1';\n\n        input.addEventListener('change', this._handleChange);\n\n        return input;\n    }\n\n    private _handleChange: (event: Event) => void = event => {\n        const targetInput = event.target as HTMLInputElement;\n\n        if (!targetInput) {\n            throw new Error('Unable to get a reference to the target of the change event.');\n        }\n\n        const targetHostedInput = this._inputAggregator.getInputs()\n            .find(input => this._getAutocompleteElementId(input.getType()) === targetInput.id);\n\n        if (!targetHostedInput) {\n            return;\n        }\n\n        targetHostedInput.setValue(targetInput.value);\n    };\n\n    private _getAutocompleteElementId(type: HostedFieldType): string {\n        return `autocomplete-${kebabCase(type)}`;\n    }\n}\n","import { CardInstrument } from '../payment/instrument';\n\nimport HostedFieldType from './hosted-field-type';\nimport { HostedFieldStylesMap } from './hosted-form-options';\nimport HostedFormOrderData from './hosted-form-order-data';\n\nexport enum HostedFieldEventType {\n    AttachRequested = 'HOSTED_FIELD:ATTACH_REQUESTED',\n    SubmitRequested = 'HOSTED_FIELD:SUBMITTED_REQUESTED',\n    ValidateRequested = 'HOSTED_FIELD:VALIDATE_REQUESTED',\n}\n\nexport interface HostedFieldEventMap {\n    [HostedFieldEventType.AttachRequested]: HostedFieldAttachEvent;\n    [HostedFieldEventType.SubmitRequested]: HostedFieldSubmitRequestEvent;\n    [HostedFieldEventType.ValidateRequested]: HostedFieldValidateRequestEvent;\n}\n\nexport type HostedFieldEvent = (\n    HostedFieldAttachEvent |\n    HostedFieldSubmitRequestEvent |\n    HostedFieldValidateRequestEvent\n);\n\nexport interface HostedFieldAttachEvent {\n    type: HostedFieldEventType.AttachRequested;\n    payload: {\n        accessibilityLabel?: string;\n        cardInstrument?: CardInstrument;\n        fontUrls?: string[];\n        placeholder?: string;\n        styles?: HostedFieldStylesMap;\n        origin?: string;\n        type: HostedFieldType;\n    };\n}\n\nexport interface HostedFieldSubmitRequestEvent {\n    type: HostedFieldEventType.SubmitRequested;\n    payload: {\n        data: HostedFormOrderData;\n        fields: HostedFieldType[];\n    };\n}\n\nexport interface HostedFieldValidateRequestEvent {\n    type: HostedFieldEventType.ValidateRequested;\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport { PaymentErrorData, PaymentErrorResponseBody } from '../../common/error';\nimport HostedFieldType from '../hosted-field-type';\n\nimport HostedInputInitializeErrorData from './hosted-input-initialize-error-data';\nimport HostedInputValidateResults from './hosted-input-validate-results';\n\n// Event types\nexport enum HostedInputEventType {\n    AttachSucceeded = 'HOSTED_INPUT:ATTACH_SUCCEEDED',\n    AttachFailed = 'HOSTED_INPUT:ATTACH_FAILED',\n    BinChanged = 'HOSTED_INPUT:BIN_CHANGED',\n    Blurred = 'HOSTED_INPUT:BLURRED',\n    Changed = 'HOSTED_INPUT:CHANGED',\n    CardTypeChanged = 'HOSTED_INPUT:CARD_TYPE_CHANGED',\n    Entered = 'HOSTED_INPUT:ENTERED',\n    Focused = 'HOSTED_INPUT:FOCUSED',\n    SubmitSucceeded = 'HOSTED_INPUT:SUBMIT_SUCCEEDED',\n    SubmitFailed = 'HOSTED_INPUT:SUBMIT_FAILED',\n    Validated = 'HOSTED_INPUT:VALIDATED',\n}\n\n// Event mapping\nexport interface HostedInputEventMap {\n    [HostedInputEventType.AttachSucceeded]: HostedInputAttachSuccessEvent;\n    [HostedInputEventType.AttachFailed]: HostedInputAttachErrorEvent;\n    [HostedInputEventType.BinChanged]: HostedInputBinChangeEvent;\n    [HostedInputEventType.Blurred]: HostedInputBlurEvent;\n    [HostedInputEventType.Changed]: HostedInputChangeEvent;\n    [HostedInputEventType.CardTypeChanged]: HostedInputCardTypeChangeEvent;\n    [HostedInputEventType.Entered]: HostedInputEnterEvent;\n    [HostedInputEventType.Focused]: HostedInputFocusEvent;\n    [HostedInputEventType.SubmitSucceeded]: HostedInputSubmitSuccessEvent;\n    [HostedInputEventType.SubmitFailed]: HostedInputSubmitErrorEvent;\n    [HostedInputEventType.Validated]: HostedInputValidateEvent;\n}\n\n// Events\nexport type HostedInputEvent = (\n    HostedInputAttachSuccessEvent |\n    HostedInputAttachErrorEvent |\n    HostedInputBinChangeEvent |\n    HostedInputBlurEvent |\n    HostedInputChangeEvent |\n    HostedInputCardTypeChangeEvent |\n    HostedInputEnterEvent |\n    HostedInputFocusEvent |\n    HostedInputSubmitSuccessEvent |\n    HostedInputSubmitErrorEvent |\n    HostedInputValidateEvent\n);\n\nexport interface HostedInputAttachSuccessEvent {\n    type: HostedInputEventType.AttachSucceeded;\n}\n\nexport interface HostedInputAttachErrorEvent {\n    type: HostedInputEventType.AttachFailed;\n    payload: {\n        error: HostedInputInitializeErrorData;\n    };\n}\n\nexport interface HostedInputBinChangeEvent {\n    type: HostedInputEventType.BinChanged;\n    payload: {\n        bin?: string;\n    };\n}\n\nexport interface HostedInputBlurEvent {\n    type: HostedInputEventType.Blurred;\n    payload: {\n        fieldType: HostedFieldType;\n    };\n}\n\nexport interface HostedInputChangeEvent {\n    type: HostedInputEventType.Changed;\n    payload: {\n        fieldType: HostedFieldType;\n    };\n}\n\nexport interface HostedInputCardTypeChangeEvent {\n    type: HostedInputEventType.CardTypeChanged;\n    payload: {\n        cardType?: string;\n    };\n}\n\nexport interface HostedInputFocusEvent {\n    type: HostedInputEventType.Focused;\n    payload: {\n        fieldType: HostedFieldType;\n    };\n}\n\nexport interface HostedInputEnterEvent {\n    type: HostedInputEventType.Entered;\n    payload: {\n        fieldType: HostedFieldType;\n    };\n}\n\nexport interface HostedInputSubmitSuccessEvent {\n    type: HostedInputEventType.SubmitSucceeded;\n    payload: {\n        response: Response<unknown>;\n    };\n}\n\nexport interface HostedInputSubmitErrorEvent {\n    type: HostedInputEventType.SubmitFailed;\n    payload: {\n        error: PaymentErrorData;\n        response?: Response<PaymentErrorResponseBody>;\n    };\n}\n\nexport interface HostedInputValidateEvent {\n    type: HostedInputEventType.Validated;\n    payload: HostedInputValidateResults;\n}\n","import { kebabCase } from 'lodash';\n\nimport { IframeEventListener, IframeEventPoster } from '../../common/iframe';\nimport { parseUrl } from '../../common/url';\nimport { HostedFieldEventMap, HostedFieldEventType, HostedFieldValidateRequestEvent } from '../hosted-field-events';\nimport HostedFieldType from '../hosted-field-type';\n\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport { HostedInputEvent, HostedInputEventType } from './hosted-input-events';\nimport HostedInputPaymentHandler from './hosted-input-payment-handler';\nimport HostedInputStyles, { HostedInputStylesMap } from './hosted-input-styles';\nimport HostedInputValidator from './hosted-input-validator';\nimport HostedInputWindow from './hosted-input-window';\n\nexport default class HostedInput {\n    protected _input: HTMLInputElement;\n    protected _previousValue?: string;\n    private _fontLinks?: HTMLLinkElement[];\n    private _isTouched = false;\n\n    /**\n     * @internal\n     */\n    constructor(\n        protected _type: HostedFieldType,\n        protected _form: HTMLFormElement,\n        protected _placeholder: string,\n        protected _accessibilityLabel: string,\n        protected _autocomplete: string,\n        protected _styles: HostedInputStylesMap,\n        protected _fontUrls: string[],\n        protected _eventListener: IframeEventListener<HostedFieldEventMap>,\n        protected _eventPoster: IframeEventPoster<HostedInputEvent>,\n        protected _inputAggregator: HostedInputAggregator,\n        protected _inputValidator: HostedInputValidator,\n        protected _paymentHandler: HostedInputPaymentHandler\n    ) {\n        this._input = document.createElement('input');\n\n        this._input.addEventListener('input', this._handleInput);\n        this._input.addEventListener('blur', this._handleBlur);\n        this._input.addEventListener('focus', this._handleFocus);\n        this._eventListener.addListener(HostedFieldEventType.ValidateRequested, this._handleValidate);\n        this._eventListener.addListener(HostedFieldEventType.SubmitRequested, this._paymentHandler.handle);\n\n        this._configureInput();\n    }\n\n    getType(): HostedFieldType {\n        return this._type;\n    }\n\n    getValue(): string {\n        return this._input.value;\n    }\n\n    setValue(value: string): void {\n        this._processChange(value);\n    }\n\n    isTouched(): boolean {\n        return this._isTouched;\n    }\n\n    attach(): void {\n        this._form.appendChild(this._input);\n        this._form.addEventListener('submit', this._handleSubmit);\n\n        this._loadFonts();\n\n        this._eventPoster.setTarget(window.parent);\n        this._eventListener.listen();\n\n        // fixes the issue on Firefox/Safari where the input doesn't focus properly\n        window.addEventListener('focus', this._forceFocusToInput);\n\n        // Assign itself to the global so it can be accessed by its sibling frames\n        (window as unknown as HostedInputWindow).hostedInput = this;\n\n        this._eventPoster.post({ type: HostedInputEventType.AttachSucceeded });\n    }\n\n    detach(): void {\n        if (this._input.parentElement) {\n            this._input.parentElement.removeChild(this._input);\n        }\n\n        this._form.removeEventListener('submit', this._handleSubmit);\n        this._unloadFonts();\n\n        window.removeEventListener('focus', this._forceFocusToInput);\n\n        this._eventListener.stopListen();\n    }\n\n    protected _formatValue(value: string): void {\n        this._input.value = value;\n    }\n\n    protected _notifyChange(_value: string): void {\n        this._eventPoster.post({\n            type: HostedInputEventType.Changed,\n            payload: {\n                fieldType: this._type,\n            },\n        });\n    }\n\n    private _configureInput(): void {\n        this._input.style.backgroundColor = 'transparent';\n        this._input.style.border = '0';\n        this._input.style.display = 'block';\n        this._input.style.height = '100%';\n        this._input.style.margin = '0';\n        this._input.style.outline = 'none';\n        this._input.style.padding = '0';\n        this._input.style.width = '100%';\n        this._input.id = kebabCase(this._type);\n        this._input.placeholder = this._placeholder;\n        this._input.autocomplete = this._autocomplete;\n\n        this._input.setAttribute('aria-label', this._accessibilityLabel);\n\n        this._applyStyles(this._styles.default);\n\n        switch (this._input.id) {\n            case 'card-code':\n            case 'card-expiry':\n            case 'card-number':\n                this._input.type = 'text';\n                this._input.inputMode = 'numeric';\n                this._input.pattern = \"[0-9]*\";\n                break;\n            case 'card-name':\n                this._input.type = 'text';\n                this._input.inputMode = 'text';\n                break;\n        }\n\n    }\n\n    private _applyStyles(styles: HostedInputStyles = {}): void {\n        const allowedStyles: { [key in keyof Required<HostedInputStyles>]: HostedInputStyles[key] } = {\n            color: styles.color,\n            fontFamily: styles.fontFamily,\n            fontSize: styles.fontSize,\n            fontWeight: styles.fontWeight,\n        };\n        const styleKeys = Object.keys(allowedStyles) as Array<keyof HostedInputStyles>;\n\n        styleKeys.forEach(key => {\n            if (!allowedStyles[key]) {\n                return;\n            }\n\n            this._input.style[key] = allowedStyles[key] || '';\n        });\n    }\n\n    private _loadFonts(): void {\n        if (this._fontLinks) {\n            return;\n        }\n\n        this._fontLinks = this._fontUrls\n            .filter(url => parseUrl(url).hostname === 'fonts.googleapis.com')\n            .filter(url => !document.querySelector(`link[href='${url}'][rel='stylesheet']`))\n            .map(url => {\n                const link = document.createElement('link');\n\n                link.rel = 'stylesheet';\n                link.href = url;\n\n                document.head.appendChild(link);\n\n                return link;\n            });\n    }\n\n    private _unloadFonts(): void {\n        if (!this._fontLinks) {\n            return;\n        }\n\n        this._fontLinks.forEach(link => {\n            if (!link.parentElement) {\n                return;\n            }\n\n            link.parentElement.removeChild(link);\n        });\n\n        this._fontLinks = undefined;\n    }\n\n    private async _validateForm(): Promise<void> {\n        const values = this._inputAggregator.getInputValues();\n        const results = await this._inputValidator.validate(values);\n\n        if (results.isValid) {\n            this._applyStyles(this._styles.default);\n        } else {\n            this._applyStyles(this._styles.error);\n        }\n\n        this._eventPoster.post({\n            type: HostedInputEventType.Validated,\n            payload: results,\n        });\n    }\n\n    private _processChange(value: string): void {\n        if (value === this._previousValue) {\n            return;\n        }\n\n        this._isTouched = true;\n\n        this._formatValue(value);\n        this._validateForm();\n        this._notifyChange(value);\n\n        this._previousValue = value;\n    }\n\n    private _handleInput: (event: Event) => void = event => {\n        const input = event.target as HTMLInputElement;\n\n        this._processChange(input.value);\n    };\n\n    private _handleBlur: (event: Event) => void = () => {\n        this._applyStyles(this._styles.default);\n        this._validateForm();\n\n        this._eventPoster.post({\n            type: HostedInputEventType.Blurred,\n            payload: {\n                fieldType: this._type,\n            },\n        });\n    };\n\n    private _handleFocus: (event: Event) => void = () => {\n        this._applyStyles(this._styles.focus);\n\n        this._eventPoster.post({\n            type: HostedInputEventType.Focused,\n            payload: {\n                fieldType: this._type,\n            },\n        });\n    };\n\n    private _handleValidate: (event: HostedFieldValidateRequestEvent) => void = () => {\n        this._validateForm();\n    };\n\n    private _handleSubmit: (event: Event) => void = event => {\n        event.preventDefault();\n\n        this._eventPoster.post({\n            type: HostedInputEventType.Entered,\n            payload: {\n                fieldType: this._type,\n            },\n        });\n    };\n\n    private _forceFocusToInput = (): void => {\n        if (document.activeElement === document.body) {\n            const browserName = navigator.userAgent.toLowerCase();\n            if (browserName.indexOf('safari') > -1) {\n                if (this._input.value === '') {\n                    this._input.setAttribute('value', ' ');\n                    this._input.setSelectionRange(0, 1);\n                    this._input.setAttribute('value', '');\n                }\n            } else {\n                this._input.focus();\n            }\n        }\n    };\n}\n","import { IframeEventListener, IframeEventPoster } from '../../common/iframe';\nimport { HostedFieldEventMap } from '../hosted-field-events';\nimport HostedFieldType from '../hosted-field-type';\n\nimport CardExpiryFormatter from './card-expiry-formatter';\nimport HostedInput from './hosted-input';\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport { HostedInputEvent } from './hosted-input-events';\nimport HostedInputPaymentHandler from './hosted-input-payment-handler';\nimport { HostedInputStylesMap } from './hosted-input-styles';\nimport HostedInputValidator from './hosted-input-validator';\n\nexport default class HostedCardExpiryInput extends HostedInput {\n    /**\n     * @internal\n     */\n    constructor(\n        form: HTMLFormElement,\n        placeholder: string,\n        accessibilityLabel: string,\n        autocomplete: string,\n        styles: HostedInputStylesMap,\n        fontUrls: string[],\n        eventListener: IframeEventListener<HostedFieldEventMap>,\n        eventPoster: IframeEventPoster<HostedInputEvent>,\n        inputAggregator: HostedInputAggregator,\n        inputValidator: HostedInputValidator,\n        paymentHandler: HostedInputPaymentHandler,\n        private _formatter: CardExpiryFormatter\n    ) {\n        super(\n            HostedFieldType.CardExpiry,\n            form,\n            placeholder,\n            accessibilityLabel,\n            autocomplete,\n            styles,\n            fontUrls,\n            eventListener,\n            eventPoster,\n            inputAggregator,\n            inputValidator,\n            paymentHandler\n        );\n    }\n\n    protected _formatValue(value: string): void {\n        this._input.value = this._formatter.format(value);\n    }\n}\n","import { number } from 'card-validator';\nimport { get } from 'lodash';\n\nimport { IframeEventListener, IframeEventPoster } from '../../common/iframe';\nimport { HostedFieldEventMap } from '../hosted-field-events';\nimport HostedFieldType from '../hosted-field-type';\n\nimport CardNumberFormatter from './card-number-formatter';\nimport HostedAutocompleteFieldset from './hosted-autocomplete-fieldset';\nimport HostedInput from './hosted-input';\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport { HostedInputEvent, HostedInputEventType } from './hosted-input-events';\nimport HostedInputPaymentHandler from './hosted-input-payment-handler';\nimport { HostedInputStylesMap } from './hosted-input-styles';\nimport HostedInputValidator from './hosted-input-validator';\n\nexport default class HostedCardNumberInput extends HostedInput {\n    /**\n     * @internal\n     */\n    constructor(\n        type: HostedFieldType,\n        form: HTMLFormElement,\n        placeholder: string,\n        accessibilityLabel: string,\n        autocomplete: string,\n        styles: HostedInputStylesMap,\n        fontUrls: string[],\n        eventListener: IframeEventListener<HostedFieldEventMap>,\n        eventPoster: IframeEventPoster<HostedInputEvent>,\n        inputAggregator: HostedInputAggregator,\n        inputValidator: HostedInputValidator,\n        paymentHandler: HostedInputPaymentHandler,\n        private _autocompleteFieldset: HostedAutocompleteFieldset,\n        private _formatter: CardNumberFormatter\n    ) {\n        super(\n            type,\n            form,\n            placeholder,\n            accessibilityLabel,\n            autocomplete,\n            styles,\n            fontUrls,\n            eventListener,\n            eventPoster,\n            inputAggregator,\n            inputValidator,\n            paymentHandler\n        );\n    }\n\n    attach(): void {\n        super.attach();\n\n        this._autocompleteFieldset.attach();\n    }\n\n    protected _notifyChange(value: string): void {\n        const cardInfo = number(value).card;\n        const prevCardInfo = this._previousValue && number(this._previousValue).card;\n\n        if (get(prevCardInfo, 'type') !== get(cardInfo, 'type')) {\n            this._eventPoster.post({\n                type: HostedInputEventType.CardTypeChanged,\n                payload: {\n                    cardType: cardInfo ? cardInfo.type : undefined,\n                },\n            });\n        }\n\n        const unformattedValue = this._formatter.unformat(value);\n        const unformattedPreviousValue = this._previousValue ? this._formatter.unformat(this._previousValue) : '';\n\n        const bin = unformattedValue.length >= 6 && number(unformattedValue).isPotentiallyValid ? unformattedValue.substr(0, 6) : '';\n        const prevBin = unformattedPreviousValue.length >= 6 ? unformattedPreviousValue.substr(0, 6) : '';\n\n        if (bin !== prevBin) {\n            this._eventPoster.post({\n                type: HostedInputEventType.BinChanged,\n                payload: { bin },\n            });\n        }\n    }\n\n    protected _formatValue(value: string): void {\n        const selectionEnd = this._input.selectionEnd;\n        const formattedValue = this._formatter.format(value);\n\n        if (selectionEnd === value.length && value.length < formattedValue.length) {\n            this._input.setSelectionRange(formattedValue.length, formattedValue.length);\n        } else {\n            this._input.setSelectionRange(selectionEnd || 0, selectionEnd || 0);\n        }\n\n        this._input.value = formattedValue;\n    }\n}\n","import HostedInput from './hosted-input';\nimport HostedInputValues from './hosted-input-values';\nimport HostedInputWindow from './hosted-input-window';\n\nexport default class HostedInputAggregator {\n    constructor(\n        private _parentWindow: Window\n    ) {}\n\n    getInputs(filter?: (field: HostedInput) => boolean): HostedInput[] {\n        return Array.prototype.slice.call(this._parentWindow.frames)\n            .reduce((result: Window[], frame: Window) => {\n                try {\n                    const input = (frame as HostedInputWindow).hostedInput;\n\n                    if (!input || (filter && !filter(input))) {\n                        return result;\n                    }\n\n                    return [...result, input];\n                } catch (error) {\n                    if (error instanceof DOMException) {\n                        return result;\n                    }\n\n                    // IE11 doesn't throw `DOMException`\n                    if (error instanceof Error && error.message === 'Permission denied') {\n                        return result;\n                    }\n\n                    throw error;\n                }\n            }, []);\n    }\n\n    getInputValues(filter?: (field: HostedInput) => boolean): HostedInputValues {\n        return this.getInputs(filter)\n            .reduce((result, input) => {\n                return {\n                    ...result,\n                    [input.getType()]: input.getValue(),\n                };\n            }, {} as HostedInputValues);\n    }\n}\n","import { flatMap, map, values } from 'lodash';\n\nimport { StandardError } from '../../common/error/errors';\nimport { HostedInputValidateErrorDataMap } from '../iframe-content';\n\nexport default class InvalidHostedFormValueError extends StandardError {\n    constructor(\n        public errors: HostedInputValidateErrorDataMap\n    ) {\n        super([\n            'Unable to proceed due to invalid user input values',\n            ...flatMap(values(errors), fieldErrors => map(fieldErrors, ({ message }) => message)),\n        ].join('. '));\n\n        this.name = 'InvalidHostedFormValueError';\n        this.type = 'invalid_hosted_form_value';\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\nimport { snakeCase } from 'lodash';\n\nimport { PaymentErrorResponseBody } from '../../common/error';\nimport { IframeEventPoster } from '../../common/iframe';\nimport { PaymentRequestSender, PaymentRequestTransformer } from '../../payment';\nimport { InvalidHostedFormValueError } from '../errors';\nimport { HostedFieldSubmitRequestEvent } from '../hosted-field-events';\n\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport { HostedInputEvent, HostedInputEventType, HostedInputSubmitErrorEvent } from './hosted-input-events';\nimport HostedInputStorage from './hosted-input-storage';\nimport HostedInputValidator from './hosted-input-validator';\n\nexport default class HostedInputPaymentHandler {\n    constructor(\n        private _inputAggregator: HostedInputAggregator,\n        private _inputValidator: HostedInputValidator,\n        private _inputStorage: HostedInputStorage,\n        private _eventPoster: IframeEventPoster<HostedInputEvent>,\n        private _paymentRequestSender: PaymentRequestSender,\n        private _paymentRequestTransformer: PaymentRequestTransformer\n    ) {}\n\n    handle: (event: HostedFieldSubmitRequestEvent) => Promise<void> = async ({ payload: { data } }) => {\n        const values = this._inputAggregator.getInputValues();\n        const results = await this._inputValidator.validate(values);\n\n        this._eventPoster.post({\n            type: HostedInputEventType.Validated,\n            payload: results,\n        });\n\n        if (!results.isValid) {\n            const error = new InvalidHostedFormValueError(results.errors);\n\n            return this._eventPoster.post({\n                type: HostedInputEventType.SubmitFailed,\n                payload: {\n                    error: { code: snakeCase(error.name), message: error.message },\n                },\n            });\n        }\n\n        try {\n            const response = await this._paymentRequestSender.submitPayment(\n                this._paymentRequestTransformer.transformWithHostedFormData(\n                    values,\n                    data,\n                    this._inputStorage.getNonce() || ''\n                )\n            );\n\n            this._eventPoster.post({\n                type: HostedInputEventType.SubmitSucceeded,\n                payload: { response },\n            });\n        } catch (error) {\n            let payload: HostedInputSubmitErrorEvent['payload'];\n            \n            if (this._isPaymentErrorResponse(error)) {\n                payload = { error: error.body.errors[0], response: error };\n            } else if ((error instanceof Error)) {\n                payload = { error: { code: snakeCase(error.name), message: error.message } };\n            } else {\n                payload = { error: { code: 'unknown' } };\n            }\n\n            this._eventPoster.post({\n                type: HostedInputEventType.SubmitFailed,\n                payload,\n            });\n        }\n    };\n\n    private _isPaymentErrorResponse(response: any): response is Response<PaymentErrorResponseBody> {\n        const { body: { errors = [] } = {} } = response || {};\n\n        return (\n            typeof (errors[0] && errors[0].code) === 'string' &&\n            typeof (errors[0] && errors[0].message) === 'string'\n        );\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"yup\");","import { creditCardType, cvv, expirationDate, number } from 'card-validator';\nimport { includes } from 'lodash';\nimport { object, string, StringSchema, ValidationError } from 'yup';\n\nimport { CardInstrument } from '../../payment/instrument';\nimport HostedFieldType from '../hosted-field-type';\n\nimport { HostedInputValidateErrorDataMap } from './hosted-input-validate-error-data';\nimport HostedInputValidateResults from './hosted-input-validate-results';\nimport HostedInputValues from './hosted-input-values';\n\nexport default class HostedInputValidator {\n    constructor(\n        private _cardInstrument?: CardInstrument\n    ) {\n        this._configureCardValidator();\n    }\n\n    async validate(values: HostedInputValues): Promise<HostedInputValidateResults> {\n        const requiredFields = Object.keys(values);\n        const schemas: { [key in keyof HostedInputValues]: StringSchema } = {};\n        const results: HostedInputValidateResults = {\n            errors: {},\n            isValid: true,\n        };\n\n        if (includes(requiredFields, HostedFieldType.CardCode)) {\n            schemas.cardCode = this._getCardCodeSchema();\n            results.errors.cardCode = [];\n        }\n\n        if (includes(requiredFields, HostedFieldType.CardCodeVerification)) {\n            schemas.cardCodeVerification = this._getCardCodeVerificationSchema();\n            results.errors.cardCodeVerification = [];\n        }\n\n        if (includes(requiredFields, HostedFieldType.CardExpiry)) {\n            schemas.cardExpiry = this._getCardExpirySchema();\n            results.errors.cardExpiry = [];\n        }\n\n        if (includes(requiredFields, HostedFieldType.CardName)) {\n            schemas.cardName = this._getCardNameSchema();\n            results.errors.cardName = [];\n        }\n\n        if (includes(requiredFields, HostedFieldType.CardNumber)) {\n            schemas.cardNumber = this._getCardNumberSchema();\n            results.errors.cardNumber = [];\n        }\n\n        if (includes(requiredFields, HostedFieldType.CardNumberVerification)) {\n            schemas.cardNumberVerification = this._getCardNumberVerificationSchema();\n            results.errors.cardNumberVerification = [];\n        }\n\n        try {\n            await object(schemas)\n                .validate(values, { abortEarly: false });\n\n            return results;\n        } catch (error) {\n            if (error instanceof Error && error.name !== 'ValidationError') {\n                throw error;\n            }\n\n            return {\n                errors: (Object.keys(results.errors) as Array<keyof HostedInputValidateErrorDataMap>)\n                    .reduce((result, fieldType) => ({\n                        ...result,\n                        [fieldType]: (error as ValidationError).inner\n                            .filter(innerError => innerError.path === fieldType)\n                            .map(innerError => ({\n                                fieldType: innerError.path,\n                                message: innerError.errors.join(' '),\n                                type: innerError.type,\n                            })),\n                    }), {} as HostedInputValidateErrorDataMap),\n                isValid: false,\n            };\n        }\n    }\n\n    private _configureCardValidator(): void {\n        const discoverInfo = creditCardType.getTypeInfo('discover');\n        const visaInfo = creditCardType.getTypeInfo('visa');\n\n        // Need to support 13 digit PAN because some gateways only provide test credit card numbers in this format.\n        creditCardType.updateCard('visa', {\n            lengths: [13, ...(visaInfo.lengths || [])],\n        });\n\n        // Add support for 8-BIN Discover Cards.\n        creditCardType.updateCard('discover', {\n            patterns: [\n                ...(discoverInfo.patterns || []),\n                [810, 817],\n            ],\n        });\n\n        creditCardType.addCard({\n            niceType: 'Mada',\n            type: 'mada',\n            patterns: [\n                400861, 401757, 407197, 407395, 409201,\n                410685, 412565, 417633, 419593, 422817,\n                422818, 422819, 428331, 428671, 428672,\n                428673, 431361, 432328, 434107, 439954,\n                440533, 440647, 440795, 445564, 446393,\n                446404, 446672, 455036, 455708, 457865,\n                458456, 462220, 468540, 468541, 468542,\n                468543, 483010, 483011, 483012, 484783,\n                486094, 486095, 486096, 489317, 489318,\n                489319, 493428, 504300, 506968, 508160,\n                513213, 520058, 521076, 524130, 524514,\n                529415, 529741, 530060, 530906, 531095,\n                531196, 532013, 535825, 535989, 536023,\n                537767, 539931, 543085, 543357, 549760,\n                554180, 557606, 558848, 585265, 588845,\n                588846, 588847, 588848, 588849, 588850,\n                588851, 588982, 588983, 589005, 589206,\n                604906, 605141, 636120, 968201, 968202,\n                968203, 968204, 968205, 968206, 968207,\n                968208, 968209, 968210, 968211,\n            ],\n            gaps: [4, 8, 12],\n            lengths: [16, 18, 19],\n            code: {\n                name: 'CVV',\n                size: 3,\n            },\n        });\n    }\n\n    private _getCardCodeSchema(): StringSchema {\n        return string()\n            .required('CVV is required')\n            .test({\n                message: 'CVV must be valid',\n                name: 'invalid_card_code',\n                test(value) {\n                    const { card } = number((this.parent as HostedInputValues).cardNumber || '');\n\n                    return cvv(value, card && card.code ? card.code.size : undefined).isValid;\n                },\n            });\n    }\n\n    private _getCardCodeVerificationSchema(): StringSchema {\n        return string()\n            .required('CVV is required')\n            .test({\n                message: 'CVV must be valid',\n                name: 'invalid_card_code',\n                test: (value = '') => {\n                    const cardType = this._cardInstrument && this._mapFromInstrumentCardType(this._cardInstrument.brand);\n                    const cardInfo = cardType && creditCardType.getTypeInfo(cardType);\n\n                    return cvv(value, cardInfo && cardInfo.code ? cardInfo.code.size : undefined).isValid;\n                },\n            });\n    }\n\n    private _getCardExpirySchema(): StringSchema {\n        return string()\n            .required('Expiration date is required')\n            .test({\n                message: 'Expiration date must be a valid future date in MM / YY format',\n                name: 'invalid_card_expiry',\n                test: value => expirationDate(value).isValid,\n            });\n    }\n\n    private _getCardNameSchema(): StringSchema {\n        return string()\n            .max(200)\n            .required('Full name is required');\n    }\n\n    private _getCardNumberSchema(): StringSchema {\n        return string()\n            .required('Credit card number is required')\n            .test({\n                message: 'Credit card number must be valid',\n                name: 'invalid_card_number',\n                test: value => number(value).isValid,\n            });\n    }\n\n    private _getCardNumberVerificationSchema(): StringSchema {\n        return string()\n            .required('Credit card number is required')\n            .test({\n                message: 'Credit card number must be valid',\n                name: 'invalid_card_number',\n                test: (value = '') => number(value).isValid,\n            })\n            .test({\n                message: 'The card number entered does not match the card stored in your account',\n                name: 'mismatched_card_number',\n                test: (value = '') => this._cardInstrument ?\n                    value.slice(-this._cardInstrument.last4.length) === this._cardInstrument.last4 :\n                    false,\n            });\n    }\n\n    private _mapFromInstrumentCardType(type: string): string {\n        switch (type) {\n        case 'amex':\n        case 'american_express':\n            return 'american-express';\n\n        case 'diners':\n            return 'diners-club';\n\n        default:\n            return type;\n        }\n    }\n}\n","import { createClient as createBigpayClient } from '@bigcommerce/bigpay-client';\n\nimport { IframeEventListener, IframeEventPoster } from '../../common/iframe';\nimport { appendWww, parseUrl } from '../../common/url';\nimport { PaymentRequestSender, PaymentRequestTransformer } from '../../payment';\nimport { CardInstrument } from '../../payment/instrument';\nimport HostedFieldType from '../hosted-field-type';\n\nimport CardExpiryFormatter from './card-expiry-formatter';\nimport CardNumberFormatter from './card-number-formatter';\nimport getHostedInputStorage from './get-hosted-input-storage';\nimport HostedAutocompleteFieldset from './hosted-autocomplete-fieldset';\nimport HostedCardExpiryInput from './hosted-card-expiry-input';\nimport HostedCardNumberInput from './hosted-card-number-input';\nimport HostedInput from './hosted-input';\nimport HostedInputAggregator from './hosted-input-aggregator';\nimport HostedInputPaymentHandler from './hosted-input-payment-handler';\nimport { HostedInputStylesMap } from './hosted-input-styles';\nimport HostedInputValidator from './hosted-input-validator';\nimport mapToAccessibilityLabel from './map-to-accessibility-label';\nimport mapToAutocompleteType from './map-to-autocomplete-type';\n\nexport default class HostedInputFactory {\n    constructor(\n        private _parentOrigin: string\n    ) {}\n\n    create(\n        form: HTMLFormElement,\n        type: HostedFieldType,\n        styles: HostedInputStylesMap = {},\n        fontUrls: string[] = [],\n        placeholder = '',\n        accessibilityLabel: string = mapToAccessibilityLabel(type),\n        cardInstrument?: CardInstrument\n    ): HostedInput {\n        const autocomplete = mapToAutocompleteType(type);\n\n        if (type === HostedFieldType.CardNumber) {\n            return this._createNumberInput(type, form, styles, fontUrls, placeholder, accessibilityLabel, autocomplete);\n        }\n\n        if (type === HostedFieldType.CardNumberVerification) {\n            return this._createNumberInput(type, form, styles, fontUrls, placeholder, accessibilityLabel, autocomplete, cardInstrument);\n        }\n\n        if (type === HostedFieldType.CardExpiry) {\n            return this._createExpiryInput(form, styles, fontUrls, placeholder, accessibilityLabel, autocomplete);\n        }\n\n        if (type === HostedFieldType.CardCodeVerification) {\n            return this._createInput(type, form, styles, fontUrls, placeholder, accessibilityLabel, autocomplete, cardInstrument);\n        }\n\n        return this._createInput(type, form, styles, fontUrls, placeholder, accessibilityLabel, autocomplete);\n    }\n\n    normalizeParentOrigin(origin: string): void {\n        if (this._parentOrigin === origin) {\n            return;\n        }\n\n        if (this._parentOrigin !== appendWww(parseUrl(origin)).origin &&\n            origin !== appendWww(parseUrl(this._parentOrigin)).origin) {\n            return;\n        }\n\n        this._parentOrigin = origin;\n    }\n\n    getParentOrigin(): string {\n        return this._parentOrigin;\n    }\n\n    private _createExpiryInput(\n        form: HTMLFormElement,\n        styles: HostedInputStylesMap,\n        fontUrls: string[],\n        placeholder: string,\n        accessibilityLabel = '',\n        autocomplete = ''\n    ): HostedCardExpiryInput {\n        return new HostedCardExpiryInput(\n            form,\n            placeholder,\n            accessibilityLabel,\n            autocomplete,\n            styles,\n            fontUrls,\n            new IframeEventListener(this._parentOrigin),\n            new IframeEventPoster(this._parentOrigin, window.parent),\n            new HostedInputAggregator(window.parent),\n            new HostedInputValidator(),\n            this._createPaymentHandler(),\n            new CardExpiryFormatter()\n        );\n    }\n\n    private _createNumberInput(\n        type: HostedFieldType,\n        form: HTMLFormElement,\n        styles: HostedInputStylesMap,\n        fontUrls: string[],\n        placeholder: string,\n        accessibilityLabel = '',\n        autocomplete = '',\n        cardInstrument?: CardInstrument\n    ): HostedCardNumberInput {\n        return new HostedCardNumberInput(\n            type,\n            form,\n            placeholder,\n            accessibilityLabel,\n            autocomplete,\n            styles,\n            fontUrls,\n            new IframeEventListener(this._parentOrigin),\n            new IframeEventPoster(this._parentOrigin, window.parent),\n            new HostedInputAggregator(window.parent),\n            new HostedInputValidator(cardInstrument),\n            this._createPaymentHandler(cardInstrument),\n            new HostedAutocompleteFieldset(\n                form,\n                [HostedFieldType.CardCode, HostedFieldType.CardExpiry, HostedFieldType.CardName],\n                new HostedInputAggregator(window.parent)\n            ),\n            new CardNumberFormatter()\n        );\n    }\n\n    private _createInput(\n        type: HostedFieldType,\n        form: HTMLFormElement,\n        styles: HostedInputStylesMap,\n        fontUrls: string[],\n        placeholder: string,\n        accessibilityLabel = '',\n        autocomplete = '',\n        cardInstrument?: CardInstrument\n    ): HostedInput {\n        return new HostedInput(\n            type,\n            form,\n            placeholder,\n            accessibilityLabel,\n            autocomplete,\n            styles,\n            fontUrls,\n            new IframeEventListener(this._parentOrigin),\n            new IframeEventPoster(this._parentOrigin, window.parent),\n            new HostedInputAggregator(window.parent),\n            new HostedInputValidator(cardInstrument),\n            this._createPaymentHandler(cardInstrument)\n        );\n    }\n\n    private _createPaymentHandler(\n        cardInstrument?: CardInstrument\n    ): HostedInputPaymentHandler {\n        return new HostedInputPaymentHandler(\n            new HostedInputAggregator(window.parent),\n            new HostedInputValidator(cardInstrument),\n            getHostedInputStorage(),\n            new IframeEventPoster(this._parentOrigin, window.parent),\n            new PaymentRequestSender(createBigpayClient()),\n            new PaymentRequestTransformer()\n        );\n    }\n}\n","import HostedFieldType from '../hosted-field-type';\n\nexport default function mapToAccessibilityLabel(type: HostedFieldType): string {\n    switch (type) {\n    case HostedFieldType.CardCode:\n    case HostedFieldType.CardCodeVerification:\n        return 'CVC';\n\n    case HostedFieldType.CardExpiry:\n        return 'Expiration';\n\n    case HostedFieldType.CardName:\n        return 'Name on card';\n\n    case HostedFieldType.CardNumber:\n    case HostedFieldType.CardNumberVerification:\n        return 'Credit card number';\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\nexport default class InvalidHostedFormConfigError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Unable to proceed due to invalid configuration provided for the hosted payment form.');\n\n        this.name = 'InvalidHostedFormConfigError';\n        this.type = 'invalid_hosted_form_config';\n    }\n}\n","import { fromEvent } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { IframeEventListener } from '../../common/iframe';\nimport { InvalidHostedFormConfigError } from '../errors';\nimport { HostedFieldAttachEvent, HostedFieldEventMap, HostedFieldEventType } from '../hosted-field-events';\n\nimport HostedInput from './hosted-input';\nimport HostedInputFactory from './hosted-input-factory';\nimport HostedInputStorage from './hosted-input-storage';\n\ninterface EventTargetLike<TEvent> {\n    addListener(eventName: string, handler: (event: TEvent) => void): void;\n    removeListener(eventName: string, handler: (event: TEvent) => void): void;\n}\n\nexport default class HostedInputInitializer {\n    constructor(\n        private _factory: HostedInputFactory,\n        private _storage: HostedInputStorage,\n        private _eventListener: IframeEventListener<HostedFieldEventMap>\n    ) { }\n\n    initialize(containerId: string, nonce?: string): Promise<HostedInput> {\n        if (nonce) {\n            this._storage.setNonce(nonce);\n        }\n\n        const form = this._createFormContainer(containerId);\n\n        this._resetPageStyles(containerId);\n        this._eventListener.listen();\n\n        return fromEvent<HostedFieldAttachEvent>(\n            this._eventListener as EventTargetLike<HostedFieldAttachEvent>,\n            HostedFieldEventType.AttachRequested\n        )\n            .pipe(\n                map(({ payload }) => {\n                    const { accessibilityLabel, cardInstrument, fontUrls, placeholder, styles, origin, type } = payload;\n\n                    if (origin) {\n                        this._factory.normalizeParentOrigin(origin);\n                    }\n\n                    const field = this._factory.create(form, type, styles, fontUrls, placeholder, accessibilityLabel, cardInstrument);\n\n                    field.attach();\n\n                    return field;\n                }),\n                take(1)\n            )\n            .toPromise();\n    }\n\n    private _resetPageStyles(containerId: string) {\n        const html = document.querySelector('html');\n        const body = document.querySelector('body');\n        const container = document.getElementById(containerId);\n\n        [html, body, container]\n            .forEach(node => {\n                if (!node) {\n                    return;\n                }\n\n                node.style.height = '100%';\n                node.style.width = '100%';\n                node.style.overflow = 'hidden';\n                node.style.padding = '0';\n                node.style.margin = '0';\n            });\n    }\n\n    private _createFormContainer(containerId: string): HTMLFormElement {\n        const container = document.getElementById(containerId);\n\n        if (!container) {\n            throw new InvalidHostedFormConfigError('Unable to proceed because the provided container ID is not valid.');\n        }\n\n        const form = document.createElement('form');\n        const button = document.createElement('button');\n\n        form.noValidate = true;\n        form.style.height = '100%';\n        form.style.width = '100%';\n        button.style.display = 'none';\n\n        container.appendChild(form);\n        form.appendChild(button);\n\n        return form;\n    }\n}\n","import { IframeEventListener } from '../../common/iframe';\nimport { HostedFieldEventMap } from '../hosted-field-events';\n\nimport getHostedInputStorage from './get-hosted-input-storage';\nimport HostedInput from './hosted-input';\nimport HostedInputFactory from './hosted-input-factory';\nimport HostedInputInitializer from './hosted-input-initializer';\nimport HostedInputOptions from './hosted-input-options';\n\nexport default function initializeHostedInput(options: HostedInputOptions): Promise<HostedInput> {\n    const { containerId, nonce, parentOrigin } = options;\n    const initializer = new HostedInputInitializer(\n        new HostedInputFactory(parentOrigin),\n        getHostedInputStorage(),\n        new IframeEventListener<HostedFieldEventMap>(parentOrigin)\n    );\n\n    return initializer.initialize(containerId, nonce);\n}\n","import { IframeEventPoster } from '../../common/iframe';\n\nimport { HostedInputAttachErrorEvent, HostedInputEventType } from './hosted-input-events';\nimport HostedInputInitializeErrorData from './hosted-input-initialize-error-data';\n\nconst poster = new IframeEventPoster<HostedInputAttachErrorEvent>('*', window.parent);\n\nexport default function notifyInitializeError(error: HostedInputInitializeErrorData): void {\n    poster.post({\n        type: HostedInputEventType.AttachFailed,\n        payload: { error },\n    });\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","require","message","object","name","type","setPrototypeOf","__proto__","Error","captureStackTrace","stack","parseUrl","url","test","anchor","document","createElement","href","port","indexOf","hostname","hash","origin","protocol","pathname","search","appendWww","replace","target","descriptor","bindMethodDecorator","decoratedTarget","getOwnPropertyNames","forEach","getOwnPropertyDescriptor","bindClassDecorator","_","method","boundMethod","bind","this","set","isIframeEvent","sourceOrigin","_sourceOrigins","_isListening","_listeners","listen","window","addEventListener","_handleMessage","stopListen","removeEventListener","addListener","listener","listeners","push","removeListener","index","splice","trigger","event","data","setNonce","nonce","_nonce","getNonce","storage","getHostedInputStorage","targetOrigin","_targetWindow","_targetOrigin","post","options","targetWindow","result","fromEvent","pipe","filter","successType","errorType","map","take","toPromise","postMessage","setTarget","_client","submitPayment","payload","Promise","resolve","reject","error","response","_transformResponse","initializeOffsitePayment","headers","body","status","statusText","mapToInternalAddress","address","consignments","addressId","id","isBillingAddressLike","length","firstName","lastName","company","addressLine1","address1","addressLine2","address2","city","province","stateOrProvince","provinceCode","stateOrProvinceCode","postCode","postalCode","country","countryCode","phone","customFields","_decimalPlaces","toInteger","amount","Math","round","pow","CheckoutButtonMethodType","couponTypes","mapToInternalCoupon","coupon","code","discount","displayName","discountType","couponType","mapToInternalGiftCertificate","giftCertificate","discountedAmount","used","remainingBalance","remaining","balance","purchaseDate","mapToInternalLineItems","itemMap","decimalPlaces","idKey","keys","reduce","item","amountTransformer","imageUrl","amountAfterDiscount","integerAmount","integerAmountAfterDiscount","integerUnitPrice","integerUnitPriceAfterDiscount","integerDiscount","quantity","sender","recipient","attributes","variantId","mapGiftCertificateToInternalLineItem","extendedListPrice","extendedSalePrice","discountAmount","listPrice","salePrice","downloadsPageUrl","downloadPageUrl","brand","sku","categoryNames","productId","option","addedByPromotion","mapToInternalLineItem","mapToInternalLineItemType","mapToInternalCart","checkout","promotions","notifications","cart","currency","items","lineItems","coupons","sum","discountNotifications","promotion","banners","banner","placeholders","messageHtml","text","totalDiscountedAmount","giftCertificates","certificate","appliedGiftCertificates","keyBy","shipping","shippingCostTotal","amountBeforeDiscount","shippingCostBeforeDiscount","integerAmountBeforeDiscount","required","some","physicalItems","lineItem","isShippingRequired","subtotal","storeCredit","customer","taxSubtotal","taxTotal","taxes","handling","handlingCostTotal","grandTotal","MissingDataErrorType","subtype","MissingBillingAddress","MissingCart","MissingConsignments","MissingCheckout","MissingCustomer","MissingCheckoutConfig","MissingOrderConfig","MissingOrder","MissingOrderId","MissingPayment","MissingPaymentToken","MissingPaymentMethod","MissingShippingAddress","getErrorMessage","mapToInternalCustomer","billingAddress","addresses","customerId","isGuest","email","fullName","join","customerGroupName","customerGroup","format","split","RegExp","month","year","trimmedMonth","slice","trimmedYear","toObject","card","number","maxLength","max","creditCardType","info","lengths","unformattedValue","unformat","gaps","gapIndex","output","mapToInternalOrder","order","orderMeta","payments","orderId","customerCanBeCreated","payment","mapToInternalOrderPayment","baseAmount","token","orderToken","callbackUrl","providerId","detail","socialData","mapToInternalSocialDataList","hasDigitalItems","isDownloadable","isComplete","mapToStoreCredit","orderAmount","orderAmountAsInteger","find","isDefaultOrderPayment","step","helpText","instructions","returnUrl","socialDataObject","digitalItems","socialMedia","description","image","link","shareText","sharingLink","channelName","channel","channelCode","mapToInternalShippingOption","isSelected","module","price","cost","selected","isRecommended","transitTime","_cardExpiryFormatter","_cardNumberFormatter","transform","checkoutState","instrument","getBillingAddress","getCheckout","getCustomer","getOrder","paymentMethod","paymentMethods","getPaymentMethod","methodId","gatewayId","shippingAddress","_mapShippingAddress","getConsignments","shippingOption","getShippingOption","storeConfig","config","getStoreConfig","contextConfig","getContextConfig","instrumentMeta","instruments","getInstrumentsMeta","paymentMeta","getPaymentMethodsMeta","getOrderMeta","internalCustomer","authToken","paymentData","Boolean","instrumentId","formattedInstrument","formattedPayload","bigpay_token","isFormattedVaultedInstrument","getPaymentToken","vaultAccessToken","additionalAction","_transformPaymentMethod","quoteMeta","request","geoCountryCode","source","store","pick","storeProfile","transformWithHostedFormData","values","paymentMethodMeta","consignment","selectedShippingOption","_transformHostedInputValues","context","gateway","initializationData","ccCvv","cardCodeVerification","ccNumber","cardNumberVerification","hostedFormNonce","cardCode","ccExpiry","cardExpiry","ccName","cardName","cardNumber","isBopisEnabled","bopis","enabled","requiredAddress","isPickup","every","selectedPickupOption","getShippingAddress","HostedFieldType","mapToAutocompleteType","_form","_fieldTypes","_inputAggregator","_handleChange","targetInput","targetHostedInput","getInputs","input","_getAutocompleteElementId","getType","setValue","_inputs","_createInput","attach","appendChild","detach","parentElement","removeChild","autocomplete","tabIndex","style","position","opacity","zIndex","kebabCase","HostedFieldEventType","HostedInputEventType","_type","_placeholder","_accessibilityLabel","_autocomplete","_styles","_fontUrls","_eventListener","_eventPoster","_inputValidator","_paymentHandler","_isTouched","_handleInput","_processChange","_handleBlur","_applyStyles","default","_validateForm","Blurred","fieldType","_handleFocus","focus","Focused","_handleValidate","_handleSubmit","preventDefault","Entered","_forceFocusToInput","activeElement","navigator","userAgent","toLowerCase","_input","setAttribute","setSelectionRange","ValidateRequested","SubmitRequested","handle","_configureInput","getValue","isTouched","_loadFonts","parent","hostedInput","AttachSucceeded","_unloadFonts","_formatValue","_notifyChange","_value","Changed","backgroundColor","border","display","height","margin","outline","padding","width","placeholder","inputMode","pattern","styles","allowedStyles","color","fontFamily","fontSize","fontWeight","_fontLinks","querySelector","rel","head","undefined","getInputValues","validate","results","isValid","Validated","_previousValue","form","accessibilityLabel","fontUrls","eventListener","eventPoster","inputAggregator","inputValidator","paymentHandler","_formatter","_autocompleteFieldset","cardInfo","prevCardInfo","CardTypeChanged","cardType","unformattedPreviousValue","bin","isPotentiallyValid","substr","BinChanged","selectionEnd","formattedValue","_parentWindow","Array","frames","frame","DOMException","errors","flatMap","fieldErrors","_inputStorage","_paymentRequestSender","_paymentRequestTransformer","SubmitFailed","snakeCase","SubmitSucceeded","_isPaymentErrorResponse","_cardInstrument","_configureCardValidator","requiredFields","schemas","includes","_getCardCodeSchema","_getCardCodeVerificationSchema","_getCardExpirySchema","_getCardNameSchema","_getCardNumberSchema","_getCardNumberVerificationSchema","abortEarly","inner","innerError","path","discoverInfo","visaInfo","patterns","niceType","size","string","cvv","_mapFromInstrumentCardType","expirationDate","last4","_parentOrigin","create","cardInstrument","mapToAccessibilityLabel","_createNumberInput","_createExpiryInput","normalizeParentOrigin","getParentOrigin","_createPaymentHandler","_factory","_storage","initialize","containerId","_createFormContainer","_resetPageStyles","AttachRequested","field","getElementById","node","overflow","container","button","noValidate","initializeHostedInput","parentOrigin","poster","notifyInitializeError","AttachFailed"],"sourceRoot":""}